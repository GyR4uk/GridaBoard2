[{"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\index.js":"1","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\serviceWorker.js":"2","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\client\\Root.js":"3","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\shared\\App.js":"4","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\styles\\theme.js":"5","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\store\\rootReducer.ts":"6","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\store\\reducers\\pointerTracer.js":"7","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\store\\reducers\\authorization.js":"8","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\store\\reducers\\ui.js":"9","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\pages\\Home.tsx":"10","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\penstorage\\InkStorage.ts":"11","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\navbar\\UpperNav.tsx":"12","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\navbar\\PrintButton.tsx":"13","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\navbar\\CalibrationMenual.tsx":"14","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\navbar\\FileLoad.tsx":"15","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\buttons\\TracePointButton.tsx":"16","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\buttons\\FullScreenButton.tsx":"17","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\buttons\\ZoomButton.tsx":"18","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\buttons\\RotateButton.tsx":"19","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\navbar\\PageNumbering.tsx":"20","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\buttons\\BackgroundButton.tsx":"21","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\buttons\\FitButton.tsx":"22","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\navbar\\ColorButtons.tsx":"23","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\buttons\\ConnectButton.tsx":"24","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\buttons\\PenTypeButton.tsx":"25","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\index.ts":"26","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\penstorage\\EventSystem.ts":"27","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\pencomm\\PenManager.ts":"28","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\utils\\UtilsFunc.ts":"29","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\styles\\ThemeManager.ts":"30","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\pencomm\\neosmartpen.ts":"31","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\noteserver\\PaperInfo.ts":"32","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\noteserver\\NoteserverClient.ts":"33","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\renderer\\MixedPageView.tsx":"34","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\types\\index.js":"35","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PrintDataTypes.ts":"36","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\Locales\\i18n.ts":"37","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\PenBasedRenderer.tsx":"38","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\navbar\\Upload.js":"39","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\CanvasColorConverter.ts":"40","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\DataStructure\\index.ts":"41","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\RenderWorkerBase.tsx":"42","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\Save\\SavePdf.tsx":"43","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NeoPdf\\FileBrowserButton.tsx":"44","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\SurfaceMapper\\Calibration\\CalibrationButton.tsx":"45","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\DataStructure\\Enums.ts":"46","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\utils\\JsUtils.js":"47","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\Modal\\PrintOptionDialog.tsx":"48","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\penstorage\\index.ts":"49","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\DataStructure\\NeoDot.ts":"50","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\renderer\\pdf\\NeoPdfViewer.tsx":"51","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NeoPdf\\NeoPdfManager.ts":"52","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\DataStructure\\NeoStroke.ts":"53","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\DrawCurves.ts":"54","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\pencomm\\pencomm.ts":"55","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NeoPdf\\FileBrowser.tsx":"56","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\PenBasedRenderWorker.tsx":"57","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PrintPdfMain.tsx":"58","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\SurfaceMapper\\Calibration\\CalibrationDialog.tsx":"59","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\pencomm\\pencomm_event.ts":"60","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NeoPdf\\NeoPdfDocument.ts":"61","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\pencomm\\pencomm_const.ts":"62","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\pencomm\\pen_util_func.ts":"63","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\renderer\\pdf\\Page.tsx":"64","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\pencomm\\pencomm_enum.ts":"65","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\pencomm\\pencomm_base.ts":"66","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\UtilFunc.ts":"67","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\SurfaceSplitter.ts":"68","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PagesForPrint.tsx":"69","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PageOrientation.jsx":"70","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\SurfaceMapper\\MappingItem.ts":"71","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\SurfaceMapper\\MappingStorage.ts":"72","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NeoPdf\\NeoPdfPage.ts":"73","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\DataStructure\\Structures.ts":"74","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\index.ts":"75","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\SurfaceInfo.ts":"76","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\NcodeRasterizer.tsx":"77","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PageForPrint.tsx":"78","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\NcodeConstans.ts":"79","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\index.ts":"80","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\NcodeSurfaceDataJson.ts":"81","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\NcodeFetcher.ts":"82","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\index.ts":"83","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\DataTypes.ts":"84","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\CoordinateTanslater.ts":"85","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\SolveTransform.ts":"86","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\EchelonMatrix.ts":"87","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\GaussianElimination.ts":"88","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\pages\\Posts.tsx":"89","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\StorageRenderWorker.tsx":"90","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\StorageRenderer.tsx":"91","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\index.ts":"92","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\constants.ts":"93","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\pages\\index.tsx":"94","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\pages\\Post.tsx":"95","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\pages\\About.tsx":"96","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\GoogleBtn.js":"97","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\GridaController.tsx":"98","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PrintPdfButton.tsx":"99","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\cloud_util_func.ts":"100","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\DefaultOption.ts":"101"},{"size":829,"mtime":1607317176919,"results":"102","hashOfConfig":"103"},{"size":5227,"mtime":1607317176967,"results":"104","hashOfConfig":"103"},{"size":930,"mtime":1607317176722,"results":"105","hashOfConfig":"103"},{"size":660,"mtime":1607317176968,"results":"106","hashOfConfig":"103"},{"size":1203,"mtime":1607317176984,"results":"107","hashOfConfig":"103"},{"size":402,"mtime":1607317176975,"results":"108","hashOfConfig":"103"},{"size":530,"mtime":1607317176974,"results":"109","hashOfConfig":"103"},{"size":1129,"mtime":1607319735934,"results":"110","hashOfConfig":"103"},{"size":4388,"mtime":1607317176975,"results":"111","hashOfConfig":"103"},{"size":10081,"mtime":1607418790844,"results":"112","hashOfConfig":"103"},{"size":9839,"mtime":1607324815358,"results":"113","hashOfConfig":"103"},{"size":690,"mtime":1607317176737,"results":"114","hashOfConfig":"103"},{"size":714,"mtime":1607347728021,"results":"115","hashOfConfig":"103"},{"size":703,"mtime":1607406204500,"results":"116","hashOfConfig":"103"},{"size":1475,"mtime":1607347728013,"results":"117","hashOfConfig":"103"},{"size":1606,"mtime":1607347728005,"results":"118","hashOfConfig":"103"},{"size":1488,"mtime":1607347727995,"results":"119","hashOfConfig":"103"},{"size":797,"mtime":1607347728008,"results":"120","hashOfConfig":"103"},{"size":1695,"mtime":1607347728002,"results":"121","hashOfConfig":"103"},{"size":2804,"mtime":1607347728018,"results":"122","hashOfConfig":"103"},{"size":3001,"mtime":1607347727985,"results":"123","hashOfConfig":"103"},{"size":4310,"mtime":1607347727992,"results":"124","hashOfConfig":"103"},{"size":8836,"mtime":1607322959894,"results":"125","hashOfConfig":"103"},{"size":2784,"mtime":1607347727989,"results":"126","hashOfConfig":"103"},{"size":11492,"mtime":1607347727998,"results":"127","hashOfConfig":"103"},{"size":797,"mtime":1607417491135,"results":"128","hashOfConfig":"103"},{"size":3336,"mtime":1607324316034,"results":"129","hashOfConfig":"103"},{"size":7539,"mtime":1607324316034,"results":"130","hashOfConfig":"103"},{"size":3268,"mtime":1607344776509,"results":"131","hashOfConfig":"103"},{"size":5627,"mtime":1607329529982,"results":"132","hashOfConfig":"103"},{"size":15253,"mtime":1607347728027,"results":"133","hashOfConfig":"103"},{"size":6464,"mtime":1607323506473,"results":"134","hashOfConfig":"103"},{"size":5612,"mtime":1607335184395,"results":"135","hashOfConfig":"103"},{"size":4070,"mtime":1607392366609,"results":"136","hashOfConfig":"103"},{"size":24,"mtime":1607317594439,"results":"137","hashOfConfig":"103"},{"size":2951,"mtime":1607420128866,"results":"138","hashOfConfig":"103"},{"size":1201,"mtime":1607317176689,"results":"139","hashOfConfig":"103"},{"size":13265,"mtime":1607333846598,"results":"140","hashOfConfig":"103"},{"size":9744,"mtime":1607415111708,"results":"141","hashOfConfig":"103"},{"size":3260,"mtime":1607420106538,"results":"142","hashOfConfig":"103"},{"size":271,"mtime":1607317176924,"results":"143","hashOfConfig":"103"},{"size":19057,"mtime":1607392965884,"results":"144","hashOfConfig":"103"},{"size":1410,"mtime":1607329743138,"results":"145","hashOfConfig":"103"},{"size":2664,"mtime":1607347727977,"results":"146","hashOfConfig":"103"},{"size":754,"mtime":1607333748074,"results":"147","hashOfConfig":"103"},{"size":863,"mtime":1607323077606,"results":"148","hashOfConfig":"103"},{"size":286,"mtime":1607317176960,"results":"149","hashOfConfig":"103"},{"size":15311,"mtime":1607406965202,"results":"150","hashOfConfig":"103"},{"size":62,"mtime":1607317176937,"results":"151","hashOfConfig":"103"},{"size":528,"mtime":1607317176922,"results":"152","hashOfConfig":"103"},{"size":2868,"mtime":1607345035309,"results":"153","hashOfConfig":"103"},{"size":2396,"mtime":1607317176711,"results":"154","hashOfConfig":"103"},{"size":2645,"mtime":1607323506478,"results":"155","hashOfConfig":"103"},{"size":7529,"mtime":1607324815358,"results":"156","hashOfConfig":"103"},{"size":28941,"mtime":1607324178359,"results":"157","hashOfConfig":"103"},{"size":2599,"mtime":1607317176709,"results":"158","hashOfConfig":"103"},{"size":14814,"mtime":1607325076022,"results":"159","hashOfConfig":"103"},{"size":8689,"mtime":1607411070283,"results":"160","hashOfConfig":"103"},{"size":5823,"mtime":1607329052826,"results":"161","hashOfConfig":"103"},{"size":1813,"mtime":1607324178360,"results":"162","hashOfConfig":"103"},{"size":8049,"mtime":1607420165385,"results":"163","hashOfConfig":"103"},{"size":513,"mtime":1607317176933,"results":"164","hashOfConfig":"103"},{"size":1404,"mtime":1607317176930,"results":"165","hashOfConfig":"103"},{"size":8434,"mtime":1607396056444,"results":"166","hashOfConfig":"103"},{"size":461,"mtime":1607323792452,"results":"167","hashOfConfig":"103"},{"size":9241,"mtime":1607323753733,"results":"168","hashOfConfig":"103"},{"size":741,"mtime":1607329786188,"results":"169","hashOfConfig":"103"},{"size":7031,"mtime":1607333846598,"results":"170","hashOfConfig":"103"},{"size":3509,"mtime":1607420194467,"results":"171","hashOfConfig":"103"},{"size":1690,"mtime":1607421246143,"results":"172","hashOfConfig":"103"},{"size":2343,"mtime":1607317176718,"results":"173","hashOfConfig":"103"},{"size":5939,"mtime":1607421940636,"results":"174","hashOfConfig":"103"},{"size":4410,"mtime":1607420186781,"results":"175","hashOfConfig":"103"},{"size":3704,"mtime":1607317176685,"results":"176","hashOfConfig":"103"},{"size":27,"mtime":1607317176700,"results":"177","hashOfConfig":"103"},{"size":4612,"mtime":1607421940638,"results":"178","hashOfConfig":"103"},{"size":19766,"mtime":1607418427735,"results":"179","hashOfConfig":"103"},{"size":15393,"mtime":1607421282431,"results":"180","hashOfConfig":"103"},{"size":905,"mtime":1607317176702,"results":"181","hashOfConfig":"103"},{"size":120,"mtime":1607317176683,"results":"182","hashOfConfig":"103"},{"size":2644,"mtime":1607317176705,"results":"183","hashOfConfig":"103"},{"size":3614,"mtime":1607329812291,"results":"184","hashOfConfig":"103"},{"size":220,"mtime":1607317176708,"results":"185","hashOfConfig":"103"},{"size":3033,"mtime":1607415111692,"results":"186","hashOfConfig":"103"},{"size":7527,"mtime":1607415111688,"results":"187","hashOfConfig":"103"},{"size":3929,"mtime":1607329819676,"results":"188","hashOfConfig":"103"},{"size":1068,"mtime":1607317176680,"results":"189","hashOfConfig":"103"},{"size":2144,"mtime":1607317176681,"results":"190","hashOfConfig":"103"},{"size":897,"mtime":1607331645289,"results":"191","hashOfConfig":"103"},{"size":33055,"mtime":1607333846599,"results":"192","hashOfConfig":"103"},{"size":10895,"mtime":1607332706285,"results":"193","hashOfConfig":"103"},{"size":1421,"mtime":1607333512688,"results":"194","hashOfConfig":"103"},{"size":854,"mtime":1607333395769,"results":"195","hashOfConfig":"103"},{"size":176,"mtime":1607333466116,"results":"196","hashOfConfig":"103"},{"size":198,"mtime":1607333540791,"results":"197","hashOfConfig":"103"},{"size":378,"mtime":1607333516955,"results":"198","hashOfConfig":"103"},{"size":3793,"mtime":1607415111703,"results":"199","hashOfConfig":"103"},{"size":4142,"mtime":1607347727982,"results":"200","hashOfConfig":"103"},{"size":7570,"mtime":1607412430347,"results":"201","hashOfConfig":"103"},{"size":5769,"mtime":1607415432387,"results":"202","hashOfConfig":"103"},{"size":907,"mtime":1607420128867,"results":"203","hashOfConfig":"103"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},"5l6bpr",{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"323","usedDeprecatedRules":"217"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"342","usedDeprecatedRules":"217"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":6,"source":"361","usedDeprecatedRules":"217"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"364","messages":"365","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"374","usedDeprecatedRules":"217"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"217"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"406","usedDeprecatedRules":"206"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"409","usedDeprecatedRules":"217"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\index.js",[],[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\serviceWorker.js",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\client\\Root.js",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\shared\\App.js",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\styles\\theme.js",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\store\\rootReducer.ts",[],[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\store\\reducers\\pointerTracer.js",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\store\\reducers\\authorization.js",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\store\\reducers\\ui.js",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\pages\\Home.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\penstorage\\InkStorage.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\navbar\\UpperNav.tsx",[],[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\navbar\\PrintButton.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\navbar\\CalibrationMenual.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\navbar\\FileLoad.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\buttons\\TracePointButton.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\buttons\\FullScreenButton.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\buttons\\ZoomButton.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\buttons\\RotateButton.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\navbar\\PageNumbering.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\buttons\\BackgroundButton.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\buttons\\FitButton.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\navbar\\ColorButtons.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\buttons\\ConnectButton.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\buttons\\PenTypeButton.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\index.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\penstorage\\EventSystem.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\pencomm\\PenManager.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\utils\\UtilsFunc.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\styles\\ThemeManager.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\pencomm\\neosmartpen.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\noteserver\\PaperInfo.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\noteserver\\NoteserverClient.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\renderer\\MixedPageView.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\types\\index.js",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PrintDataTypes.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\Locales\\i18n.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\PenBasedRenderer.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\navbar\\Upload.js",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\CanvasColorConverter.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\DataStructure\\index.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\RenderWorkerBase.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\Save\\SavePdf.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NeoPdf\\FileBrowserButton.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\SurfaceMapper\\Calibration\\CalibrationButton.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\DataStructure\\Enums.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\utils\\JsUtils.js",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\Modal\\PrintOptionDialog.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\penstorage\\index.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\DataStructure\\NeoDot.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\renderer\\pdf\\NeoPdfViewer.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NeoPdf\\NeoPdfManager.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\DataStructure\\NeoStroke.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\DrawCurves.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\pencomm\\pencomm.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NeoPdf\\FileBrowser.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\PenBasedRenderWorker.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PrintPdfMain.tsx",["416"],"import * as React from \"react\";\r\n\r\nimport { IPageOverview, PagesForPrint } from \"./PagesForPrint\";\r\nimport ReactToPrint from 'react-to-print';\r\nimport { IPrintingReport, IPrintOption } from \"./PrintDataTypes\";\r\nimport { compareObject } from \"./UtilFunc\";\r\nimport { getCellMatrixShape } from \"../NcodeSurface/SurfaceSplitter\";\r\nimport { LandscapeOrientation, PortraitOrientation } from \"./PageOrientation\";\r\nimport NeoPdfDocument from \"../NeoPdf/NeoPdfDocument\";\r\n\r\n// let globalPagesCnt = 0;\r\ninterface Props {\r\n  pdf: NeoPdfDocument,\r\n  printOption: IPrintOption,\r\n  updatePrintProgress: Function,\r\n\r\n  /** 숫자가 바뀌면, 프린트한다 */\r\n  printTrigger: number,\r\n\r\n  pagesOverview: IPageOverview[],\r\n\r\n  /** 인쇄가 끝나고 나면 부를 콜백 */\r\n  onAfterPrint?: Function,\r\n}\r\n\r\ninterface State {\r\n  text: string,\r\n  isLoading: boolean,\r\n  shouldRenderPage: boolean,\r\n  renderingCompleted: boolean,\r\n  shouldPrint: boolean,\r\n  // renderPromise: Promise<any>,\r\n}\r\n\r\n/**\r\n * Class\r\n */\r\nexport class PrintPdfMain extends React.Component<Props, State> {\r\n  componentRef: PagesForPrint | null = null;\r\n  printRef: ReactToPrint;\r\n  onAfterPrint: Function;\r\n\r\n  title: string = \"\";\r\n\r\n\r\n  renderedSheets: number[];\r\n  renderedPages: number[];\r\n\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.onAfterPrint = props.onAfterPrint;\r\n\r\n    this.state = {\r\n      text: \"normal\",\r\n      isLoading: false,\r\n      shouldRenderPage: true,\r\n      renderingCompleted: false,\r\n      shouldPrint: false,\r\n      // renderPromise: pr,\r\n    };\r\n    this.clearRenderedPagesArray();\r\n  }\r\n\r\n  private clearRenderedPagesArray = () => {\r\n    this.renderedSheets = [];\r\n    this.renderedPages = [];\r\n  }\r\n\r\n  handleAfterPrint = () => {\r\n    console.log(\"[PrintPdfMain] onAfterPrint called\"); // tslint:disable-line no-console\r\n    this.onAfterPrint();\r\n\r\n  }\r\n\r\n  handleBeforePrint = () => {\r\n    console.log(\"[PrintPdfMain] onBeforePrint called\"); // tslint:disable-line no-console\r\n    return new Promise((resolve: any) => {\r\n      resolve();\r\n      /** 문서의 제목을 얻어오자 */\r\n      const pdf = this.props.pdf;\r\n      pdf.getMetadata().then(stuff => {\r\n        // console.log(stuff); // Metadata object here\r\n        this.title = stuff.info.title ? stuff.info.title : \"\";\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n\r\n  handleOnBeforeGetContent = () => {\r\n    console.log(\"[PrintPdfMain] onBeforeGetContent called\"); // tslint:disable-line no-console\r\n    this.clearRenderedPagesArray();\r\n\r\n    this.setState({ text: \"Loading new text...\", isLoading: true, shouldRenderPage: true });\r\n    return new Promise((resolve: any) => { resolve(); });\r\n  };\r\n\r\n  shouldComponentUpdate(nextProps: Props, nextState: State) {\r\n    if (this.props.printTrigger !== nextProps.printTrigger) {\r\n      this.clearRenderedPagesArray();\r\n      this.setState({ shouldPrint: true });\r\n\r\n      return true;\r\n    }\r\n\r\n    if (nextState.shouldPrint) return true;\r\n\r\n    if (this.props.pdf !== nextProps.pdf) {\r\n      return true;\r\n    }\r\n\r\n    console.log(\"[PrintPdfMain] CHECK START props\");\r\n    compareObject(this.props, nextProps, \"PrintPdfMain\");\r\n\r\n    console.log(\"[PrintPdfMain] CHECK START state\");\r\n    compareObject(this.state, nextState, \"PrintPdfMain\");\r\n\r\n    return false;\r\n  }\r\n\r\n  public OnPagePrepared = (event: { sheetIndex: number, pageNums: number[], completion: number }) => {\r\n    const { sheetIndex, pageNums, completion } = event;\r\n\r\n    const { targetPages, pagesPerSheet } = this.props.printOption;\r\n\r\n    if (completion === 100) {\r\n      if (this.renderedSheets.indexOf(sheetIndex) < 0) {\r\n        this.renderedSheets.push(sheetIndex);\r\n      }\r\n\r\n      this.renderedPages.push(...pageNums);\r\n    }\r\n\r\n    const numCompleted = Object.keys(this.renderedSheets).length;\r\n\r\n    /** callback을 불러준다 */\r\n    if (this.props.updatePrintProgress) {\r\n      const event: IPrintingReport = {\r\n        status: \"progress\",\r\n        preparedPages: [...this.renderedPages],\r\n        numPagesPrepared: this.renderedPages.length,\r\n        numSheetsPrepared: numCompleted,\r\n        completion,\r\n      }\r\n      this.props.updatePrintProgress(event);\r\n    }\r\n\r\n    /** 모든 페이지의 렌더링이 끝났는지 확인한다.  */\r\n    const numSheets = Math.ceil(targetPages.length / pagesPerSheet);\r\n    const pageNo = targetPages[sheetIndex];\r\n\r\n    // const numPages = endPage - startPage + 1;\r\n    console.log(`[PrintPdfMain] Page rendered: ${pageNo} : ${numCompleted}/${numSheets}`);\r\n    if (numCompleted === numSheets) {\r\n      console.log(\"[PrintPdfMain] Print!!!\");\r\n      // console.timeEnd('Function #1');\r\n      this.onPageRenderCompleted();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  setComponentRef = (ref: PagesForPrint) => {\r\n    this.componentRef = ref;\r\n  }\r\n\r\n  setPrinttRef = (ref: ReactToPrint) => {\r\n    this.printRef = ref;\r\n  }\r\n\r\n\r\n  reactToPrintContent = () => {\r\n    return this.componentRef;\r\n  }\r\n\r\n  reactToPrintTrigger = () => {\r\n    // NOTE: could just as easily return <SomeComponent />. Do NOT pass an `onClick` prop\r\n    // to the root node of the returned component as it will be overwritten.\r\n\r\n    // Bad: the `onClick` here will be overwritten by `react-to-print`\r\n    // return <a href=\"#\" onClick={() => alert('This will not work')}>Print this out!</a>;\r\n\r\n    // Good\r\n    // return <a href=\"#\">Print using a Class Component</a>;\r\n    // return <a href=\"#\">Print using a Class Component</a>;\r\n    return \"\";\r\n  }\r\n\r\n  getSnapshotBeforeUpdate = (prevProps: Props, prevState: State) => {\r\n    console.log(\"[PrintPdfMain] getSnapshotBeforeUpdate\");\r\n\r\n    return null;\r\n  }\r\n\r\n\r\n  onPageRenderCompleted = () => {\r\n    this.setState({\r\n      text: \"Rendering Completed\",\r\n      renderingCompleted: true,\r\n    });\r\n  }\r\n\r\n\r\n  componentDidUpdate(prevProps: Props, prevState: State) {\r\n    console.log(\"[PrintPdfMain] componentDidUpdate\");\r\n\r\n    // if (this.state.renderingCompleted !== prevState.renderingCompleted) {\r\n    if (this.state.renderingCompleted) {\r\n      /** 페이지 렌더링이 끝나고 나면 ReactToPrint Component에 handlePrint를 부른다 */\r\n      this.setState({\r\n        text: \"Print start\",\r\n        renderingCompleted: false,\r\n      });\r\n      this.startPrintOnRenderCompleted();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 페이지 렌더링이 끝나고 나면 ReactToPrint Component에 handlePrint를 부른다\r\n   */\r\n  startPrintOnRenderCompleted = () => {\r\n    if (this.printRef) {\r\n      this.printRef.handlePrint();\r\n      this.setState({\r\n        text: \"Print started\",\r\n        shouldPrint: false,\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const { pdf, printOption, pagesOverview } = this.props;\r\n    const { shouldRenderPage, shouldPrint } = this.state;\r\n\r\n    const { pagesPerSheet, direction } = printOption;\r\n    let isLandscape = (direction === \"landscape\");\r\n\r\n    const { rotation } = getCellMatrixShape(pagesPerSheet, direction);\r\n    const isRotationNeeded = rotation === 90;\r\n    if (isRotationNeeded) isLandscape = !isLandscape;\r\n\r\n    // globalPagesCnt++;\r\n    // const { startPage, endPage } = printOption;\r\n\r\n    return (\r\n      <div>\r\n        { shouldPrint ?\r\n          (\r\n            <div style={{ display: \"none\" }}>\r\n              { isLandscape ? (<LandscapeOrientation />) : (<PortraitOrientation />)}\r\n\r\n              <ReactToPrint\r\n                // key={`action-${pdf.fingerprint}-${globalPagesCnt}`}\r\n                ref={this.setPrinttRef}\r\n                content={this.reactToPrintContent}\r\n                documentTitle={this.title}\r\n                onAfterPrint={this.handleAfterPrint}\r\n                onBeforeGetContent={this.handleOnBeforeGetContent}\r\n                onBeforePrint={this.handleBeforePrint}\r\n                removeAfterPrint\r\n              // trigger={this.reactToPrintTrigger}\r\n              />\r\n              <PagesForPrint ref={this.setComponentRef} text={this.state.text}\r\n                // key={`print-${pdf.fingerprint}-${globalPagesCnt}`}\r\n                pdf={pdf}\r\n                pagesOverview={pagesOverview}\r\n                shouldRenderPage={shouldRenderPage}\r\n                OnPagePrepared={this.OnPagePrepared}\r\n                printOption={printOption}\r\n              />\r\n            </div>\r\n          ) : (<></>)\r\n        }\r\n\r\n        { printOption.debugMode > 0 ?\r\n          <PagesForPrint ref={this.setComponentRef} text={this.state.text}\r\n            // key={`screen-${pdf.fingerprint}-${globalPagesCnt}`}\r\n            pdf={pdf}\r\n            pagesOverview={pagesOverview}\r\n            shouldRenderPage={shouldRenderPage}\r\n            OnPagePrepared={null}\r\n            printOption={printOption}\r\n          />\r\n          : <></>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\SurfaceMapper\\Calibration\\CalibrationDialog.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\pencomm\\pencomm_event.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NeoPdf\\NeoPdfDocument.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\pencomm\\pencomm_const.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\pencomm\\pen_util_func.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\renderer\\pdf\\Page.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\pencomm\\pencomm_enum.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\pencomm\\pencomm_base.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\UtilFunc.ts",["417"],"export function compareObject(curr: Object, next: Object, header: string = \"\") {\r\n  for (const [key, value] of Object.entries(next)) {\r\n    if (curr[key] !== value) {\r\n      console.log(`[${header}] state[${key}] was changed, from \"${curr[key]} to \"${value}\"`);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function uuidv4(): string {\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n    // let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n    const r = Math.random() * 16 | 0, v = c === 'x' ? r : ((r & 0x3) | 0x8);\r\n    return v.toString(16);\r\n  });\r\n}\r\n\r\n\r\nexport function getDocumentId(fingerprint: string, pagesPerSheet: number): string {\r\n  return fingerprint + \"/\" + pagesPerSheet.toString();\r\n}\r\n","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\SurfaceSplitter.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PagesForPrint.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PageOrientation.jsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\SurfaceMapper\\MappingItem.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\SurfaceMapper\\MappingStorage.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NeoPdf\\NeoPdfPage.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\DataStructure\\Structures.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\index.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\SurfaceInfo.ts",["418","419","420","421","422","423","424"],"import { paperType } from \"./NcodeSurfaceDataJson\";\r\nimport { INcodeSurfaceDesc, IPaperSize } from \"./SurfaceDataTypes\";\r\n\r\nimport { IPageSOBP, INcodeSOBPxy, ISize, UNIT_TO_DPI } from \"../DataStructure/Structures\";\r\nimport { INCH_TO_MM_SCALE, NCODE_TO_INCH_SCALE, PDF_DEFAULT_DPI } from \"./NcodeConstans\";\r\n\r\n\r\n/**\r\n *\r\n * @param pageInfo\r\n */\r\nexport function isPlatePaper(pageInfo: IPageSOBP): boolean {\r\n  const { owner, book } = pageInfo;\r\n  if (owner === 1013 && book === 2) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n\r\n\r\n/**\r\n *\r\n * @param coordInfo\r\n */\r\nexport function isPUI(pageInfo: INcodeSOBPxy): boolean {\r\n  const { owner, book, page, } = pageInfo;\r\n  // console.log( `isPUI: ${owner}.${book}.${page}`);\r\n  if (owner === 27 && book === 161 && page === 1) {\r\n    return true;\r\n  }\r\n\r\n  if (owner === 1013 && book === 1) {\r\n    // page === 4, Smart plate\r\n    // page === 1, Plate paper\r\n\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n\r\n\r\n/**\r\n *\r\n * @param pageInfo\r\n * @return paper size in NU\r\n */\r\nfunction getNPaperSize_nu(item: IPageSOBP | INcodeSurfaceDesc): ISize {\r\n  let desc = item as INcodeSurfaceDesc;\r\n\r\n  if (!item.hasOwnProperty(\"margin\")) {\r\n    const pageInfo = item as IPageSOBP;\r\n    desc = getNPaperInfo(pageInfo);\r\n  }\r\n  const margin = desc.margin;\r\n  return {\r\n    width: margin.Xmax - margin.Xmin,\r\n    height: margin.Ymax - margin.Ymin\r\n  };\r\n}\r\n\r\n\r\nfunction getNPaperSize_dpi(item: IPageSOBP | INcodeSurfaceDesc, dpi: number): ISize {\r\n  // const { section, owner, book, page } = pageInfo;\r\n  const size = getNPaperSize_nu(item);\r\n\r\n  return {\r\n    width: size.width * NCODE_TO_INCH_SCALE * dpi,\r\n    height: size.height * NCODE_TO_INCH_SCALE * dpi,\r\n  }\r\n}\r\n\r\nexport function getNPaperSize_pu(item: IPageSOBP | INcodeSurfaceDesc): ISize {\r\n  return getNPaperSize_dpi(item, PDF_DEFAULT_DPI);\r\n}\r\n\r\n\r\nexport function getMediaSize_pu(mediaType: IPaperSize): ISize {\r\n  const { width, height } = mediaType;\r\n\r\n  return {\r\n    width: width * INCH_TO_MM_SCALE * PDF_DEFAULT_DPI,\r\n    height: height * INCH_TO_MM_SCALE * PDF_DEFAULT_DPI,\r\n  }\r\n}\r\n\r\n/**\r\n * paper size를 해당 inch 단위로 돌려 준다.\r\n * @param pageInfo\r\n */\r\nexport function getNPaperInfo(pageInfo: IPageSOBP): INcodeSurfaceDesc {\r\n  const { section, owner, book } = pageInfo;\r\n\r\n\r\n  let found = paperType.paperA4_dummy;\r\n  let found_key = \"paperA4_dummy\";\r\n\r\n  const keys = Object.keys(paperType);\r\n  for (let j = 0; j < keys.length; j++) {\r\n    const key = keys[j];\r\n    const value = paperType[key];\r\n\r\n    const idx = value.books.indexOf(book);\r\n    if (idx > -1) {\r\n      if (section === value.section && owner === value.owner) {\r\n        found = value;\r\n        found_key = key;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  const desc: INcodeSurfaceDesc = {\r\n    id: found_key,\r\n    pageInfo,\r\n    margin: {\r\n      Xmin: found.Xmin,\r\n      Xmax: found.Xmax,\r\n      Ymin: found.Ymin,\r\n      Ymax: found.Ymax,\r\n    },\r\n    glyphData: \"\",\r\n  };\r\n\r\n  return desc;\r\n}\r\n\r\n\r\n\r\nexport function getSurfaceSize_dpi(size: IPaperSize, dpi: number, isLandscape: boolean = false) {\r\n  const numerator = UNIT_TO_DPI[size.unit];\r\n  const ratio = 1.0;\r\n\r\n  let width = size.width * ratio * dpi / numerator;\r\n  let height = size.height * ratio * dpi / numerator;\r\n\r\n  width = Math.floor(width);\r\n  height = Math.floor(height);\r\n\r\n  if (isLandscape) {\r\n    return {\r\n      width: height,\r\n      height: width,\r\n    };\r\n  }\r\n\r\n  return {\r\n    width: width,\r\n    height: height,\r\n  };\r\n}\r\n\r\n\r\nexport function getSurfaceSize_px_600dpi(size: IPaperSize, isLandscape: boolean = false) {\r\n  return getSurfaceSize_dpi(size, UNIT_TO_DPI[\"600dpi\"], isLandscape);\r\n}\r\n\r\nexport function getSurfaceSize_inch(size: IPaperSize, isLandscape: boolean = false) {\r\n  return getSurfaceSize_dpi(size, 1, isLandscape);\r\n}\r\n\r\nexport function getSurfaceSize_mm(size: IPaperSize, isLandscape: boolean = false) {\r\n  return getSurfaceSize_dpi(size, UNIT_TO_DPI[\"mm\"], isLandscape);\r\n}\r\n\r\nexport function getSurfaceSize_css(size: IPaperSize, isLandscape: boolean = false) {\r\n  return getSurfaceSize_dpi(size, UNIT_TO_DPI[\"css\"], isLandscape);\r\n}\r\n\r\n\r\nexport function getSurfaceSize_pu(size: IPaperSize, isLandscape: boolean = false) {\r\n  return getSurfaceSize_dpi(size, UNIT_TO_DPI[\"pu\"], isLandscape);\r\n}\r\n\r\nexport function isPortrait(size: ISize) {\r\n  return size.width < size.height;\r\n}\r\n\r\nexport function getCssDpi() {\r\n  return UNIT_TO_DPI[\"css\"];\r\n}\r\n\r\n\r\n\r\nexport function isSamePage(pg1: IPageSOBP, pg2: IPageSOBP): boolean {\r\n  if (pg1.page !== pg2.page || pg1.book !== pg2.book || pg1.owner !== pg2.owner || pg1.section !== pg2.section) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\NcodeRasterizer.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PageForPrint.tsx",["425"],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\NcodeConstans.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\index.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\NcodeSurfaceDataJson.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\NcodeFetcher.ts",["426","427"],"import { IPageSOBP } from \"../DataStructure/Structures\";\r\nimport * as Zlib from \"zlib\";\r\nimport { INcodeSurfaceDesc } from \"./SurfaceDataTypes\";\r\nimport { getNPaperInfo, isSamePage } from \"./SurfaceInfo\";\r\n\r\n\r\n/**\r\n * Class\r\n */\r\nexport default class NcodeFetcher {\r\n  private codeText: string = \"\";\r\n  private fetchPromise: Promise<string> = Promise.resolve(\"\");\r\n  pageInfo: IPageSOBP;\r\n\r\n  constructor(pageInfo: IPageSOBP) {\r\n    this.pageInfo = pageInfo;\r\n    this.fetchPromise = this.fetchNcodeData(pageInfo);\r\n    this.fetchPromise.then(txt => this.codeText = txt);\r\n  }\r\n\r\n\r\n  /**\r\n   * 코드 정보를 받아온다\r\n   * 코드 정보를 받아올 때 나중에는 x margin, y margin도 서버에서 받아오게 해야 한다 2020/11/26\r\n   * @param pageInfo\r\n   */\r\n  public getNcodeData = async (pageInfo: IPageSOBP): Promise<INcodeSurfaceDesc> => {\r\n    // glyph text를 받아 온다.\r\n    if (isSamePage(this.pageInfo, pageInfo)) {\r\n      console.log(\"reuse downloaded glyph data file\");\r\n      const txt = await this.fetchPromise;\r\n      this.codeText = txt;\r\n    }\r\n    else {\r\n      console.log(\"download glyph data file\");\r\n      const promise = this.fetchNcodeData(pageInfo);\r\n      this.fetchPromise = promise;\r\n      const txt = await this.fetchPromise;\r\n\r\n      this.pageInfo = pageInfo;\r\n      this.codeText = txt;\r\n    }\r\n\r\n    const result: INcodeSurfaceDesc = getNPaperInfo(pageInfo);\r\n    result.glyphData = this.codeText;\r\n\r\n    return result;\r\n  }\r\n\r\n\r\n  private fetchNcodeData = async (pageInfo: IPageSOBP): Promise<string> => {\r\n    return new Promise(async (resolve, reject) => {\r\n      // console.log(`[fetch] ${pageInfo.section}.${pageInfo.owner}.${pageInfo.book}.${pageInfo.page}`);\r\n      const url = this.getRawCodeDataUrl(pageInfo);\r\n\r\n      const blob = await fetch(url).then((r) => {\r\n\r\n        if (r.ok) {\r\n          return r.blob();\r\n        }\r\n\r\n        resolve(\"\");\r\n      });\r\n\r\n      function gunzipCallback(decompressed) {\r\n        // console.log(decompressed);\r\n        const txt = new TextDecoder(\"utf-8\").decode(decompressed);\r\n        resolve(txt);\r\n      }\r\n\r\n      if (blob != null) {\r\n        try {\r\n          const buffer = await blob.arrayBuffer();\r\n          const u8buf = new Uint8Array(buffer);\r\n          // eslint-disable-next-line\r\n          const gunzip = new Zlib.gunzip(u8buf, (err, result) => {\r\n            // console.error(err);\r\n            if (err) {\r\n              console.log(err);\r\n              resolve(\"\");\r\n            }\r\n            gunzipCallback(result);\r\n          });\r\n        } catch (e) {\r\n          resolve(\"\");\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n  private getAbsoluteURL = (base: string, relative: string): string => {\r\n    const stack = base.split(\"/\");\r\n    const parts = relative.split(\"/\");\r\n\r\n    stack.pop(); // remove current file name (or empty string)\r\n\r\n    // (omit if \"base\" is the current folder without trailing slash)\r\n    for (let i = 0; i < parts.length; i++) {\r\n      if (parts[i] === \".\") continue;\r\n      if (parts[i] === \"..\") stack.pop();\r\n      else stack.push(parts[i]);\r\n    }\r\n    return stack.join(\"/\");\r\n  }\r\n\r\n\r\n  private getRawCodeDataUrl = (pageInfo: IPageSOBP): string => {\r\n\r\n    const { section, owner, book, page } = pageInfo;\r\n\r\n    const ncode_idx = \"s\" + section + \"-o\" + owner + \"-b\" + book + \"-p\" + page;\r\n    const dir_name = \"s\" + section + \"-o\" + owner + \"-b\" + book;\r\n\r\n    const filename = \"./ncode_data/\" + dir_name + \"/\" + ncode_idx + \".code.gz\";\r\n    const doc_url = document.location.href;\r\n    const url = this.getAbsoluteURL(doc_url, filename);\r\n\r\n    return url;\r\n  }\r\n}","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\index.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\DataTypes.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\CoordinateTanslater.ts",["428"],"import { IPoint } from \"../DataStructure/Structures\";\r\nimport * as Solve from \"./SolveTransform\";\r\nimport { TransformPoints, TransformPointPairs, TransformParameters, IMappingParams } from \"./DataTypes\";\r\nimport { MappingItem } from \"../SurfaceMapper/MappingItem\";\r\nimport { sprintf } from \"sprintf-js\";\r\n\r\nconst solveAffine = Solve.solveAffine;\r\nconst solveHomography = Solve.solveHomography;\r\nconst applyTransform = Solve.applyTransform;\r\n\r\n\r\n/** for debugging */\r\nlet _srcPts: TransformPoints = null;\r\nlet _dstPts: TransformPoints = null;\r\nlet _params: TransformParameters = null;\r\n\r\n/**\r\n * -----------------------------------------------------------------------------------\r\n * A. 우리는 다음과 같은 좌표계를 쓴다.\r\n *\r\n * 1) Ncode 좌표계\r\n * 2) PDF 좌표계\r\n * 3) Canvas 좌표계\r\n * 4) 화면 좌표계\r\n *\r\n *\r\n * 1) NU(Ncode Unit): 56/600 DPI, Ncode 좌표계는 펜에서 검출되는 좌표계를 기준으로 한다.\r\n *    - 600DPI에서 8 pixel 거리를 가지는 7개 glyph 가 하나의 Ncode\r\n *    - 1 NU = 7(glyphs) * 8(pixels) / 600 (DPI) = 56/600 Inch = 약 2.370666667 mm\r\n *\r\n *\r\n * 2) PU(Pdf Unit): 72 DPI, PDF 좌표계는 PdfJs.getViewport({scale:1})을 통해서 나오는 크기를 기준으로 하는 좌표계\r\n *    - PDF가 설계될 당시 1:1 scale의 좌표계는 72DPI\r\n *    - 1 PU = 1 pixel @ 72DPI = 1(pixel) / 72(DPI) = 1/72 Inch = 약 0.352777778 mm\r\n *\r\n * 3) CU(Canvas Unit): 96 DPI, HTML의 CSS에 의해 만들어진 좌표\r\n *    - 1 CU = 1pixel @ 96DPI = 1(pixel) / 96(DPI) = 1/96 Inch = 약 0.010416667 mm\r\n *\r\n * 4) SU(Screen Unit): 화면의 zoom과 offset에 따라 달라짐\r\n *    - zoom은 CU와 1:1일 때, 100%\r\n *    - fabric의 canvas.zoom, offset_x, offset_y에 의해 계산이 달라짐\r\n *\r\n * -----------------------------------------------------------------------------------\r\n * B. 1:1일 때, 계산 방법\r\n *\r\n * 1) NU to PU\r\n *    pu = nu * (56/600) / (1/72) = nu * 6.72\r\n *\r\n * 2) PU to CU\r\n *    cu = pu * (1/72) / (1/96) = pu * 4 / 3\r\n *\r\n * 3) NU to CU\r\n *    cu = nu * 6.72 * (4/3) = nu * 8.96\r\n *\r\n * 4) CU to SU(zoom, offset)\r\n *    su = zoom * CU + offset\r\n *\r\n * -----------------------------------------------------------------------------------\r\n * C. Transform matrix로 계산 방법\r\n *\r\n * 0) TransformMatrix를 구한다\r\n *    a) src points (Ncode Unit)의 4개 점 (affine에서는 3개 점)\r\n *    b) 각 src point에 해당하는 dst points (Pdf Unit)의 4개 점을 (affine에서는 3개 점)\r\n *    c) HomographyPoints (또는 AffinePoints)에 넣고\r\n *    d) solveHomography 또는 solveAffine으로 값을 구하고 TransformMatrix 타입의 리턴을\r\n *    e) 어딘가에 저장해 둔다. (예, transMtx)\r\n *\r\n * 1) pt in NU to pt' in PU\r\n *    pt' = applyTransform( pt, transMtx );\r\n *\r\n * 2) PU to CU\r\n *    - B-2)과 같다.\r\n *\r\n * 3) NU to CU\r\n *    - cu = applyTransform( nu, transMtx ) * 4 /3\r\n *\r\n * -----------------------------------------------------------------------------------\r\n * D. 코딩 시 변수 구별 원칙\r\n * 1) ptNu = pt at Ncode coordinate system\r\n * 2) ptPu = pt at Pdf Pixel coordinate system\r\n * 3) ptCu = pt at Fabric Canvas coordinate system\r\n * 4) ptSu = pt at screen coordinate system\r\n *\r\n *\r\n */\r\nexport default class CoordinateTanslater {\r\n  // private _params: TransformParameters = null;\r\n  // private _paramsReverse: TransformParameters = null;\r\n\r\n  private _mappingParams: IMappingParams = null;\r\n\r\n  constructor(arg: CoordinateTanslater | IMappingParams = null) {\r\n    if (arg) {\r\n      if (arg.hasOwnProperty(\"_mappingParams\")) {\r\n        const trans = arg as CoordinateTanslater;\r\n        const json = JSON.stringify(trans._mappingParams);\r\n        this._mappingParams = JSON.parse(json);\r\n        this.calcReverse();\r\n      }\r\n      else {\r\n        const params = arg as IMappingParams;\r\n        const json = JSON.stringify(params);\r\n        this._mappingParams = JSON.parse(json);\r\n        this.calcReverse();\r\n      }\r\n    }\r\n  }\r\n\r\n  get mappingParams() {\r\n    return this._mappingParams;\r\n  }\r\n\r\n  /**\r\n   * calculate transform parameters (reverse\r\n   * @param points\r\n   */\r\n  public calc = (mappingItem: MappingItem) => {\r\n    this._mappingParams = mappingItem._params;\r\n\r\n    const srcPts = mappingItem.srcPts;\r\n    const dstPts = mappingItem.dstPts;\r\n\r\n    _srcPts = mappingItem.srcPts;\r\n    _dstPts = mappingItem.dstPts;\r\n\r\n    /** src:NU, dst:PU */\r\n    const pts = {\r\n      src: { ...srcPts, },\r\n      dst: { ...dstPts, }\r\n    } as TransformPointPairs;\r\n\r\n    /** src:PU, dst:NU */\r\n    const ptsReverse = {\r\n      src: { ...dstPts, },\r\n      dst: { ...srcPts, }\r\n    } as TransformPointPairs;\r\n\r\n\r\n    if (srcPts.type === \"affine\") {\r\n      this._mappingParams.h = solveAffine(pts);  // NU -> PU\r\n      this._mappingParams.h_rev = solveAffine(ptsReverse);  // PU -> NU\r\n\r\n      _params = this._mappingParams.h;\r\n      return;\r\n    }\r\n    else if (srcPts.type === \"homography\") {\r\n      this._mappingParams.h = solveHomography(pts);  // NU -> PU\r\n      this._mappingParams.h_rev = solveHomography(ptsReverse);  // PU -> NU\r\n\r\n      _params = this._mappingParams.h;\r\n      return;\r\n    }\r\n\r\n    throw Error(\"CoordinateTanslater needs '3 or 4 pairs of points' to initiate class.\");\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   */\r\n  private calcReverse = () => {\r\n    // 아래는 임의의 숫자\r\n    const srcPts: TransformPoints = {\r\n      type: \"homography\",\r\n      unit: \"pu\",\r\n      pts: [\r\n        { x: 0, y: 0 },\r\n        { x: 100, y: 0 },\r\n        { x: 100, y: 100 },\r\n        { x: 0, y: 100 },\r\n      ]\r\n    };\r\n\r\n    // 정방향 파라메터로 역방향의 대상이 되는 점을 연산\r\n    const dstPts: TransformPoints = {\r\n      type: \"homography\",\r\n      unit: \"nu\",\r\n      pts: new Array(4),\r\n    };\r\n\r\n    for (let i = 0; i < 4; i++) {\r\n      const dstPt = this.NUtoPU(srcPts[i]);\r\n      dstPts[i] = dstPt;\r\n    }\r\n\r\n    /** src:PU, dst:NU */\r\n    const ptsReverse = {\r\n      src: { ...dstPts, },\r\n      dst: { ...srcPts, }\r\n    } as TransformPointPairs;\r\n\r\n    this._mappingParams.h_rev = solveHomography(ptsReverse);\r\n  }\r\n\r\n  public dump = (prefix: string) => {\r\n    const { a, b, c, d, e, f, g, h } = _params;\r\n    const sp = _srcPts.pts;\r\n    const dp = _dstPts.pts;\r\n\r\n    for (let i = 0; i < 4; i++) {\r\n      console.log(`[${prefix}] ${sprintf(\"(%6.1f, %6.1f) => (%5d, %5d)\", sp[i].x, sp[i].y, dp[i].x, dp[i].y)}`);\r\n\r\n    }\r\n\r\n\r\n    const first = sprintf(\"%7.1f %7.1f %7.1f\", a, b, c);\r\n    const second = sprintf(\"%7.2f %7.1f %7.1f\", d, e, f);\r\n    const thrid = sprintf(\"%7.1f %7.1f %7.1f\", g, h, 1);\r\n\r\n    console.log(`[${prefix}]`);\r\n    console.log(`[${prefix}]          | ${first} |`);\r\n    console.log(`[${prefix}]     H =  | ${second} |`);\r\n    console.log(`[${prefix}]          | ${thrid} |`);\r\n    console.log(`[${prefix}]`);\r\n  }\r\n\r\n  /**\r\n   * 계산된 변환행렬을 반환\r\n   *\r\n   * return {...this._params} 로 해야 하지 않을까?\r\n   * 이것 때문에 class가 메모리에 계속 남아 있으면 어떻게 하지?\r\n   */\r\n  public get params(): TransformParameters {\r\n    return this._mappingParams.h;\r\n  }\r\n\r\n  /**\r\n   * Ncode point to Pds point\r\n   * @param ptNu\r\n   */\r\n  public NUtoPU = (ptNu: IPoint): IPoint => {\r\n    const ptPu = applyTransform(ptNu, this._mappingParams.h);\r\n    return ptPu;\r\n  }\r\n\r\n  /**\r\n   * Pds point to Ncode point\r\n   * @param ptNu\r\n   */\r\n  public PUtoNU = (ptPu: IPoint): IPoint => {\r\n    const ptNu = applyTransform(ptPu, this._mappingParams.h_rev);\r\n    return ptNu;\r\n  }\r\n\r\n}\r\n","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\SolveTransform.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\EchelonMatrix.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\GaussianElimination.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\pages\\Posts.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\StorageRenderWorker.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\StorageRenderer.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\index.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\constants.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\pages\\index.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\pages\\Post.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\pages\\About.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\GoogleBtn.js",["429","430"],"import React, {Component, useState, useEffect} from 'react';\r\nimport { gapi } from 'gapi-script';\r\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\r\n\r\nconst CLIENT_ID = '169738066451-5u100n2i6rko17jhmtpvq0bnjuedj7g4.apps.googleusercontent.com';\r\n\r\nclass GoogleBtn extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLogined:false,\r\n      accessToken:''\r\n    };\r\n\r\n    this.login = this.login.bind(this);\r\n    this.handleLoginFailure = this.handleLoginFailure.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n    this.handleLogoutFailure = this.handleLogoutFailure.bind(this);\r\n\r\n  }\r\n\r\n  login (resp) {\r\n    if(resp.accessToken) {\r\n      this.setState(state => ({\r\n        isLogined: true,\r\n        accessToken: resp.accessToken\r\n      }));\r\n    }\r\n  }\r\n\r\n  logout (resp) {\r\n    this.setState(state => ({\r\n      isLogined: false,\r\n      accessToken: ''\r\n    }));\r\n\r\n    var auth2 = gapi.auth2.getAuthInstance();\r\n    auth2.signOut().then(function () {\r\n      console.log('user log out ');\r\n    });\r\n    auth2.disconnect();\r\n\r\n  }\r\n\r\n  handleLoginFailure (resp) {\r\n  }\r\n  handleLogoutFailure (resp) {\r\n    console.log('why logout fail?');\r\n  }\r\n  render () {\r\n    return (\r\n      <div>\r\n        {this.state.isLogined ?\r\n          <GoogleLogout\r\n          clientId = {CLIENT_ID}\r\n          buttonText = 'Logout'\r\n          onLogoutSuccess={this.logout}\r\n          onFailure={this.handleLogoutFailure}\r\n          ></GoogleLogout>: \r\n          <GoogleLogin \r\n            clientId = {CLIENT_ID}\r\n            buttonText=\"Login\"\r\n            onSuccess={this.login}\r\n            onFailure={this.handleLoginFailure}\r\n            cookiePolicy={'single_host_origin'}\r\n            responseType='code,token'\r\n          />\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default GoogleBtn;","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\GridaController.tsx",["431","432","433"],"import React, { Component } from 'react';\r\n\r\n// const loadXMLDoc = () => {\r\n//   var xmlhttp = new XMLHttpRequest();\r\n//   xmlhttp.onreadystatechange = function() {\r\n//     if (this.readyState == 4 && this.status == 200) {\r\n//       myFunction(this);\r\n//     }\r\n//   };\r\n//   // xmlhttp.open(\"GET\", \"cd_catalog.xml\", true);\r\n//   xmlhttp.open(\"GET\", \"note_1116.xml\", true);\r\n//   xmlhttp.send();\r\n// }\r\n\r\n// const myFunction = (xml) => {\r\n//   var x = [], y = [], width = [], height = [], command = [], xmlDoc, txt, symbol;\r\n//   xmlDoc = xml.responseXML;\r\n//   txt = \"\";\r\n//   symbol = xmlDoc.getElementsByTagName(\"symbol\");\r\n//   for(var i = 0; i < 100; i++) {\r\n//     // x[i] = symbol[i].getAttribute(\"x\");\r\n//     // y[i] = symbol[i].getAttribute(\"y\");\r\n//     // width[i] = symbol[i].getAttribute(\"width\");\r\n//     // height[i] = symbol[i].getAttribute(\"height\");\r\n\r\n//     // if (x[i] === x[0] || y[i] === y[0] || width[i] === width[0] || height[i] === height[0]) {\r\n//       command[i] = xmlDoc.getElementsByTagName(\"command\")[i].getAttribute(\"param\");\r\n//       txt = txt + command[i] + '<br>';\r\n//       document.getElementById(\"demo\").innerHTML = txt;\r\n//     // }\r\n//   }\r\n//   // x = xmlDoc.getElementsByTagName(\"symbol\")[0].getAttribute(\"x\");\r\n//   // y = xmlDoc.getElementsByTagName(\"symbol\")[0].getAttribute(\"y\");\r\n//   // width = xmlDoc.getElementsByTagName(\"symbol\")[0].getAttribute(\"width\");\r\n//   // height = xmlDoc.getElementsByTagName(\"symbol\")[0].getAttribute(\"height\");\r\n//   // if (x[] === \"78.3807\" || y === \"135.495\" || width === \"27.494\" || height === \"26.2788\") {\r\n//     // command = xmlDoc.getElementsByTagName(\"command\")[0].getAttribute(\"param\");\r\n//   // }\r\n//   // y = x.getAttribute(\"param\");\r\n//   // for (i = 0; i< x.length; i++) {\r\n//   //   // txt += y[i].childNodes[0].nodeValue + \"<br>\";\r\n//   //   txt += x[i] + \"<br>\";\r\n//   // } \r\n//   // txt = command;\r\n//   // document.getElementById(\"demo\").innerHTML = txt;\r\n// }\r\n\r\nclass GridaController extends Component {\r\n  static loadXMLDoc = () => {\r\n    var xmlhttp = new XMLHttpRequest();\r\n    xmlhttp.onreadystatechange = function() {\r\n      if (this.readyState == 4 && this.status == 200) {\r\n        GridaController.myFunction(this);\r\n      }\r\n    };\r\n    // xmlhttp.open(\"GET\", \"cd_catalog.xml\", true);\r\n    xmlhttp.open(\"GET\", \"note_1116.xml\", true);\r\n    xmlhttp.send();\r\n  }\r\n  \r\n  static myFunction = (xml: any) => {\r\n    var x = [], y = [], width = [], height = [], command = [], xmlDoc, txt, symbol;\r\n    xmlDoc = xml.responseXML;\r\n    txt = \"\";\r\n    symbol = xmlDoc.getElementsByTagName(\"symbol\");\r\n    for(var i = 0; i < 100; i++) {\r\n      // x[i] = symbol[i].getAttribute(\"x\");\r\n      // y[i] = symbol[i].getAttribute(\"y\");\r\n      // width[i] = symbol[i].getAttribute(\"width\");\r\n      // height[i] = symbol[i].getAttribute(\"height\");\r\n  \r\n      // if (x[i] === x[0] || y[i] === y[0] || width[i] === width[0] || height[i] === height[0]) {\r\n        command[i] = xmlDoc.getElementsByTagName(\"command\")[i].getAttribute(\"param\");\r\n        txt = txt + command[i] + '<br>';\r\n        document.getElementById(\"demo\").innerHTML = txt;\r\n      // }\r\n    }\r\n    // x = xmlDoc.getElementsByTagName(\"symbol\")[0].getAttribute(\"x\");\r\n    // y = xmlDoc.getElementsByTagName(\"symbol\")[0].getAttribute(\"y\");\r\n    // width = xmlDoc.getElementsByTagName(\"symbol\")[0].getAttribute(\"width\");\r\n    // height = xmlDoc.getElementsByTagName(\"symbol\")[0].getAttribute(\"height\");\r\n    // if (x[] === \"78.3807\" || y === \"135.495\" || width === \"27.494\" || height === \"26.2788\") {\r\n      // command = xmlDoc.getElementsByTagName(\"command\")[0].getAttribute(\"param\");\r\n    // }\r\n    // y = x.getAttribute(\"param\");\r\n    // for (i = 0; i< x.length; i++) {\r\n    //   // txt += y[i].childNodes[0].nodeValue + \"<br>\";\r\n    //   txt += x[i] + \"<br>\";\r\n    // } \r\n    // txt = command;\r\n    // document.getElementById(\"demo\").innerHTML = txt;\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button type=\"button\" onClick={GridaController.loadXMLDoc}>grida board controller</button>\r\n\r\n        <p id=\"demo\"></p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GridaController;","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PrintPdfButton.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\cloud_util_func.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\DefaultOption.ts",[],{"ruleId":"434","severity":1,"message":"435","line":43,"column":3,"nodeType":"436","messageId":"437","endLine":43,"endColumn":22,"fix":"438"},{"ruleId":"434","severity":1,"message":"435","line":1,"column":59,"nodeType":"439","messageId":"437","endLine":1,"endColumn":78,"fix":"440"},{"ruleId":"441","severity":1,"message":"442","line":54,"column":13,"nodeType":"443","messageId":"444","endLine":54,"endColumn":27},{"ruleId":"434","severity":1,"message":"445","line":133,"column":67,"nodeType":"439","messageId":"437","endLine":133,"endColumn":95,"fix":"446"},{"ruleId":"434","severity":1,"message":"445","line":157,"column":60,"nodeType":"439","messageId":"437","endLine":157,"endColumn":88,"fix":"447"},{"ruleId":"434","severity":1,"message":"445","line":161,"column":55,"nodeType":"439","messageId":"437","endLine":161,"endColumn":83,"fix":"448"},{"ruleId":"434","severity":1,"message":"445","line":165,"column":53,"nodeType":"439","messageId":"437","endLine":165,"endColumn":81,"fix":"449"},{"ruleId":"434","severity":1,"message":"445","line":169,"column":54,"nodeType":"439","messageId":"437","endLine":169,"endColumn":82,"fix":"450"},{"ruleId":"434","severity":1,"message":"445","line":174,"column":53,"nodeType":"439","messageId":"437","endLine":174,"endColumn":81,"fix":"451"},{"ruleId":"441","severity":1,"message":"442","line":257,"column":16,"nodeType":"443","messageId":"444","endLine":257,"endColumn":30},{"ruleId":"434","severity":1,"message":"435","line":11,"column":3,"nodeType":"436","messageId":"437","endLine":11,"endColumn":33,"fix":"452"},{"ruleId":"453","severity":1,"message":"454","line":52,"column":24,"nodeType":"455","messageId":"456","endLine":52,"endColumn":29},{"ruleId":"441","severity":1,"message":"442","line":94,"column":15,"nodeType":"443","messageId":"444","endLine":94,"endColumn":29},{"ruleId":"457","severity":1,"message":"458","line":39,"column":5,"nodeType":"459","messageId":"460","endLine":39,"endColumn":46,"fix":"461"},{"ruleId":"462","severity":1,"message":"463","line":47,"column":29,"nodeType":"464","messageId":"465","endLine":48,"endColumn":4},{"ruleId":"457","severity":1,"message":"458","line":50,"column":5,"nodeType":"459","messageId":"460","endLine":50,"endColumn":40,"fix":"466"},{"ruleId":"457","severity":1,"message":"458","line":62,"column":5,"nodeType":"459","messageId":"460","endLine":62,"endColumn":84,"fix":"467"},{"ruleId":"457","severity":1,"message":"458","line":66,"column":9,"nodeType":"459","messageId":"460","endLine":66,"endColumn":18,"fix":"468"},"@typescript-eslint/no-inferrable-types","Type string trivially inferred from a string literal, remove type annotation.","ClassProperty","noInferrableType",{"range":"469","text":"470"},"AssignmentPattern",{"range":"471","text":"470"},"no-prototype-builtins","Do not access Object.prototype method 'hasOwnProperty' from target object.","CallExpression","prototypeBuildIn","Type boolean trivially inferred from a boolean literal, remove type annotation.",{"range":"472","text":"470"},{"range":"473","text":"470"},{"range":"474","text":"470"},{"range":"475","text":"470"},{"range":"476","text":"470"},{"range":"477","text":"470"},{"range":"478","text":"470"},"no-async-promise-executor","Promise executor functions should not be async.","Identifier","async","no-var","Unexpected var, use let or const instead.","VariableDeclaration","unexpectedVar",{"range":"479","text":"480"},"@typescript-eslint/no-empty-function","Unexpected empty method 'handleLoginFailure'.","FunctionExpression","unexpected",{"range":"481","text":"480"},{"range":"482","text":"480"},{"range":"483","text":"480"},[1133,1141],"",[64,72],[3047,3056],[3542,3551],[3706,3715],[3848,3857],[4007,4016],[4168,4177],[285,293],[936,939],"let",[2042,2045],[2418,2421],[2606,2609]]