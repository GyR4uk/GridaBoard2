[{"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\index.js":"1","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\serviceWorker.js":"2","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\client\\Root.js":"3","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\store\\configureStore.js":"4","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\shared\\App.js":"5","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\styles\\theme.js":"6","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\store\\reducers\\authorization.js":"7","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\store\\reducers\\ui.js":"8","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\pages\\index.js":"9","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\pages\\Post.js":"10","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\pages\\Posts.js":"11","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\pages\\About.js":"12","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\pages\\Home.tsx":"13","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\index.js":"14","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\index.ts":"15","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\constants.js":"16","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\renderer\\pageviewer\\StorageRenderer.js":"17","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\utils\\UtilsFunc.ts":"18","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\pencomm\\neosmartpen.ts":"19","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\pencomm\\PenManager.ts":"20","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\noteserver\\PaperInfo.ts":"21","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\noteserver\\NoteserverClient.ts":"22","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NcodePrint\\DefaultOption.ts":"23","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NcodePrint\\PrintDataTypes.ts":"24","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\Locales\\i18n.ts":"25","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NcodeSurface\\CanvasColorConverter.ts":"26","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\renderer\\MixedPageView.tsx":"27","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\renderer\\pageviewer\\RenderWorkerBase.tsx":"28","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\renderer\\pageviewer\\PenBasedRenderer.tsx":"29","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NcodePrint\\PdfPrintButton.tsx":"30","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\Save\\SavePdf.tsx":"31","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NcodePrint\\Modal\\PrintOptionDialog.tsx":"32","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NeoPdf\\FileBrowserButton.tsx":"33","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\SurfaceMapper\\Calibration\\CalibrationButton.tsx":"34","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\renderer\\pageviewer\\StorageRenderWorker.js":"35","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\types\\index.js":"36","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\utils\\JsUtils.js":"37","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\penstorage\\index.ts":"38","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\DataStructure\\index.ts":"39","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\DataStructure\\Enums.ts":"40","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\DataStructure\\NeoDot.ts":"41","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\penstorage\\InkStorage.ts":"42","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\penstorage\\EventSystem.ts":"43","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\pencomm\\pencomm.ts":"44","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\renderer\\pageviewer\\DrawCurves.ts":"45","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NeoPdf\\NeoPdfManager.ts":"46","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\renderer\\pageviewer\\PenBasedRenderWorker.tsx":"47","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\renderer\\pdf\\NeoPdfViewer.tsx":"48","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NcodePrint\\PrintPdfMain.tsx":"49","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NeoPdf\\FileBrowser.tsx":"50","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\SurfaceMapper\\Calibration\\CalibrationDialog.tsx":"51","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\types\\typedef.js":"52","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\DataStructure\\NeoStroke.ts":"53","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\pencomm\\pencomm_base.ts":"54","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\pencomm\\pencomm_event.ts":"55","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\pencomm\\pencomm_enum.ts":"56","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\pencomm\\pen_util_func.ts":"57","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\pencomm\\pencomm_const.ts":"58","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NeoPdf\\NeoPdfDocument.ts":"59","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NcodePrint\\UtilFunc.ts":"60","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NcodeSurface\\SurfaceSplitter.ts":"61","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\renderer\\pdf\\Page.tsx":"62","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NcodePrint\\PagesForPrint.tsx":"63","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NcodePrint\\PageOrientation.jsx":"64","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NeoPdf\\NeoPdfPage.ts":"65","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\SurfaceMapper\\MappingItem.ts":"66","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\SurfaceMapper\\MappingStorage.ts":"67","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\DataStructure\\Structures.ts":"68","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NcodePrint\\index.ts":"69","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NcodeSurface\\NcodeRasterizer.tsx":"70","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NcodeSurface\\SurfaceInfo.ts":"71","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NcodePrint\\PageForPrint.tsx":"72","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NcodeSurface\\NcodeConstans.ts":"73","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\Coordinates\\index.ts":"74","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NcodeSurface\\NcodeFetcher.ts":"75","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NcodeSurface\\NcodeSurfaceDataJson.ts":"76","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NcodeSurface\\index.ts":"77","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\Coordinates\\DataTypes.ts":"78","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\Coordinates\\CoordinateTanslater.ts":"79","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\Coordinates\\SolveTransform.ts":"80","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\Coordinates\\EchelonMatrix.ts":"81","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\Coordinates\\GaussianElimination.ts":"82"},{"size":801,"mtime":1605332809588,"results":"83","hashOfConfig":"84"},{"size":5086,"mtime":1605332809603,"results":"85","hashOfConfig":"84"},{"size":691,"mtime":1605332809525,"results":"86","hashOfConfig":"84"},{"size":519,"mtime":1605332809635,"results":"87","hashOfConfig":"84"},{"size":660,"mtime":1607189304322,"results":"88","hashOfConfig":"84"},{"size":1203,"mtime":1607264519566,"results":"89","hashOfConfig":"84"},{"size":1077,"mtime":1605332809635,"results":"90","hashOfConfig":"84"},{"size":4195,"mtime":1605332809635,"results":"91","hashOfConfig":"84"},{"size":176,"mtime":1607259362784,"results":"92","hashOfConfig":"84"},{"size":139,"mtime":1605332809463,"results":"93","hashOfConfig":"84"},{"size":822,"mtime":1605332809463,"results":"94","hashOfConfig":"84"},{"size":303,"mtime":1607258773916,"results":"95","hashOfConfig":"84"},{"size":3924,"mtime":1607263955051,"results":"96","hashOfConfig":"84"},{"size":1445,"mtime":1607189304307,"results":"97","hashOfConfig":"84"},{"size":808,"mtime":1607256644872,"results":"98","hashOfConfig":"84"},{"size":854,"mtime":1605349746725,"results":"99","hashOfConfig":"84"},{"size":14473,"mtime":1607189304316,"results":"100","hashOfConfig":"84"},{"size":2989,"mtime":1607189304320,"results":"101","hashOfConfig":"84"},{"size":13015,"mtime":1607189304309,"results":"102","hashOfConfig":"84"},{"size":3447,"mtime":1607189304308,"results":"103","hashOfConfig":"84"},{"size":6448,"mtime":1607189304308,"results":"104","hashOfConfig":"84"},{"size":5475,"mtime":1607189304307,"results":"105","hashOfConfig":"84"},{"size":870,"mtime":1607256046630,"results":"106","hashOfConfig":"84"},{"size":2399,"mtime":1607255661786,"results":"107","hashOfConfig":"84"},{"size":1201,"mtime":1607226848818,"results":"108","hashOfConfig":"84"},{"size":3185,"mtime":1607254912067,"results":"109","hashOfConfig":"84"},{"size":4138,"mtime":1607189304313,"results":"110","hashOfConfig":"84"},{"size":18543,"mtime":1607189304315,"results":"111","hashOfConfig":"84"},{"size":13111,"mtime":1607189304314,"results":"112","hashOfConfig":"84"},{"size":7837,"mtime":1607255663815,"results":"113","hashOfConfig":"84"},{"size":1408,"mtime":1606529427871,"results":"114","hashOfConfig":"84"},{"size":15313,"mtime":1607259221421,"results":"115","hashOfConfig":"84"},{"size":1595,"mtime":1607255839311,"results":"116","hashOfConfig":"84"},{"size":1156,"mtime":1607246035544,"results":"117","hashOfConfig":"84"},{"size":31133,"mtime":1607189304315,"results":"118","hashOfConfig":"84"},{"size":21,"mtime":1605332809213,"results":"119","hashOfConfig":"84"},{"size":286,"mtime":1607189304320,"results":"120","hashOfConfig":"84"},{"size":61,"mtime":1605935814752,"results":"121","hashOfConfig":"84"},{"size":271,"mtime":1607189304306,"results":"122","hashOfConfig":"84"},{"size":867,"mtime":1607189304298,"results":"123","hashOfConfig":"84"},{"size":528,"mtime":1607189304298,"results":"124","hashOfConfig":"84"},{"size":9500,"mtime":1607189304312,"results":"125","hashOfConfig":"84"},{"size":3240,"mtime":1607189304312,"results":"126","hashOfConfig":"84"},{"size":28890,"mtime":1607189304310,"results":"127","hashOfConfig":"84"},{"size":7475,"mtime":1607189304313,"results":"128","hashOfConfig":"84"},{"size":2396,"mtime":1607249907754,"results":"129","hashOfConfig":"84"},{"size":9424,"mtime":1607189304314,"results":"130","hashOfConfig":"84"},{"size":2518,"mtime":1607189304316,"results":"131","hashOfConfig":"84"},{"size":8496,"mtime":1607255663826,"results":"132","hashOfConfig":"84"},{"size":2599,"mtime":1607249480569,"results":"133","hashOfConfig":"84"},{"size":5797,"mtime":1607229762732,"results":"134","hashOfConfig":"84"},{"size":6008,"mtime":1607189304319,"results":"135","hashOfConfig":"84"},{"size":2656,"mtime":1607189304299,"results":"136","hashOfConfig":"84"},{"size":9282,"mtime":1607189652917,"results":"137","hashOfConfig":"84"},{"size":1807,"mtime":1607189304311,"results":"138","hashOfConfig":"84"},{"size":463,"mtime":1607189304311,"results":"139","hashOfConfig":"84"},{"size":1404,"mtime":1607189304309,"results":"140","hashOfConfig":"84"},{"size":503,"mtime":1605935814705,"results":"141","hashOfConfig":"84"},{"size":8000,"mtime":1607254942127,"results":"142","hashOfConfig":"84"},{"size":739,"mtime":1607167652733,"results":"143","hashOfConfig":"84"},{"size":6983,"mtime":1607255663815,"results":"144","hashOfConfig":"84"},{"size":6745,"mtime":1607189652945,"results":"145","hashOfConfig":"84"},{"size":3638,"mtime":1607255663826,"results":"146","hashOfConfig":"84"},{"size":322,"mtime":1607260644820,"results":"147","hashOfConfig":"84"},{"size":4369,"mtime":1607185199626,"results":"148","hashOfConfig":"84"},{"size":2343,"mtime":1607186892271,"results":"149","hashOfConfig":"84"},{"size":4732,"mtime":1607193232989,"results":"150","hashOfConfig":"84"},{"size":3704,"mtime":1607192947678,"results":"151","hashOfConfig":"84"},{"size":27,"mtime":1607163391821,"results":"152","hashOfConfig":"84"},{"size":19815,"mtime":1607255663815,"results":"153","hashOfConfig":"84"},{"size":4656,"mtime":1607191627268,"results":"154","hashOfConfig":"84"},{"size":15365,"mtime":1607257013094,"results":"155","hashOfConfig":"84"},{"size":905,"mtime":1606825753324,"results":"156","hashOfConfig":"84"},{"size":120,"mtime":1607173529116,"results":"157","hashOfConfig":"84"},{"size":3610,"mtime":1607192374231,"results":"158","hashOfConfig":"84"},{"size":2644,"mtime":1606529428114,"results":"159","hashOfConfig":"84"},{"size":220,"mtime":1606825753309,"results":"160","hashOfConfig":"84"},{"size":3007,"mtime":1607259727466,"results":"161","hashOfConfig":"84"},{"size":7210,"mtime":1607186828465,"results":"162","hashOfConfig":"84"},{"size":3925,"mtime":1607261790839,"results":"163","hashOfConfig":"84"},{"size":1068,"mtime":1606529428168,"results":"164","hashOfConfig":"84"},{"size":2144,"mtime":1606529428170,"results":"165","hashOfConfig":"84"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},"vwyo4j",{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"168"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"168"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"168"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"196"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"196"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"196"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"196"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"196"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"196"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"196"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\index.js",[],["342","343"],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\serviceWorker.js",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\client\\Root.js",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\store\\configureStore.js",["344"],"import thunk from 'redux-thunk';\r\nimport {applyMiddleware, combineReducers, compose, createStore} from 'redux';\r\nimport authorizationReducer from './reducers/authorization';\r\nimport uiReducer from './reducers/ui';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default () => {\r\n  const store = createStore(\r\n    combineReducers({\r\n      auth: authorizationReducer,\r\n      ui: uiReducer,\r\n\r\n    }),\r\n    composeEnhancers(applyMiddleware(thunk))\r\n  );\r\n  return store;\r\n};\r\n","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\shared\\App.js",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\styles\\theme.js",["345"],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\store\\reducers\\authorization.js",["346"],"import {store} from \"../../client/Root\";\nimport cookie from 'react-cookies';\n\n// Define Action Types\nconst ActionGroup = 'Auth';\n\nexport const AuthorizationActionTypes = {\n  LOGIN: `${ActionGroup}.LOGIN`,\n  LOGOUT: `${ActionGroup}.LOGOUT`\n};\n\n\n// Action Methods\nexport const didLogin = (authToken) => {\n  console.log(\"authToken : \", authToken);\n  store.dispatch({\n    type: AuthorizationActionTypes.LOGIN,\n    authToken: authToken\n  })\n};\n\nexport const logout = () => {\n  store.dispatch({\n    type: AuthorizationActionTypes.LOGOUT,\n    authToken: \"\"\n  })\n  cookie.remove(\"token\");\n};\n\n\n// Reducer\nexport default (state={\n  authToken: localStorage.getItem('idToken')\n}, action) => {\n  switch (action.type) {\n    case AuthorizationActionTypes.LOGIN: {\n      localStorage.setItem('idToken', action.authToken);\n      return {\n        ...state,\n        authToken: action.authToken\n      }\n    }\n    case AuthorizationActionTypes.LOGOUT: {\n      localStorage.removeItem('idToken');\n      state.authToken = null;\n      return {};\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\store\\reducers\\ui.js",["347"],"import {store} from \"../../client/Root\";\n\n//[Define Action Types\nconst ActionGroup = 'UI';\n\nexport const UIActionTypes = Object.freeze({\n  SHOW_UI_PROGRESS: `${ActionGroup}.SHOW_UI_PROGRESS`,\n  HIDE_UI_PROGRESS: `${ActionGroup}.HIDE_UI_PROGRESS`,\n  SHOW_TOAST_MESSAGE: `${ActionGroup}.SHOW_TOAST_MESSAGE`,\n  HIDE_TOAST_MESSAGE: `${ActionGroup}.HIDE_TOAST_MESSAGE`,\n  SHOW_DIALOG: `${ActionGroup}.SHOW_DIALOG`,\n  HIDE_DIALOG: `${ActionGroup}.HIDE_DIALOG`,\n  RESET_DIALOG: `${ActionGroup}.RESET_DIALOG`\n});\n//]\n\n//[Action Methods\nexport const ShowUIProgressBackdrop = () => {\n  store.dispatch({\n    type: UIActionTypes.SHOW_UI_PROGRESS\n  });\n};\nexport const HideUIProgressBackdrop = () => {\n  store.dispatch({\n    type: UIActionTypes.HIDE_UI_PROGRESS\n  });\n};\n\nexport const ShowErrorToast = (message) => {\n  store.dispatch({\n    type: UIActionTypes.SHOW_TOAST_MESSAGE,\n    message: message,\n    toastType: 'error'\n  });\n};\nexport const ShowWarningToast = (message) => {\n  store.dispatch({\n    type: UIActionTypes.SHOW_TOAST_MESSAGE,\n    message: message,\n    toastType: 'warning'\n  });\n};\nexport const ShowInfoToast = (message) => {\n  store.dispatch({\n    type: UIActionTypes.SHOW_TOAST_MESSAGE,\n    message: message,\n    toastType: 'info'\n  });\n};\nexport const ShowSuccessToast = (message) => {\n  store.dispatch({\n    type: UIActionTypes.SHOW_TOAST_MESSAGE,\n    message: message,\n    toastType: 'success'\n  });\n};\nexport const ShowMessageToast = (message) => {\n  store.dispatch({\n    type: UIActionTypes.SHOW_TOAST_MESSAGE,\n    message: message,\n    toastType: ''\n  });\n};\nexport const HideToastMessage = () => {\n  store.dispatch({\n    type: UIActionTypes.HIDE_TOAST_MESSAGE\n  });\n};\n\nexport const ShowDialog = (title, message, confirmBtnText, cancelBtnText, isModal, didCloseCallback) => {\n  store.dispatch({\n    type: UIActionTypes.SHOW_DIALOG,\n    title: title,\n    message: message,\n    confirmBtnText: confirmBtnText,\n    cancelBtnText: cancelBtnText,\n    isModal: isModal,\n    didCloseCallback: didCloseCallback\n  });\n};\nexport const HideDialog = () => {\n  store.dispatch({\n    type: UIActionTypes.HIDE_DIALOG\n  });\n};\nexport const ResetDialogConfig = () => {\n  store.dispatch({\n    type: UIActionTypes.RESET_DIALOG\n  });\n};\n//]\n\n//[Reducer\nexport default (state={\n  progress: {\n    circular: false\n  },\n  toast: {\n    show: false,\n    message: '',\n    toastType: ''\n  },\n  dialog: {\n    show: false,\n    title: '',\n    message: '',\n    confirmBtnText: '',\n    cancelBtnText: '',\n    okButtonText: '',\n    isModal: false,\n    didCloseCallback: null\n  }\n}, action) => {\n  switch (action.type) {\n    case UIActionTypes.SHOW_UI_PROGRESS: {\n      return {\n        ...state,\n        progress: {\n          circular: true\n        }\n      };\n    }\n    case UIActionTypes.HIDE_UI_PROGRESS: {\n      return {\n        ...state,\n        progress: {\n          circular: false\n        }\n      };\n    }\n    case UIActionTypes.SHOW_TOAST_MESSAGE: {\n      return {\n        ...state,\n        toast: {\n          show: true,\n          message: action.message,\n          toastType: action.toastType\n        }\n      }\n    }\n    case UIActionTypes.HIDE_TOAST_MESSAGE: {\n      return {\n        ...state,\n        toast: {\n          show: false,\n          message: ''\n        }\n      }\n    }\n    case UIActionTypes.SHOW_DIALOG: {\n      return {\n        ...state,\n        dialog: {\n          show: true,\n          title: action.title,\n          message: action.message,\n          confirmBtnText: action.confirmBtnText,\n          cancelBtnText: action.cancelBtnText,\n          isModal: action.isModal,\n          didCloseCallback: action.didCloseCallback\n        }\n      }\n    }\n    case UIActionTypes.HIDE_DIALOG: {\n      return {\n        ...state,\n        dialog: {\n          ...state.dialog,\n          show: false\n        }\n      }\n    }\n    case UIActionTypes.RESET_DIALOG: {\n      return {\n        ...state,\n        dialog: {\n          show: false,\n          title: '',\n          message: '',\n          confirmBtnText: '',\n          cancelBtnText: '',\n          okButtonText: '',\n          isModal: false,\n          didCloseCallback: null\n        }\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n};\n//]\n","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\pages\\index.js",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\pages\\Post.js",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\pages\\Posts.js",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\pages\\About.js",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\pages\\Home.tsx",[],["348","349"],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\index.js",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\index.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\constants.js",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\renderer\\pageviewer\\StorageRenderer.js",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\utils\\UtilsFunc.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\pencomm\\neosmartpen.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\pencomm\\PenManager.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\noteserver\\PaperInfo.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\noteserver\\NoteserverClient.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NcodePrint\\DefaultOption.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NcodePrint\\PrintDataTypes.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\Locales\\i18n.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NcodeSurface\\CanvasColorConverter.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\renderer\\MixedPageView.tsx",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\renderer\\pageviewer\\RenderWorkerBase.tsx",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\renderer\\pageviewer\\PenBasedRenderer.tsx",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NcodePrint\\PdfPrintButton.tsx",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\Save\\SavePdf.tsx",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NcodePrint\\Modal\\PrintOptionDialog.tsx",["350","351","352","353"],"import React, {useState} from \"react\";\r\n// import { Container, Modal, Row, Col, Button } from \"react-bootstrap\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { Button, Box, Input } from \"@material-ui/core\";\r\n\r\nimport { IPrintingProgress, IPrintOption, MediaSize, PageInfo } from '../PrintDataTypes';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport $ from 'jquery';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: 'auto',\r\n    width: 'fit-content',\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    minWidth: 120,\r\n  },\r\n  formControlLabel: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\nexport default function PrintOptionDialog () {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [IPrintOption, setIPrintOption] = useState({\r\n    codeDensity: 2,\r\n    printDpi: 600,\r\n    pdfRenderingDpi: 300,\r\n    putCalibrationMark: true,\r\n    printNcode: true,\r\n    dotsInACell: 7,\r\n    mediaSize: MediaSize.A4,\r\n    direction: \"auto\",\r\n    colorMode: 1,\r\n    scaleUpToMedia: true,\r\n    scaleDownToMedia: true,\r\n    targetPages: \"\",\r\n    pagesPerSheet: 1,\r\n    pageInfo: PageInfo.first_page,\r\n    debugMode: 0,\r\n    hasToPutNcode: true\r\n  })\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleClose = (e) => {\r\n    setIPrintOption({\r\n      ...IPrintOption,\r\n      codeDensity: 2,\r\n      printDpi: 600,\r\n      pdfRenderingDpi: 300,\r\n      putCalibrationMark: true,\r\n      printNcode: true,\r\n      dotsInACell: 7,\r\n      mediaSize: MediaSize.A4,\r\n      direction: \"auto\",\r\n      colorMode: 1,\r\n      scaleUpToMedia: true,\r\n      scaleDownToMedia: true,\r\n      targetPages: \"\",\r\n      pagesPerSheet: 1,\r\n      pageInfo: PageInfo.first_page,\r\n      debugMode: 0,\r\n      hasToPutNcode: true\r\n    })\r\n    setOpen(false);\r\n  }\r\n\r\n  const handleSave = (e) => {\r\n    //저장 로직 추가\r\n    setIPrintOption({\r\n      ...IPrintOption,\r\n      targetPages : $('#targetPages').val(),\r\n      [e.target.name] : e.target.value\r\n    });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setIPrintOption({\r\n      ...IPrintOption,\r\n      [e.target.name] : e.target.value\r\n    });\r\n\r\n    console.log(e.target.value);\r\n    // console.log(MediaSize);\r\n    // console.log(MediaSize.A4);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        <Box fontSize={16} fontWeight=\"fontWeightBold\" >\r\n          인쇄 옵션 설정\r\n        </Box>\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">인쇄 설정</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Dialog의 Body\r\n          </DialogContentText>\r\n\r\n          {/* 코드의 농도 Dialog */}\r\n          <form className={classes.form} noValidate>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"codeDensity\">코드 농도</InputLabel>\r\n              <Select\r\n                autoFocus\r\n                value={IPrintOption.codeDensity}\r\n                onChange={onChange}\r\n                inputProps={{\r\n                  name: 'codeDensity',\r\n                  id: 'codeDensity',\r\n                }}\r\n              >\r\n                <MenuItem value=\"1\">연하게</MenuItem>\r\n                <MenuItem value=\"2\">보통</MenuItem>\r\n                <MenuItem value=\"3\">진하게</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </form>\r\n\r\n          {/* 인쇄의 품질 Dialog */}\r\n          <form className={classes.form} noValidate style={{float:\"left\"}}>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel htmlFor=\"printDpi\">인쇄 품질</InputLabel>\r\n                <Select\r\n                  value={IPrintOption.printDpi}\r\n                  onChange={onChange}\r\n                  inputProps={{\r\n                    name: 'printDpi',\r\n                    id: 'printDpi',\r\n                  }}\r\n                >\r\n                  <MenuItem value=\"600\">품질 우선</MenuItem>\r\n                  <MenuItem value=\"300\">보통 품질</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n          </form>\r\n\r\n          {/* PDF의 Rendering DPI Dialog */}\r\n          <form className={classes.form} noValidate>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"pdfRenderingDpi\">PDFRendering</InputLabel>\r\n              <Select\r\n                value={IPrintOption.pdfRenderingDpi}\r\n                onChange={onChange}\r\n                inputProps={{\r\n                  name: 'pdfRenderingDpi',\r\n                  id: 'pdfRenderingDpi'\r\n                }}\r\n              >\r\n                <MenuItem value=\"150\">150DPI</MenuItem>\r\n                <MenuItem value=\"200\">200DPI</MenuItem>\r\n                <MenuItem value=\"300\">300DPI</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </form>\r\n\r\n          {/* Calibration 유무 체크 Dialog */}\r\n          <form className={classes.form} noValidate style={{clear:\"both\", float:\"left\"}}>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"putCalibrationMark\">CalibrationMark</InputLabel>\r\n              <Select\r\n                value={IPrintOption.putCalibrationMark}\r\n                onChange={onChange}\r\n                inputProps={{\r\n                  name: 'putCalibrationMark',\r\n                  if: 'putCalibrationMark',\r\n                }}\r\n              >\r\n                <MenuItem value=\"true\">true</MenuItem>\r\n                <MenuItem value=\"false\">false</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </form>\r\n\r\n          {/* Print시 Ncode 유무 Dialog */}\r\n          <form className={classes.form} noValidate>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"printNcode\">PrintNcode</InputLabel>\r\n              <Select\r\n                value={IPrintOption.printNcode}\r\n                onChange={onChange}\r\n                inputProps={{\r\n                  name: 'printNcode',\r\n                  id: 'printNcode'\r\n                }}\r\n              >\r\n                <MenuItem value=\"true\">true</MenuItem>\r\n                <MenuItem value=\"false\">false</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </form>\r\n\r\n          {/* DotsInACell의 Dialog - 보이지는 않는다 */}\r\n          <form className={classes.form} noValidate style={{display:\"none\"}}>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"dotsInACell\" disabled>DotsInACell</InputLabel>\r\n                <Input value=\"7\" id=\"dotsInACell\" name=\"dotsInACell\" />\r\n            </FormControl>\r\n          </form>\r\n\r\n          {/* MediaSize의 Dialog */}\r\n          <form className={classes.form} noValidate>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"mediaSize\">MediaSize</InputLabel>\r\n              <Select\r\n                value={IPrintOption.mediaSize}\r\n                onChange={onChange}\r\n                inputProps={{\r\n                  name: 'mediaSize',\r\n                  id: 'mediaSize'\r\n                }}\r\n              >\r\n                <MenuItem value={\"A4\"}>A4</MenuItem>\r\n                <MenuItem value={\"A3\"}>A3</MenuItem>\r\n                <MenuItem value={\"B4\"}>B4</MenuItem>\r\n                <MenuItem value={\"B5\"}>B5</MenuItem>\r\n                <MenuItem value={\"Letter\"}>Letter</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </form>\r\n\r\n          {/* ColorMode에 대한 Dialog */}\r\n          <form className={classes.form} noValidate>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"colorMode\">ColorMode</InputLabel>\r\n              <Select\r\n                value={IPrintOption.colorMode}\r\n                onChange={onChange}\r\n                inputProps={{\r\n                  name: 'colorMode',\r\n                  id: 'colorMode'\r\n                }}\r\n              >\r\n                <MenuItem value=\"0\">BLUEPRINT</MenuItem>\r\n                <MenuItem value=\"1\">ANDROID_STYLE</MenuItem>\r\n                <MenuItem value=\"2\">IPHONE_STYLE</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </form>\r\n\r\n          {/* Direction에 대한 Dialog */}\r\n          <form className={classes.form} noValidate>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"direction\">Direction</InputLabel>\r\n              <Select\r\n                value={IPrintOption.direction}\r\n                onChange={onChange}\r\n                inputProps={{\r\n                  name: 'direction',\r\n                  id: 'direction'\r\n                }}\r\n              >\r\n                <MenuItem value=\"auto\">auto</MenuItem>\r\n                <MenuItem value=\"protrait\">protrait</MenuItem>\r\n                <MenuItem value=\"landscape\">landscape</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </form>\r\n\r\n          {/* ScaleUp에 대한 Dialog */}\r\n          <form className={classes.form} noValidate style={{clear:\"both\", float:\"left\"}}>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"scaleUpToMedia\">ScaleUpToMedia</InputLabel>\r\n              <Select\r\n                value={IPrintOption.scaleUpToMedia}\r\n                onChange={onChange}\r\n                inputProps={{\r\n                  name: 'scaleUpToMedia',\r\n                  id: 'scaleUpToMedia'\r\n                }}\r\n              >\r\n                <MenuItem value=\"true\">true</MenuItem>\r\n                <MenuItem value=\"false\">false</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </form>\r\n\r\n          {/* ScaleDown에 대한 Dialog */}\r\n          <form className={classes.form} noValidate>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"scaleDownToMedia\">ScaleDownToMedia</InputLabel>\r\n              <Select\r\n                value={IPrintOption.scaleDownToMedia}\r\n                onChange={onChange}\r\n                inputProps={{\r\n                  name: 'scaleDownToMedia',\r\n                  id: 'scaleDownToMedia'\r\n                }}\r\n              >\r\n                <MenuItem value=\"true\">true</MenuItem>\r\n                <MenuItem value=\"false\">false</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </form>\r\n\r\n          {/* TargetPage에 대한 Dialog */}\r\n          <form className={classes.form} noValidate>\r\n            <FormControl className={classes.formControl}>\r\n              {/* <TextField id=\"targetPages\" margin=\"dense\" label=\"TargetPages\" type=\"text\" /> */}\r\n              {/* <InputLabel htmlFor=\"targetPages\">TargetPages</InputLabel> */}\r\n              <TextField id=\"targetPages\" name=\"targetPages\" margin=\"dense\" label=\"TargetPages\"\r\n                     type=\"text\" onSubmit={(e) => handleSave}/>\r\n            </FormControl>\r\n          </form>\r\n\r\n          {/* PagePerSheet에 대한 Dialog */}\r\n          <form className={classes.form} noValidate style={{float:\"left\"}}>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"pagesPerSheet\">PagesPerSheet</InputLabel>\r\n              <Select\r\n                value={IPrintOption.pagesPerSheet}\r\n                onChange={onChange}\r\n                inputProps={{\r\n                  name: 'pagesPerSheet',\r\n                  id: 'pagesPerSheet'\r\n                }}\r\n              >\r\n                <MenuItem value=\"1\">1</MenuItem>\r\n                <MenuItem value=\"2\">2</MenuItem>\r\n                <MenuItem value=\"4\">4</MenuItem>\r\n                <MenuItem value=\"8\">8</MenuItem>\r\n                <MenuItem value=\"9\">9</MenuItem>\r\n                <MenuItem value=\"16\">16</MenuItem>\r\n                <MenuItem value=\"18\">18</MenuItem>\r\n                <MenuItem value=\"25\">25</MenuItem>\r\n                <MenuItem value=\"32\">32</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </form>\r\n\r\n          {/* PageInfo에 대한 Dialog */}\r\n          <form className={classes.form} noValidate>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"pageInfo\">PageInfo</InputLabel>\r\n              <Select\r\n                value={IPrintOption.pageInfo}\r\n                onChange={onChange}\r\n                inputProps={{\r\n                  name: 'pageInfo',\r\n                  id: 'pageInfo'\r\n                }}\r\n              >\r\n                <MenuItem value={1}>3, 27, 1068, 1</MenuItem>\r\n                <MenuItem value={2}>3, 27, 1069, 1</MenuItem>\r\n                <MenuItem value={3}>3, 27, 1070, 1</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </form>\r\n\r\n          {/* DebugMode에 대한 Dialog */}\r\n          <form className={classes.form} noValidate style={{float:\"left\"}}>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"debugMode\">DebugMode</InputLabel>\r\n              <Select\r\n                value={IPrintOption.debugMode}\r\n                onChange={onChange}\r\n                inputProps={{\r\n                  name: 'debugMode',\r\n                  id: 'debugMode'\r\n                }}\r\n              >\r\n                <MenuItem value=\"0\">0</MenuItem>\r\n                <MenuItem value=\"1\">1</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </form>\r\n\r\n          {/* HasToPutNcode에 대한 Dialog */}\r\n          <form className={classes.form} noValidate>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"debugMode\">HasToPutNcode</InputLabel>\r\n              <Select\r\n                value={IPrintOption.hasToPutNcode}\r\n                onChange={onChange}\r\n                inputProps={{\r\n                  name: 'hasToPutNcode',\r\n                  id: 'hasToPutNcode'\r\n                }}\r\n              >\r\n                <MenuItem value=\"true\">true</MenuItem>\r\n                <MenuItem value=\"false\">false</MenuItem>\r\n\r\n              </Select>\r\n            </FormControl>\r\n          </form>\r\n\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleSave} color=\"primary\">\r\n            Save\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NeoPdf\\FileBrowserButton.tsx",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\SurfaceMapper\\Calibration\\CalibrationButton.tsx",["354","355","356"],"import React, { useState } from \"react\";\r\n// import { Container, Modal, Row, Col, Button } from \"react-bootstrap\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Box } from \"@material-ui/core\";\r\nimport CalibrationDialog from \"./CalibrationDialog\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: 'auto',\r\n    width: 'fit-content',\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    minWidth: 120,\r\n  },\r\n  formControlLabel: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function CalibrationButton(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [pageNo, setPageNo] = useState(1);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleClose = (e: {}, reason: \"backdropClick\" | \"escapeKeyDown\") => {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button {...props} onClick={handleClickOpen}>\r\n        {props.children}\r\n      </Button>\r\n\r\n      <CalibrationDialog open={open} handleClose={handleClose} pageNo={pageNo} />\r\n    </div>\r\n  );\r\n}","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\renderer\\pageviewer\\StorageRenderWorker.js",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\types\\index.js",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\utils\\JsUtils.js",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\penstorage\\index.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\DataStructure\\index.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\DataStructure\\Enums.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\DataStructure\\NeoDot.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\penstorage\\InkStorage.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\penstorage\\EventSystem.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\pencomm\\pencomm.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\renderer\\pageviewer\\DrawCurves.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NeoPdf\\NeoPdfManager.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\renderer\\pageviewer\\PenBasedRenderWorker.tsx",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\renderer\\pdf\\NeoPdfViewer.tsx",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NcodePrint\\PrintPdfMain.tsx",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NeoPdf\\FileBrowser.tsx",["357"],"import { uuidv4 } from \"../NcodePrint\";\r\n\r\nexport const _uuid: string = uuidv4();\r\nconst _fileInputId = _uuid;\r\n\r\nlet _fileOpenPromise: Promise<IFileBrowserResult> = null;\r\nlet _resolveFunc = null;\r\nlet _filename = \"\";\r\n\r\n\r\nexport type IFileBrowserResult = {\r\n  result: \"success\" | \"canceled\" | \"failed\",\r\n  file: any,\r\n  url?: any\r\n}\r\n\r\n\r\nexport async function openFileBrowser(): Promise<IFileBrowserResult> {\r\n  let result = await performClick(_fileInputId);\r\n  const file = result.file;\r\n  if (file) {\r\n    const url = URL.createObjectURL(file);\r\n    result = {\r\n      ...result,\r\n      url,\r\n    }\r\n    console.log(file.name);\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n\r\nasync function performClick(elemId): Promise<IFileBrowserResult> {\r\n  _filename = \"\";\r\n\r\n\r\n  _fileOpenPromise = new Promise(resolve => {\r\n    const elem = document.getElementById(elemId);\r\n    if (elem && document.createEvent) {\r\n      const evt = document.createEvent(\"MouseEvents\");\r\n      evt.initEvent(\"click\", true, false);\r\n      elem.dispatchEvent(evt);\r\n      _resolveFunc = resolve;\r\n\r\n      return _fileOpenPromise;\r\n    }\r\n    else {\r\n      resolve({ result: \"failed\", file: null });\r\n    }\r\n  });\r\n\r\n  return _fileOpenPromise;\r\n}\r\n\r\n\r\nasync function performClick_old(elemId): Promise<IFileBrowserResult> {\r\n  _filename = \"\";\r\n  const elem = document.getElementById(elemId);\r\n  if (elem && document.createEvent) {\r\n    _fileOpenPromise = new Promise(resolve => {\r\n      const evt = document.createEvent(\"MouseEvents\");\r\n      evt.initEvent(\"click\", true, false);\r\n      elem.dispatchEvent(evt);\r\n      _resolveFunc = resolve;\r\n    });\r\n\r\n    return _fileOpenPromise;\r\n  }\r\n\r\n  return Promise.resolve({ result: \"failed\", file: null });\r\n}\r\n\r\nexport function onSuccess(e) {\r\n  window.removeEventListener('focus', handleFocusBack);\r\n\r\n  const file = e.target.files[0];\r\n  console.log(\"OK : \" + file.name);\r\n\r\n  _filename = file.name;\r\n  e.target.value = null;\r\n\r\n  _resolveFunc({ result: \"success\", file });\r\n}\r\n\r\nfunction handleFocusBack(e) {\r\n  // console.log('focus-back');\r\n  setTimeout(() => {\r\n    if (_filename.length) {\r\n      // 이것은 time delay를 주어야 동작한다.\r\n      console.log('Files Loaded');\r\n    }\r\n    // Alert the user if the number\r\n    // of file is zero\r\n    else {\r\n      console.log('Cancel clicked');\r\n      _resolveFunc(\"\");\r\n    }\r\n  }, 300);\r\n\r\n  document.body.onfocus = null;\r\n  // window.removeEventListener('focus', handleFocusBack);\r\n}\r\n\r\nexport function onOpenClicked(e) {\r\n  document.body.onfocus = handleFocusBack;\r\n  // window.addEventListener('focus', handleFocusBack);\r\n}\r\n\r\n","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\SurfaceMapper\\Calibration\\CalibrationDialog.tsx",["358","359","360","361","362","363","364","365","366"],"import React, { useState } from \"react\";\r\n\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Button, makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from \"@material-ui/core\";\r\nimport { t } from \"../../Locales/i18n\";\r\n\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   form: {\r\n//     display: 'flex',\r\n//     flexDirection: 'column',\r\n//     margin: 'auto',\r\n//     width: 'fit-content',\r\n//   },\r\n//   formControl: {\r\n//     marginTop: theme.spacing(2),\r\n//     minWidth: 120,\r\n//   },\r\n//   formControlLabel: {\r\n//     marginTop: theme.spacing(1),\r\n//   },\r\n// }));\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 400,\r\n  },\r\n});\r\n\r\n\r\nconst useStyles2 = makeStyles({\r\n  table: {\r\n    minWidth: 2000,\r\n  },\r\n});\r\n\r\n\r\ntype Props = {\r\n  open: boolean,\r\n  handleClose: any,\r\n  pageNo: number,\r\n}\r\n\r\n\r\n\r\n\r\nconst TAX_RATE = 0.07;\r\n\r\n\r\nfunction ccyFormat(num: number) {\r\n  return `${num.toFixed(2)}`;\r\n}\r\n\r\nfunction priceRow(qty: number, unit: number) {\r\n  return qty * unit;\r\n}\r\n\r\nfunction createRow(desc: string, qty: number, unit: number) {\r\n  const price = priceRow(qty, unit);\r\n  return { desc, qty, unit, price };\r\n}\r\n\r\ninterface Row {\r\n  desc: string;\r\n  qty: number;\r\n  unit: number;\r\n  price: number;\r\n}\r\n\r\nfunction subtotal(items: Row[]) {\r\n  return items.map(({ price }) => price).reduce((sum, i) => sum + i, 0);\r\n}\r\n\r\nconst rows = [\r\n  createRow('Paperclips (Box)', 100, 1.15),\r\n  createRow('Paper (Case)', 10, 45.99),\r\n  createRow('Waste Basket', 2, 17.99),\r\n];\r\n\r\nconst invoiceSubtotal = subtotal(rows);\r\nconst invoiceTaxes = TAX_RATE * invoiceSubtotal;\r\nconst invoiceTotal = invoiceTaxes + invoiceSubtotal;\r\n\r\ntype maxWidthType = \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\";\r\n\r\nexport default function CalibrationDialog(props: Props) {\r\n  const { open, handleClose, pageNo } = props;\r\n  const classes = useStyles();\r\n  const classes2 = useStyles2();\r\n\r\n  const handleSave = (e) => {\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    console.log(e.target.value);\r\n  }\r\n\r\n\r\n  const maxWidth = \"md\";\r\n\r\n  const img_src = \"https://www.k-voucher.kr/bbs/service/2020-09/16010263390201_1_1601026339.PNG\";\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={handleClose}\r\n        fullWidth={true}\r\n        maxWidth={maxWidth}\r\n        aria-labelledby=\"form-dialog-title\">\r\n\r\n        <DialogTitle id=\"form-dialog-title\">{t('calibration_dlg_title')}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Dialog의 Body\r\n          </DialogContentText>\r\n        </DialogContent>\r\n\r\n\r\n\r\n\r\n\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"spanning table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"center\" colSpan={3}>\r\n                  Details\r\n            </TableCell>\r\n                <TableCell align=\"right\">Price</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Desc</TableCell>\r\n                <TableCell align=\"right\">Qty.</TableCell>\r\n                <TableCell align=\"right\">Unit</TableCell>\r\n                <TableCell align=\"right\">Sum</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row) => (\r\n                <TableRow key={row.desc}>\r\n                  <TableCell>{row.desc}</TableCell>\r\n                  <TableCell align=\"right\">{row.qty}</TableCell>\r\n                  <TableCell align=\"right\">{row.unit}</TableCell>\r\n                  <TableCell align=\"right\">{ccyFormat(row.price)}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n              <TableRow>\r\n                <TableCell rowSpan={3} />\r\n                <TableCell colSpan={2}>Subtotal</TableCell>\r\n                <TableCell align=\"right\">{ccyFormat(invoiceSubtotal)}</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Tax</TableCell>\r\n                <TableCell align=\"right\">{`${(TAX_RATE * 100).toFixed(0)} %`}</TableCell>\r\n                <TableCell align=\"right\">{ccyFormat(invoiceTaxes)}</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell colSpan={2}>Total</TableCell>\r\n                <TableCell align=\"right\">{ccyFormat(invoiceTotal)}</TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes2.table} aria-label=\"spanning table\">\r\n\r\n\r\n            <TableBody>\r\n              <TableRow>\r\n                <TableCell>\r\n                  <img src={img_src} style={{ width: \"400px\", height: \"400px\" }} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <img src={img_src} style={{ width: \"400px\", height: \"400px\" }} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <img src={img_src} style={{ width: \"400px\", height: \"400px\" }} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <img src={img_src} style={{ width: \"400px\", height: \"400px\" }} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n\r\n\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            취소\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\types\\typedef.js",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\DataStructure\\NeoStroke.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\pencomm\\pencomm_base.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\pencomm\\pencomm_event.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\pencomm\\pencomm_enum.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\pencomm\\pen_util_func.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\pencomm\\pencomm_const.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NeoPdf\\NeoPdfDocument.ts",["367","368","369"],"import * as PdfJs from \"pdfjs-dist\";\r\nimport { CoordinateTanslater, IPolygonArea } from \"../Coordinates\";\r\nimport { stringToDpiNum, } from \"../DataStructure/Structures\";\r\nimport { getDocumentId, } from \"../NcodePrint\";\r\nimport { IPageOverview } from \"../NcodePrint/PagesForPrint\";\r\nimport { ColorConvertMethod } from \"../NcodeSurface/CanvasColorConverter\";\r\nimport { getNcodeAtCanvasPixel, getNcodeRectAtCanvasPixel, ICellsOnSheetDesc } from \"../NcodeSurface/NcodeRasterizer\";\r\nimport { MappingItem } from \"../SurfaceMapper/MappingItem\";\r\nimport MappingStorage from \"../SurfaceMapper/MappingStorage\";\r\nimport NeoPdfPage, { IPdfPageCanvasDesc, PDF_VIEWPORT_DESC } from \"./NeoPdfPage\";\r\n\r\nPdfJs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${PdfJs.version}/pdf.worker.js`;\r\nvar CMAP_URL = \"./cmaps/\";\r\nvar CMAP_PACKED = true;\r\n\r\nexport type IGetDocumentOptions = {\r\n  url?: string,\r\n  fingerprint?: string,\r\n  cMapUrl?: string,\r\n  cMapPacked?: boolean,\r\n}\r\n\r\nexport type IPdfDocDesc = {\r\n  /** PDF url */\r\n  url: string,\r\n\r\n  /** PDF finger print */\r\n  fingerprint: string,\r\n\r\n  /** POD id = fingerprint + \"/\" + pagesPerSheet */\r\n  id: string,\r\n\r\n  /** total pages in pdf file */\r\n  numPages: number,\r\n};\r\n\r\n\r\n\r\n\r\nexport default class NeoPdfDocument {\r\n  _pdfDoc: PdfJs.PDFDocumentProxy = null;\r\n\r\n  _ready: PdfJs.PDFLoadingTask<PdfJs.PDFDocumentProxy>;\r\n\r\n  _url: string;\r\n\r\n  _fingerprint: string;\r\n\r\n  _id: string;\r\n\r\n  private _pages: NeoPdfPage[];\r\n\r\n  pagesOverview: IPageOverview[];\r\n\r\n  direction: \"portrait\" | \"landscape\";\r\n\r\n  load = async (options: IGetDocumentOptions) => {\r\n    await this.justLoad(options);\r\n\r\n    // const { url, cMapUrl, cMapPacked } = options;\r\n\r\n    // this._url = url;\r\n    // this._ready = PdfJs.getDocument(\r\n    //   {\r\n    //     url: url,\r\n    //     cMapUrl: cMapUrl ? cMapUrl : CMAP_URL,\r\n    //     cMapPacked: cMapPacked ? cMapPacked : CMAP_PACKED,\r\n    //   });\r\n\r\n    // const _pdfDoc = await this._ready.promise;\r\n    // this._pdfDoc = _pdfDoc;\r\n    // this._fingerprint = _pdfDoc.fingerprint;\r\n\r\n    // page를 로드한다\r\n    this._pages = [];\r\n    for (let i = 1; i <= this._pdfDoc.numPages; i++) {\r\n      const neoPage = new NeoPdfPage(this, i);\r\n      this._pages.push(neoPage);\r\n    }\r\n\r\n    await this.setPageOverview(this);\r\n    return this;\r\n  }\r\n\r\n  destroy = () => {\r\n    this._pages = [];\r\n    this._pdfDoc.destroy();\r\n  }\r\n\r\n  justLoad = async (options: IGetDocumentOptions) => {\r\n    const { url, cMapUrl, cMapPacked } = options;\r\n\r\n    this._url = url;\r\n    this._ready = PdfJs.getDocument(\r\n      {\r\n        url: url,\r\n        cMapUrl: cMapUrl ? cMapUrl : CMAP_URL,\r\n        cMapPacked: cMapPacked ? cMapPacked : CMAP_PACKED,\r\n      });\r\n\r\n    const pdfDoc = await this._ready.promise;\r\n    this._pdfDoc = pdfDoc;\r\n    this._fingerprint = pdfDoc.fingerprint;\r\n\r\n    return this;\r\n  }\r\n\r\n  get numPages() {\r\n    return this._pdfDoc.numPages;\r\n  }\r\n\r\n  get url() {\r\n    return this._url;\r\n  }\r\n\r\n  get fingerprint() {\r\n    return this._fingerprint;\r\n  }\r\n\r\n  getPageAsync = async (pageNo: number) => {\r\n    await this._pages[pageNo - 1]._ready;\r\n    return this._pages[pageNo - 1];\r\n  }\r\n\r\n  /** page가 로드된 것이 확실할 때만 쓸 것! */\r\n  getPage = (pageNo: number) => {\r\n    if (!this._pages[pageNo - 1]._loaded) {\r\n      throw new Error(`PDF page ${pageNo} has not been loaded`);\r\n    }\r\n\r\n    return this._pages[pageNo - 1];\r\n  }\r\n\r\n  getMetadata = async () => {\r\n    return this._pdfDoc.getMetadata();\r\n  }\r\n\r\n  public renderPages_dpi = async (pageNums: number[], dpi: number, colorConvertMode?: ColorConvertMethod)\r\n    : Promise<IPdfPageCanvasDesc[]> => {\r\n    const pdfDpi = dpi;\r\n\r\n    const promises: Promise<IPdfPageCanvasDesc>[] = [];\r\n    for (let i = 0; i < pageNums.length; i++) {\r\n      const pageNo = pageNums[i];\r\n      const neoPage = await this.getPageAsync(pageNo);\r\n      const pr = neoPage.render_dpi(i, pdfDpi).then(async (canvasDesc) => {\r\n        return await neoPage.convertColor(canvasDesc, colorConvertMode);\r\n      })\r\n      promises.push(pr);\r\n    }\r\n    const descs = await Promise.all(promises);\r\n\r\n    const pageImageDescs: IPdfPageCanvasDesc[] = new Array(descs.length);\r\n    descs.forEach(async (canvasDesc) => {\r\n      const { index } = canvasDesc;\r\n      pageImageDescs[index] = canvasDesc;\r\n      // console.log(`[Multipage] page rendered ${canvasDesc.pdfPageInfo.pageNo}, index ${index}`);\r\n    });\r\n\r\n    // let converterPromises = [];\r\n    // descs.forEach(async (canvasDesc) => {\r\n    //   const { index } = canvasDesc;\r\n    //   pageImageDescs[index] = canvasDesc;\r\n\r\n    //   const pdfCanvas = canvasDesc.canvas;\r\n    //   const converter = new CanvasColorConverter(pdfCanvas);\r\n    //   const pr = converter.convert(colorConvertMode);\r\n    //   converterPromises.push(pr);\r\n    // });\r\n    return pageImageDescs;\r\n  }\r\n\r\n\r\n  registerMappingItem = (pageImagesDesc: IPdfPageCanvasDesc[], ncodePlane: ICellsOnSheetDesc, assignNewCode: boolean) => {\r\n    for (let i = 0; i < ncodePlane.ncodeAreas.length; i++) {\r\n      const desc = pageImagesDesc[i];\r\n      const pdfRect = desc.drawnRect;\r\n      const ncode = ncodePlane.ncodeAreas[i];\r\n\r\n      const mapData = new MappingItem();\r\n\r\n      /** canvas 좌표계 */\r\n      const { x, y, unit, width, height } = pdfRect;\r\n      const dpi = stringToDpiNum(unit);\r\n\r\n      /** Ncode 좌표계 */\r\n      const pt0_nu = getNcodeAtCanvasPixel({ x, y, dpi }, ncodePlane);\r\n      const pt1_nu = getNcodeAtCanvasPixel({ x: x + width, y: y + height, dpi }, ncodePlane);\r\n\r\n      const pdfRect_nu = getNcodeRectAtCanvasPixel({ dpi, x, y, width, height }, ncodePlane);\r\n\r\n      /** 페이지에 해당하는 ncode가 인쇄된 영역 */\r\n      const r_nu = ncode.rect;\r\n      const polygon: IPolygonArea = [\r\n        { x: r_nu.x, y: r_nu.y },\r\n        { x: r_nu.x + r_nu.width, y: r_nu.y },\r\n        { x: r_nu.x + r_nu.width, y: r_nu.y + r_nu.height },\r\n        { x: r_nu.x, y: r_nu.y + r_nu.height },\r\n      ];\r\n\r\n      mapData.setNcodeArea({\r\n        pageInfo: ncode.pageInfo,\r\n        pdfDrawnRect: { ...pdfRect_nu },\r\n        npageArea: polygon,\r\n      });\r\n\r\n\r\n      /** PDF 좌표계 */\r\n      mapData.setPdfArea({\r\n        pdfPageInfo: { ...desc.pdfPageInfo },\r\n        rect: {\r\n          unit: \"pu\",\r\n          x: 0, y: 0,\r\n          width: desc.width_pu,\r\n          height: desc.height_pu,\r\n        }\r\n      });\r\n\r\n      const trans = new CoordinateTanslater();\r\n      trans.calc(mapData);\r\n      const pageNo = desc.pdfPageInfo.pageNo;\r\n      const page = this.getPage(pageNo);\r\n      page.setTranslater(trans);\r\n\r\n      if (assignNewCode) {\r\n        const st = MappingStorage.getInstance();\r\n        st.register(trans);\r\n\r\n\r\n      }\r\n      // trans.dump(`[dump-${this._url}]-${i} `);\r\n    }\r\n\r\n    if (assignNewCode) {\r\n      const st = MappingStorage.getInstance();\r\n      // st.dump(\"MAP\");\r\n    }\r\n  }\r\n\r\n  setDocumentId = (pagesPerSheet: number) => {\r\n    this._id = getDocumentId(this._fingerprint, pagesPerSheet);\r\n  }\r\n\r\n  get id() {\r\n    return this._id;\r\n  }\r\n\r\n  setPageOverview = async (pdf) => {\r\n    // const pdf = this.props.pdf;\r\n    this.pagesOverview = new Array(pdf.numPages + 1);\r\n    // const { pagesPerSheet } = this.printOption;\r\n\r\n    let numPortraitPages = 0;\r\n    let numLandscapePages = 0;\r\n\r\n    for (let i = 0; i < pdf.numPages; i++) {\r\n      const page = await pdf.getPageAsync(i + 1);\r\n      const vpt: PDF_VIEWPORT_DESC = page.getViewport({ scale: 1, rotation: 0 });\r\n      const { width, height } = vpt;\r\n\r\n      const landscape = width > height;\r\n      landscape ? numLandscapePages++ : numPortraitPages++;\r\n\r\n      const pageOverview = {\r\n        rotation: vpt.rotation,\r\n        landscape,\r\n        sizePu: { width, height },\r\n      }\r\n      this.pagesOverview[i] = pageOverview;\r\n    }\r\n\r\n\r\n    if (numPortraitPages >= numLandscapePages) {\r\n      this.direction = \"portrait\";\r\n    } else {\r\n      this.direction = \"landscape\";\r\n    }\r\n\r\n    return this.direction;\r\n  }\r\n}\r\n","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NcodePrint\\UtilFunc.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NcodeSurface\\SurfaceSplitter.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\neosmartpen\\renderer\\pdf\\Page.tsx",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NcodePrint\\PagesForPrint.tsx",["370"],"import React from \"react\";\r\n\r\nimport { PageForPrint } from \"./PageForPrint\";\r\nimport \"./print.css\";\r\n\r\nimport { ISize } from \"../DataStructure/Structures\";\r\nimport { IPrintOption } from \"./PrintDataTypes\";\r\nimport NeoPdfDocument from \"../NeoPdf/NeoPdfDocument\";\r\nimport { PDF_VIEWPORT_DESC } from \"../NeoPdf/NeoPdfPage\";\r\n\r\ninterface Props { // tslint:disable-line interface-over-type-literal\r\n  text: string,\r\n  pdf: NeoPdfDocument,\r\n  shouldRenderPage: boolean,\r\n  /** null이면 화면 전용 */\r\n  OnPagePrepared: Function,\r\n\r\n  printOption: IPrintOption,\r\n\r\n  pagesOverview: IPageOverview[],\r\n\r\n};\r\n\r\ntype State = {\r\n  renderState: string,\r\n};\r\n\r\nexport type IPageOverview = {\r\n  rotation: number,\r\n\r\n  /** pdf의 viewport가 rotation 0일 때의 크기로 판단(rotation은 고려하지 않음) */\r\n  landscape: boolean,\r\n\r\n  /** pdf의 viewport의 rotation은 고려하지 않음, 각 페이지에서 rotation된 것으로 rendering */\r\n  sizePu: ISize,\r\n}\r\n\r\nexport class PagesForPrint extends React.Component<Props, State> {\r\n\r\n  printOption: IPrintOption = null;\r\n\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.printOption = this.props.printOption;\r\n    this.state = {\r\n      renderState: \"rendering\",\r\n    };\r\n    // console.time('Function #1');\r\n  }\r\n\r\n  setPageOverview_old = async (pdf) => {\r\n    this.setState({\r\n      renderState: \"ready\",\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.pdf) {\r\n      this.setPageOverview_old(this.props.pdf);\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps: Props, nextState: State) {\r\n\r\n    if (this.state.renderState !== \"ready\" && nextState.renderState === \"ready\") {\r\n      return true;\r\n    }\r\n\r\n    if (this.props.pdf !== nextProps.pdf) {\r\n      console.log(`[yyy] setPageOverview_old called`);\r\n      this.setPageOverview_old(nextProps.pdf);\r\n      return true;\r\n    }\r\n\r\n\r\n    return false;\r\n  }\r\n\r\n  componentDidUpdate(nextProps, nextState) {\r\n    // console.log(\"[xxx] PagesForPrint componentDidUpdate\");\r\n  }\r\n\r\n  public render() {\r\n    const { renderState } = this.state;\r\n    const { pdf, OnPagePrepared, pagesOverview } = this.props;\r\n\r\n    const printOption = this.printOption;\r\n    const { pagesPerSheet, targetPages, } = printOption;\r\n\r\n    const numPages = targetPages.length;\r\n    const numSheets = Math.ceil(numPages / pagesPerSheet);\r\n    const pageNumsInSheet: number[][] = new Array(numSheets);\r\n\r\n\r\n    for (let i = 0; i < numSheets; i++) {\r\n      pageNumsInSheet[i] = new Array(0);\r\n\r\n      for (let j = 0; j < pagesPerSheet && (i * pagesPerSheet + j) < numPages; j++) {\r\n        const pageNo = targetPages[i * pagesPerSheet + j];\r\n        pageNumsInSheet[i].push(pageNo);\r\n      }\r\n    }\r\n\r\n\r\n    return (\r\n      // <div className=\"relativeCSS\">\r\n      <div>\r\n        {renderState === \"ready\" ? pageNumsInSheet.map(\r\n          (v, i) => {\r\n            // console.log(`Page displaying ${i}`);\r\n            return (\r\n              <div>\r\n                {/* { isLandscape ? (<LandscapeOrientation />) : (<PortraitOrientation />)} */}\r\n                { console.log(`[key] page-${pdf.fingerprint}-${i}`)}\r\n\r\n                <PageForPrint\r\n                  pdf={pdf}\r\n                  sheetIndex={i}\r\n                  key={`page-${pdf.fingerprint}-${i}`}\r\n                  name={`page-${pdf.fingerprint}-${i}`}\r\n                  OnPagePrepared={OnPagePrepared}\r\n                  printOption={printOption}\r\n                  pageNums={pageNumsInSheet[i]}\r\n                  pagesOverview={pagesOverview}\r\n                />\r\n              </div>\r\n            )\r\n          }\r\n        ) : <></>}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NcodePrint\\PageOrientation.jsx",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NeoPdf\\NeoPdfPage.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\SurfaceMapper\\MappingItem.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\SurfaceMapper\\MappingStorage.ts",["371","372","373"],"import { CoordinateTanslater, IMappingParams, IPdfPageDesc } from \"../Coordinates\";\r\nimport { INcodeSOBPxy, IPageSOBP } from \"../DataStructure/Structures\";\r\nimport { isSamePage } from \"../NcodeSurface\";\r\nimport { IPdfDocDesc } from \"../NeoPdf/NeoPdfDocument\";\r\n\r\nvar _instance: MappingStorage = null;\r\nconst LOCAL_STORAGE_ID = \"GridaBoard_codeMappingInfo_v2\";\r\n\r\nexport default class MappingStorage {\r\n  _arrMapped: IMappingParams[] = [];\r\n\r\n  private constructor() {\r\n  }\r\n\r\n  static getInstance() {\r\n    if (_instance) return _instance;\r\n\r\n    _instance = new MappingStorage();\r\n    return _instance;\r\n  }\r\n\r\n  register = (item: CoordinateTanslater) => {\r\n    const params = item.mappingParams;\r\n\r\n    var now = new Date();\r\n    var timeStr =\r\n      `${addZeros(now.getFullYear(), 2)}/` +\r\n      `${addZeros(now.getMonth() + 1, 2)}/` +\r\n      `${addZeros(now.getDate(), 2)} ` +\r\n      `${addZeros(now.getHours(), 2)}:` +\r\n      `${addZeros(now.getMinutes(), 2)}:` +\r\n      `${addZeros(now.getSeconds(), 2)}.` +\r\n      `${addZeros(now.getMilliseconds(), 4)}`;\r\n\r\n    params.timeString = timeStr; // JSON.stringify(new Date());\r\n    this._arrMapped.push(params);\r\n  }\r\n\r\n  /**\r\n   * pen down시에 새로운 SOBP라면, 관련된 PDF가 있는지 찾을 때 쓰인다\r\n   */\r\n  findPdfPage = (ncodeXy: INcodeSOBPxy) => {\r\n    // const pdfPageInfo: IPdfPageDesc = null;\r\n    // const pdfDocInfo: IPdfDocDesc = null;\r\n\r\n    // let found = -1;\r\n    // for ( let i=0; i<this._arrMapped.length; i++ ) {\r\n    //   const trans = this._arrMapped[i];\r\n    //   if ( isSamePage(ncodeXy as IPageSOBP, trans.pageInfo) ) {\r\n    //     found = i;\r\n    //     break;\r\n    //   }\r\n    // }\r\n\r\n\r\n    /** 원래는 폴리곤에 속했는지 점검해야 하지만, 현재는 같은 페이지인지만 점검한다  2020/12/06 */\r\n    const found = this._arrMapped.find(trans => isSamePage(ncodeXy, trans.pageInfo));\r\n    return found;\r\n  }\r\n\r\n  /**\r\n   * Ncode가 발행된 적이 있는지를 점검하기 위해서 쓰인다.\r\n   */\r\n  findMappedNcode = (pdfId: string) => {\r\n    const found = this._arrMapped.find(trans => pdfId === trans.pdfDesc.id);\r\n    return found;\r\n  }\r\n\r\n  dump = (prefix: string) => {\r\n    console.log(`[${prefix}]----------------------------------------------------------------------`);\r\n    const str = JSON.stringify(this._arrMapped, null, \"  \");\r\n    const arr = str.split(\"\\n\");\r\n\r\n    for (let i = 0; i < arr.length; i++) {\r\n      console.log(`[${prefix}] ${arr[i]}`);\r\n    }\r\n    console.log(`[${prefix}]----------------------------------------------------------------------`);\r\n  }\r\n\r\n\r\n\r\n  storeMappingInfo = () => {\r\n    if (storageAvailable(\"localStorage\")) {\r\n      const key = LOCAL_STORAGE_ID;\r\n      const value = JSON.stringify(this._arrMapped);\r\n      // console.log(`Pdf Ncode Info Saved   ${key}: ${value}`);\r\n      localStorage.setItem(key, value);\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n\r\n  /**\r\n   * app이 기동되면 반드시 처음에 load하자\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  loadMappingInfo = () => {\r\n    if (storageAvailable(\"localStorage\")) {\r\n      const key = LOCAL_STORAGE_ID;\r\n      const value = localStorage.getItem(key);\r\n\r\n      if (value) {\r\n        this._arrMapped = JSON.parse(value);\r\n\r\n        this._arrMapped.sort(function (a, b) {\r\n          if (a.timeString < b.timeString) return 1;\r\n          else if (a.timeString > b.timeString) return -1;\r\n          else return 0;\r\n        });\r\n\r\n        // const debug = JSON.stringify(this._arrMapped);\r\n        // console.log(`Pdf Ncode Info Loaded   ${key}: ${debug}`);\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n\r\n\r\nfunction storageAvailable(type) {\r\n  var storage;\r\n  try {\r\n    storage = window[type];\r\n    var x = \"__storage_test__\";\r\n    storage.setItem(x, x);\r\n    storage.removeItem(x);\r\n    return true;\r\n  } catch (e) {\r\n    return (\r\n      e instanceof DOMException &&\r\n      // Firefox를 제외한 모든 브라우저\r\n      (e.code === 22 ||\r\n        // Firefox\r\n        e.code === 1014 ||\r\n        // 코드가 존재하지 않을 수도 있기 떄문에 이름 필드도 확인합니다.\r\n        // Firefox를 제외한 모든 브라우저\r\n        e.name === \"QuotaExceededError\" ||\r\n        // Firefox\r\n        e.name === \"NS_ERROR_DOM_QUOTA_REACHED\") &&\r\n      // 이미 저장된 것이있는 경우에만 QuotaExceededError를 확인하십시오.\r\n      storage &&\r\n      storage.length !== 0\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction addZeros(num, digit) {\r\n  // 자릿수 맞춰주기\r\n  var zero = \"\";\r\n  num = num.toString();\r\n  if (num.length < digit) {\r\n    for (var i = 0; i < digit - num.length; i++) {\r\n      zero += \"0\";\r\n    }\r\n  }\r\n  return zero + num;\r\n}\r\n","C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\DataStructure\\Structures.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NcodePrint\\index.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NcodeSurface\\NcodeRasterizer.tsx",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NcodeSurface\\SurfaceInfo.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NcodePrint\\PageForPrint.tsx",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NcodeSurface\\NcodeConstans.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\Coordinates\\index.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NcodeSurface\\NcodeFetcher.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NcodeSurface\\NcodeSurfaceDataJson.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\NcodeSurface\\index.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\Coordinates\\DataTypes.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\Coordinates\\CoordinateTanslater.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\Coordinates\\SolveTransform.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\Coordinates\\EchelonMatrix.ts",[],"C:\\dotProject\\_trunk\\WWW\\PenComponent\\src\\NcodePrintLib\\Coordinates\\GaussianElimination.ts",[],{"ruleId":"374","replacedBy":"375"},{"ruleId":"376","replacedBy":"377"},{"ruleId":"378","severity":1,"message":"379","line":8,"column":1,"nodeType":"380","endLine":18,"endColumn":3},{"ruleId":"381","severity":1,"message":"382","line":7,"column":7,"nodeType":"383","messageId":"384","endLine":7,"endColumn":19},{"ruleId":"378","severity":1,"message":"379","line":32,"column":1,"nodeType":"380","endLine":52,"endColumn":3},{"ruleId":"378","severity":1,"message":"379","line":94,"column":1,"nodeType":"380","endLine":192,"endColumn":3},{"ruleId":"374","replacedBy":"375"},{"ruleId":"376","replacedBy":"377"},{"ruleId":"385","severity":1,"message":"386","line":17,"column":10,"nodeType":"383","messageId":"384","endLine":17,"endColumn":27},{"ruleId":"385","severity":1,"message":"387","line":17,"column":29,"nodeType":"383","messageId":"384","endLine":17,"endColumn":41},{"ruleId":"385","severity":1,"message":"388","line":20,"column":8,"nodeType":"383","messageId":"384","endLine":20,"endColumn":24},{"ruleId":"385","severity":1,"message":"389","line":24,"column":8,"nodeType":"383","messageId":"384","endLine":24,"endColumn":14},{"ruleId":"385","severity":1,"message":"390","line":5,"column":18,"nodeType":"383","messageId":"384","endLine":5,"endColumn":21},{"ruleId":"385","severity":1,"message":"391","line":25,"column":9,"nodeType":"383","messageId":"384","endLine":25,"endColumn":16},{"ruleId":"385","severity":1,"message":"392","line":27,"column":18,"nodeType":"383","messageId":"384","endLine":27,"endColumn":27},{"ruleId":"385","severity":1,"message":"393","line":57,"column":16,"nodeType":"383","messageId":"384","endLine":57,"endColumn":32},{"ruleId":"385","severity":1,"message":"394","line":1,"column":17,"nodeType":"383","messageId":"384","endLine":1,"endColumn":25},{"ruleId":"385","severity":1,"message":"395","line":90,"column":6,"nodeType":"383","messageId":"384","endLine":90,"endColumn":18},{"ruleId":"385","severity":1,"message":"396","line":93,"column":30,"nodeType":"383","messageId":"384","endLine":93,"endColumn":36},{"ruleId":"385","severity":1,"message":"397","line":97,"column":9,"nodeType":"383","messageId":"384","endLine":97,"endColumn":19},{"ruleId":"385","severity":1,"message":"398","line":100,"column":9,"nodeType":"383","messageId":"384","endLine":100,"endColumn":17},{"ruleId":"399","severity":1,"message":"400","line":182,"column":19,"nodeType":"401","endLine":182,"endColumn":84},{"ruleId":"399","severity":1,"message":"400","line":185,"column":19,"nodeType":"401","endLine":185,"endColumn":84},{"ruleId":"399","severity":1,"message":"400","line":188,"column":19,"nodeType":"401","endLine":188,"endColumn":84},{"ruleId":"399","severity":1,"message":"400","line":191,"column":19,"nodeType":"401","endLine":191,"endColumn":84},{"ruleId":"385","severity":1,"message":"402","line":187,"column":13,"nodeType":"383","messageId":"384","endLine":187,"endColumn":19},{"ruleId":"385","severity":1,"message":"403","line":188,"column":13,"nodeType":"383","messageId":"384","endLine":188,"endColumn":19},{"ruleId":"385","severity":1,"message":"404","line":235,"column":13,"nodeType":"383","messageId":"384","endLine":235,"endColumn":15},{"ruleId":"385","severity":1,"message":"405","line":9,"column":10,"nodeType":"383","messageId":"384","endLine":9,"endColumn":27},{"ruleId":"385","severity":1,"message":"406","line":1,"column":47,"nodeType":"383","messageId":"384","endLine":1,"endColumn":59},{"ruleId":"385","severity":1,"message":"407","line":2,"column":24,"nodeType":"383","messageId":"384","endLine":2,"endColumn":33},{"ruleId":"385","severity":1,"message":"408","line":4,"column":10,"nodeType":"383","messageId":"384","endLine":4,"endColumn":21},"no-native-reassign",["409"],"no-negated-in-lhs",["410"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'prev_palette' is assigned a value but never used.","Identifier","unusedVar","@typescript-eslint/no-unused-vars","'IPrintingProgress' is defined but never used.","'IPrintOption' is defined but never used.","'FormControlLabel' is defined but never used.","'Switch' is defined but never used.","'Box' is defined but never used.","'classes' is assigned a value but never used.","'setPageNo' is assigned a value but never used.","'performClick_old' is defined but never used.","'useState' is defined but never used.","'maxWidthType' is defined but never used.","'pageNo' is assigned a value but never used.","'handleSave' is assigned a value but never used.","'onChange' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'pt0_nu' is assigned a value but never used.","'pt1_nu' is assigned a value but never used.","'st' is assigned a value but never used.","'PDF_VIEWPORT_DESC' is defined but never used.","'IPdfPageDesc' is defined but never used.","'IPageSOBP' is defined but never used.","'IPdfDocDesc' is defined but never used.","no-global-assign","no-unsafe-negation"]