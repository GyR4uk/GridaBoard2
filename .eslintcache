[{"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\index.js":"1","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\serviceWorker.js":"2","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\client\\Root.js":"3","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\shared\\App.js":"4","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\styles\\theme.js":"5","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\store\\rootReducer.ts":"6","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\store\\reducers\\pointerTracer.js":"7","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\store\\reducers\\authorization.js":"8","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\store\\reducers\\ui.js":"9","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\store\\reducers\\rotate.js":"10","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\pages\\index.tsx":"11","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\pages\\Post.tsx":"12","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\pages\\Posts.tsx":"13","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\pages\\Home.tsx":"14","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\pages\\About.tsx":"15","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\components\\navbar\\Upload.js":"16","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\components\\GoogleBtn.js":"17","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\SurfaceMapper\\MappingStorage.ts":"18","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\index.ts":"19","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\penstorage\\InkStorage.ts":"20","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\components\\navbar\\CalibrationMenual.tsx":"21","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\components\\navbar\\ColorButtons.tsx":"22","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\components\\navbar\\PrintButton.tsx":"23","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\components\\navbar\\PageNumbering.tsx":"24","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\Save\\SavePdf.tsx":"25","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\components\\buttons\\FullScreenButton.tsx":"26","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\components\\buttons\\TracePointButton.tsx":"27","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\components\\buttons\\ZoomButton.tsx":"28","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\components\\buttons\\FitButton.tsx":"29","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\components\\buttons\\RotateButton.tsx":"30","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\components\\buttons\\BackgroundButton.tsx":"31","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\components\\buttons\\PenTypeButton.tsx":"32","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\components\\buttons\\ConnectButton.tsx":"33","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\DefaultOption.ts":"34","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\Locales\\i18n.ts":"35","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\CanvasColorConverter.ts":"36","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PrintDataTypes.ts":"37","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\cloud_util_func.ts":"38","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PrintPdfButton.tsx":"39","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\index.ts":"40","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\SurfaceMapper\\Calibration\\CalibrationButton.tsx":"41","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NeoPdf\\FileBrowserButton.tsx":"42","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\penstorage\\EventSystem.ts":"43","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\pencomm\\PenManager.ts":"44","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\styles\\ThemeManager.ts":"45","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\DrawCurves.ts":"46","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\index.ts":"47","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NeoPdf\\NeoPdfManager.ts":"48","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\constants.ts":"49","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\types\\index.js":"50","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\DataStructure\\index.ts":"51","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\DataStructure\\Enums.ts":"52","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\pencomm\\neosmartpen.ts":"53","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NeoPdf\\FileBrowser.tsx":"54","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\SurfaceMapper\\Calibration\\CalibrationDialog.tsx":"55","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\renderer\\MixedPageView.tsx":"56","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\noteserver\\PaperInfo.ts":"57","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\noteserver\\NoteserverClient.ts":"58","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\utils\\UtilsFunc.ts":"59","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\RenderWorkerBase.tsx":"60","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\StorageRenderer.tsx":"61","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\PenBasedRenderer.tsx":"62","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PrintPdfMain.tsx":"63","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\SurfaceInfo.ts":"64","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\NcodeRasterizer.tsx":"65","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NeoPdf\\NeoPdfDocument.ts":"66","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\DataStructure\\NeoDot.ts":"67","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\DataStructure\\NeoStroke.ts":"68","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\pencomm\\pencomm.ts":"69","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\utils\\JsUtils.js":"70","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\penstorage\\index.ts":"71","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\renderer\\pdf\\NeoPdfViewer.tsx":"72","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\SurfaceSplitter.ts":"73","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\UtilFunc.ts":"74","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\StorageRenderWorker.tsx":"75","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\PenBasedRenderWorker.tsx":"76","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\NcodeSurfaceDataJson.ts":"77","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\NcodeConstans.ts":"78","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\DataStructure\\Structures.ts":"79","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PagesForPrint.tsx":"80","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PageOrientation.tsx":"81","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\NcodeFetcher.ts":"82","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NeoPdf\\NeoPdfPage.ts":"83","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\SurfaceMapper\\MappingItem.ts":"84","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\index.ts":"85","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\pencomm\\pencomm_enum.ts":"86","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\pencomm\\pen_util_func.ts":"87","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\pencomm\\pencomm_base.ts":"88","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\pencomm\\pencomm_event.ts":"89","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\pencomm\\pencomm_const.ts":"90","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\renderer\\pdf\\Page.tsx":"91","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\index.ts":"92","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PageForPrint.tsx":"93","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\CoordinateTanslater.ts":"94","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\DataTypes.ts":"95","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\SolveTransform.ts":"96","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\EchelonMatrix.ts":"97","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\GaussianElimination.ts":"98","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\components\\PUIController.js":"99","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\components\\KeyBoardShortCut.js":"100","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\Modal\\PrintOptionDialog.js":"101"},{"size":829,"mtime":1607588452275,"results":"102","hashOfConfig":"103"},{"size":5227,"mtime":1607588452289,"results":"104","hashOfConfig":"103"},{"size":930,"mtime":1607588452269,"results":"105","hashOfConfig":"103"},{"size":660,"mtime":1607588452289,"results":"106","hashOfConfig":"103"},{"size":1203,"mtime":1607588452294,"results":"107","hashOfConfig":"103"},{"size":454,"mtime":1607588452291,"results":"108","hashOfConfig":"103"},{"size":530,"mtime":1607588452291,"results":"109","hashOfConfig":"103"},{"size":1129,"mtime":1607588452290,"results":"110","hashOfConfig":"103"},{"size":4388,"mtime":1607588452291,"results":"111","hashOfConfig":"103"},{"size":465,"mtime":1607588452291,"results":"112","hashOfConfig":"103"},{"size":176,"mtime":1607588452288,"results":"113","hashOfConfig":"103"},{"size":198,"mtime":1607588452288,"results":"114","hashOfConfig":"103"},{"size":897,"mtime":1607588452288,"results":"115","hashOfConfig":"103"},{"size":11712,"mtime":1607590079823,"results":"116","hashOfConfig":"103"},{"size":378,"mtime":1607588452287,"results":"117","hashOfConfig":"103"},{"size":9744,"mtime":1607588452275,"results":"118","hashOfConfig":"103"},{"size":3793,"mtime":1607588452270,"results":"119","hashOfConfig":"103"},{"size":6075,"mtime":1607588452269,"results":"120","hashOfConfig":"103"},{"size":797,"mtime":1607588452269,"results":"121","hashOfConfig":"103"},{"size":9839,"mtime":1607588452281,"results":"122","hashOfConfig":"103"},{"size":703,"mtime":1607588452273,"results":"123","hashOfConfig":"103"},{"size":8673,"mtime":1607589291040,"results":"124","hashOfConfig":"103"},{"size":1490,"mtime":1607589338385,"results":"125","hashOfConfig":"103"},{"size":2764,"mtime":1607589311548,"results":"126","hashOfConfig":"103"},{"size":3305,"mtime":1607588452267,"results":"127","hashOfConfig":"103"},{"size":1469,"mtime":1607589203170,"results":"128","hashOfConfig":"103"},{"size":2395,"mtime":1607589259898,"results":"129","hashOfConfig":"103"},{"size":1611,"mtime":1607589228915,"results":"130","hashOfConfig":"103"},{"size":3644,"mtime":1607589197056,"results":"131","hashOfConfig":"103"},{"size":1680,"mtime":1607589215781,"results":"132","hashOfConfig":"103"},{"size":3839,"mtime":1607589167409,"results":"133","hashOfConfig":"103"},{"size":7455,"mtime":1607589209518,"results":"134","hashOfConfig":"103"},{"size":2768,"mtime":1607589183924,"results":"135","hashOfConfig":"103"},{"size":1278,"mtime":1607588452256,"results":"136","hashOfConfig":"103"},{"size":1201,"mtime":1607588452258,"results":"137","hashOfConfig":"103"},{"size":3260,"mtime":1607588452263,"results":"138","hashOfConfig":"103"},{"size":3653,"mtime":1607588452260,"results":"139","hashOfConfig":"103"},{"size":5911,"mtime":1607588452270,"results":"140","hashOfConfig":"103"},{"size":7570,"mtime":1607588452260,"results":"141","hashOfConfig":"103"},{"size":1421,"mtime":1607588452277,"results":"142","hashOfConfig":"103"},{"size":754,"mtime":1607588452267,"results":"143","hashOfConfig":"103"},{"size":2664,"mtime":1607588452266,"results":"144","hashOfConfig":"103"},{"size":3336,"mtime":1607588452281,"results":"145","hashOfConfig":"103"},{"size":7540,"mtime":1607588452279,"results":"146","hashOfConfig":"103"},{"size":5627,"mtime":1607588452292,"results":"147","hashOfConfig":"103"},{"size":7529,"mtime":1607588452283,"results":"148","hashOfConfig":"103"},{"size":220,"mtime":1607588452265,"results":"149","hashOfConfig":"103"},{"size":2396,"mtime":1607588452266,"results":"150","hashOfConfig":"103"},{"size":854,"mtime":1607588452277,"results":"151","hashOfConfig":"103"},{"size":24,"mtime":1607588452286,"results":"152","hashOfConfig":"103"},{"size":271,"mtime":1607588452277,"results":"153","hashOfConfig":"103"},{"size":863,"mtime":1607588452276,"results":"154","hashOfConfig":"103"},{"size":15927,"mtime":1607589558799,"results":"155","hashOfConfig":"103"},{"size":2599,"mtime":1607588452265,"results":"156","hashOfConfig":"103"},{"size":5823,"mtime":1607588452268,"results":"157","hashOfConfig":"103"},{"size":4070,"mtime":1607588452282,"results":"158","hashOfConfig":"103"},{"size":6464,"mtime":1607588452278,"results":"159","hashOfConfig":"103"},{"size":5612,"mtime":1607588452278,"results":"160","hashOfConfig":"103"},{"size":3268,"mtime":1607588452287,"results":"161","hashOfConfig":"103"},{"size":19057,"mtime":1607588452284,"results":"162","hashOfConfig":"103"},{"size":10895,"mtime":1607588452284,"results":"163","hashOfConfig":"103"},{"size":13265,"mtime":1607588452283,"results":"164","hashOfConfig":"103"},{"size":8817,"mtime":1607588452260,"results":"165","hashOfConfig":"103"},{"size":4893,"mtime":1607588452265,"results":"166","hashOfConfig":"103"},{"size":20942,"mtime":1607588452264,"results":"167","hashOfConfig":"103"},{"size":8049,"mtime":1607588452266,"results":"168","hashOfConfig":"103"},{"size":528,"mtime":1607588452276,"results":"169","hashOfConfig":"103"},{"size":2645,"mtime":1607588452277,"results":"170","hashOfConfig":"103"},{"size":28941,"mtime":1607588452280,"results":"171","hashOfConfig":"103"},{"size":286,"mtime":1607588452287,"results":"172","hashOfConfig":"103"},{"size":62,"mtime":1607588452281,"results":"173","hashOfConfig":"103"},{"size":2857,"mtime":1607588452285,"results":"174","hashOfConfig":"103"},{"size":7031,"mtime":1607588452265,"results":"175","hashOfConfig":"103"},{"size":733,"mtime":1607588452261,"results":"176","hashOfConfig":"103"},{"size":33055,"mtime":1607588452284,"results":"177","hashOfConfig":"103"},{"size":14814,"mtime":1607588452283,"results":"178","hashOfConfig":"103"},{"size":2644,"mtime":1607588452264,"results":"179","hashOfConfig":"103"},{"size":905,"mtime":1607588452263,"results":"180","hashOfConfig":"103"},{"size":3704,"mtime":1607588452256,"results":"181","hashOfConfig":"103"},{"size":3469,"mtime":1607588452259,"results":"182","hashOfConfig":"103"},{"size":2017,"mtime":1607588452259,"results":"183","hashOfConfig":"103"},{"size":3606,"mtime":1607588452264,"results":"184","hashOfConfig":"103"},{"size":4410,"mtime":1607588452266,"results":"185","hashOfConfig":"103"},{"size":2343,"mtime":1607588452268,"results":"186","hashOfConfig":"103"},{"size":27,"mtime":1607588452261,"results":"187","hashOfConfig":"103"},{"size":461,"mtime":1607588452280,"results":"188","hashOfConfig":"103"},{"size":1404,"mtime":1607588452279,"results":"189","hashOfConfig":"103"},{"size":9241,"mtime":1607588452280,"results":"190","hashOfConfig":"103"},{"size":1813,"mtime":1607588452281,"results":"191","hashOfConfig":"103"},{"size":513,"mtime":1607588452280,"results":"192","hashOfConfig":"103"},{"size":8434,"mtime":1607588452285,"results":"193","hashOfConfig":"103"},{"size":120,"mtime":1607588452255,"results":"194","hashOfConfig":"103"},{"size":15618,"mtime":1607588452259,"results":"195","hashOfConfig":"103"},{"size":7550,"mtime":1607588452253,"results":"196","hashOfConfig":"103"},{"size":3033,"mtime":1607588452253,"results":"197","hashOfConfig":"103"},{"size":3929,"mtime":1607588452254,"results":"198","hashOfConfig":"103"},{"size":1068,"mtime":1607588452254,"results":"199","hashOfConfig":"103"},{"size":2144,"mtime":1607588452254,"results":"200","hashOfConfig":"103"},{"size":6991,"mtime":1607589138234,"results":"201","hashOfConfig":"103"},{"size":5155,"mtime":1607589138302,"results":"202","hashOfConfig":"103"},{"size":14261,"mtime":1607589032051,"results":"203","hashOfConfig":"103"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},"eitpa9",{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"240","usedDeprecatedRules":"206"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":4,"source":"313","usedDeprecatedRules":"217"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"217"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":31,"source":"407","usedDeprecatedRules":"206"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"410","usedDeprecatedRules":"206"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":23,"source":"413","usedDeprecatedRules":"206"},"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\index.js",[],[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\serviceWorker.js",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\client\\Root.js",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\shared\\App.js",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\styles\\theme.js",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\store\\rootReducer.ts",[],[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\store\\reducers\\pointerTracer.js",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\store\\reducers\\authorization.js",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\store\\reducers\\ui.js",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\store\\reducers\\rotate.js",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\pages\\index.tsx",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\pages\\Post.tsx",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\pages\\Posts.tsx",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\pages\\Home.tsx",["414"],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\pages\\About.tsx",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\components\\navbar\\Upload.js",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\components\\GoogleBtn.js",["415"],"/*global chrome*/\r\nimport React, {Component, useState, useEffect} from 'react';\r\nimport { gapi } from 'gapi-script';\r\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\r\n// import MappingStorage from \"../NcodePrintLib/SurfaceMapper/MappingStorage\";\r\n\r\nconst CLIENT_ID = '169738066451-5u100n2i6rko17jhmtpvq0bnjuedj7g4.apps.googleusercontent.com';\r\n\r\nclass GoogleBtn extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLogined:false,\r\n      accessToken:''\r\n    };\r\n\r\n    this.login = this.login.bind(this);\r\n    this.handleLoginFailure = this.handleLoginFailure.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n    this.handleLogoutFailure = this.handleLogoutFailure.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // var self = this;\r\n    // gapi.load('auth2', function() { \r\n    //   var gauth = gapi.auth2.init({\r\n    //       client_id: {CLIENT_ID}\r\n    //   });\r\n      \r\n    //   gauth.then(function(){\r\n    //     console.log('gauth init success');\r\n    //       if (gauth.isSignedIn.get()) {\r\n    //         self.setState({isLogined : true});\r\n    //         console.log('로그인 상태');\r\n    //       } else {\r\n    //         self.setState({isLogined : false});\r\n    //         console.log('로그아웃 상태');\r\n    //       }\r\n    //     }, function(){\r\n    //     console.error('gauth init fail');\r\n    //   });\r\n    // });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    // if (this.state.isLogined) {\r\n    //   this.readMappingInfo();\r\n    // }\r\n  }\r\n\r\n  readMappingInfo = () => {\r\n    gapi.load('client', function () {\r\n      gapi.client.load('drive', 'v2', async function () {\r\n        const fileResponse = await gapi.client.drive.files.list();\r\n        const files = fileResponse.result.items;\r\n\r\n        if (files && files.length > 0) {\r\n          for (let i = 0; i < files.length; i++) {\r\n            const file = files[i];\r\n            if (file.title === 'mappingInfo.json') {\r\n              const fileId = file.id;\r\n              const getFileRequest = gapi.client.drive.files.get({\r\n                fileId: fileId,\r\n                alt: 'media'\r\n              })\r\n\r\n              getFileRequest.then(await function(response) {\r\n                const currentMappingObj = JSON.parse(response.body);\r\n                const content = JSON.stringify(currentMappingObj);\r\n                console.log(content);\r\n              }, function(error) {\r\n                console.error(error)\r\n              })\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  login (resp) {\r\n    if(resp.accessToken) {\r\n      this.setState(state => ({\r\n        isLogined: true,\r\n        accessToken: resp.accessToken\r\n      }));\r\n    }\r\n  }\r\n\r\n  logout (resp) {\r\n    this.setState(state => ({\r\n      isLogined: false,\r\n      accessToken: ''\r\n    }));\r\n\r\n    var auth2 = gapi.auth2.getAuthInstance();\r\n    auth2.signOut().then(function () {\r\n      console.log('user log out ');\r\n    });\r\n    auth2.disconnect();\r\n  }\r\n\r\n  handleLoginFailure (resp) {\r\n    console.log('why login fail?');\r\n  }\r\n  handleLogoutFailure (resp) {\r\n    console.log('why logout fail?');\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        {this.state.isLogined ?\r\n          <GoogleLogout\r\n          clientId = {CLIENT_ID}\r\n          buttonText = 'Logout'\r\n          onLogoutSuccess={this.logout}\r\n          onFailure={this.handleLogoutFailure}\r\n          ></GoogleLogout>: \r\n          <GoogleLogin \r\n            clientId = {CLIENT_ID}\r\n            buttonText=\"Login\"\r\n            onSuccess={this.login}\r\n            onFailure={this.handleLoginFailure}\r\n            cookiePolicy={'single_host_origin'}\r\n            responseType='code,token'\r\n          />\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default GoogleBtn;","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\SurfaceMapper\\MappingStorage.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\index.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\penstorage\\InkStorage.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\components\\navbar\\CalibrationMenual.tsx",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\components\\navbar\\ColorButtons.tsx",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\components\\navbar\\PrintButton.tsx",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\components\\navbar\\PageNumbering.tsx",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\Save\\SavePdf.tsx",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\components\\buttons\\FullScreenButton.tsx",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\components\\buttons\\TracePointButton.tsx",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\components\\buttons\\ZoomButton.tsx",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\components\\buttons\\FitButton.tsx",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\components\\buttons\\RotateButton.tsx",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\components\\buttons\\BackgroundButton.tsx",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\components\\buttons\\PenTypeButton.tsx",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\components\\buttons\\ConnectButton.tsx",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\DefaultOption.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\Locales\\i18n.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\CanvasColorConverter.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PrintDataTypes.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\cloud_util_func.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PrintPdfButton.tsx",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\index.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\SurfaceMapper\\Calibration\\CalibrationButton.tsx",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NeoPdf\\FileBrowserButton.tsx",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\penstorage\\EventSystem.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\pencomm\\PenManager.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\styles\\ThemeManager.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\DrawCurves.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\index.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NeoPdf\\NeoPdfManager.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\constants.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\types\\index.js",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\DataStructure\\index.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\DataStructure\\Enums.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\pencomm\\neosmartpen.ts",["416","417","418","419"],"import PenComm, { deviceSelectDlg } from \"./pencomm\";\r\nimport InkStorage, { IOpenStrokeArg } from \"../penstorage/InkStorage\";\r\nimport { paperInfo } from \"../noteserver/PaperInfo\";\r\nimport Dispatcher, { EventCallbackType } from \"../penstorage/EventSystem\";\r\nimport PenManager from \"./PenManager\";\r\nimport \"../types\";\r\nimport { IPenEvent, IBrushState } from \"../DataStructure/Structures\";\r\nimport { NeoStroke, PEN_STATE, PenEventName } from \"../DataStructure\";\r\nimport { IWritingSurfaceInfo } from \"../DataStructure/Structures\";\r\nimport NeoDot from \"../DataStructure/NeoDot\";\r\nimport { IBrushType } from \"../DataStructure/Enums\"\r\nimport { fabric } from \"fabric\";\r\nimport PUIController from \"../../components/PUIController\";\r\n\r\ninterface IPenMovement {\r\n  downEvent: IPenEvent,\r\n  infoEvent: IPenEvent,\r\n  moveEvents: IPenEvent[],\r\n  upEvent: IPenEvent,\r\n  numMovement: number,\r\n  stroke: NeoStroke,\r\n\r\n}\r\n\r\nconst NUM_HOVER_POINTERS = 6;\r\n\r\nexport class NeoSmartpen {\r\n  currPenMovement: IPenMovement = {\r\n    downEvent: null,\r\n    infoEvent: null,\r\n    moveEvents: [],\r\n    upEvent: null,\r\n    numMovement: 0,\r\n    stroke: null,\r\n  };\r\n\r\n  /** 펜 종류 마다의 굵기와 색깔 */\r\n  penState: IBrushState[] = new Array(Object.keys(IBrushType).length);\r\n\r\n  /** 펜 종류 (렌더러 종류) */\r\n  penRendererType: IBrushType = IBrushType.PEN;\r\n\r\n  lastInfoEvent: IPenEvent = null;\r\n  protocolHandler: PenComm = new PenComm(this);\r\n  mac: string = null;\r\n\r\n  lastState: PEN_STATE = PEN_STATE.NONE;\r\n\r\n  surfaceInfo: IWritingSurfaceInfo = {\r\n    section: 3,\r\n    owner: 27,\r\n    book: 168,\r\n    Xmin: 3.12,\r\n    Ymin: 3.12,\r\n    Xmax: 91.68,\r\n    Ymax: 128.36,\r\n    Mag: 1,\r\n  }\r\n\r\n  storage: InkStorage = InkStorage.getInstance();\r\n  manager: PenManager = PenManager.getInstance();\r\n  dispatcher: Dispatcher = new Dispatcher();\r\n\r\n  visibleHoverPoints = NUM_HOVER_POINTERS;\r\n  pathHoverPoints: Array<fabric.Circle> = new Array(0);\r\n  timeOut = null;\r\n  waitCount = 0;\r\n  eraserLastPoint = {};\r\n\r\n  pathPenTracker: fabric.Circle;\r\n  /**\r\n   *\r\n   * @param customStorage\r\n   */\r\n  constructor(customStorage: InkStorage = null) {\r\n    // this.appPen = appPenHandler;\r\n    if (customStorage) {\r\n      console.log(\"use custom Ink Storage\");\r\n      this.storage = customStorage;\r\n    }\r\n    else {\r\n      console.log(\"use default Ink Storage\");\r\n      this.storage = InkStorage.getInstance();\r\n    }\r\n\r\n    for (let i = 0; i < this.penState.length; i++) {\r\n      this.penState[i] = {\r\n        thickness: 0.2,\r\n        color: \"rgba(0,0,0)\",\r\n      };\r\n    }\r\n\r\n\r\n  }\r\n\r\n  initPenTracker() {\r\n    this.pathPenTracker = new fabric.Circle({\r\n      left: -30,\r\n      top: -30,\r\n      radius: 5,\r\n      opacity: 0.3,\r\n      fill: \"#7a7aff\",\r\n      stroke: \"#7a7aff\",\r\n      dirty: true,\r\n      name: 'penTracker',\r\n      data: 'pt'\r\n    });\r\n  }\r\n\r\n  initHoverCursor() {\r\n    for (let i = 0; i < 6; i++) {\r\n      const path = new fabric.Circle({\r\n        radius: (NUM_HOVER_POINTERS - i),\r\n        fill: \"#ff2222\",\r\n        stroke: \"#ff2222\",\r\n        opacity: (NUM_HOVER_POINTERS - i) / NUM_HOVER_POINTERS / 2,\r\n        left: -30,\r\n        top: -30,\r\n        hasControls: false,\r\n        dirty: true,\r\n        name: 'hoverPoint',\r\n        data: 'hp'\r\n      });\r\n      this.pathHoverPoints.push(path);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  getMac = (): string => {\r\n    return this.mac;\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   */\r\n  getBtDevice = (): BluetoothDevice => {\r\n    return this.protocolHandler.getBtDevice();\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   */\r\n  async connect(): Promise<boolean> {\r\n    let device = null;\r\n    try {\r\n      device = await deviceSelectDlg();\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n      return false;\r\n    }\r\n\r\n    if (this.manager.isAlreadyConnected(device)) {\r\n      console.error(`bluetooth device(id:${device.id}) already connectged or connecting process is being processed`);\r\n      return false;\r\n    }\r\n\r\n    if (device) {\r\n      this.protocolHandler.connect(device);\r\n      this.manager.add(this, device);\r\n    }\r\n    else {\r\n      console.error(\"Device NULL\");\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param device\r\n   */\r\n  async connectByWebBtDevice(device: BluetoothDevice) {\r\n    this.protocolHandler.connect(device);\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param mac\r\n   */\r\n  async connectByMacAddress(mac: string) {\r\n    throw new Error(`connectByMacAddress() not implemented yet.`);\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  resetPenStroke = () => {\r\n    // let { currPenMovement} = this;\r\n    const p = this.currPenMovement;\r\n\r\n    p.downEvent = null;\r\n    p.infoEvent = null;\r\n    p.numMovement = 0;\r\n    p.moveEvents = [];\r\n    p.upEvent = null;\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param event\r\n   */\r\n  onPenDown = (event: IPenEvent) => {\r\n    this.resetPenStroke();\r\n    this.currPenMovement.downEvent = event;\r\n    this.lastState = PEN_STATE.PEN_DOWN;\r\n\r\n    // console.log(event);\r\n\r\n    // storage에 저장\r\n    if (!this.storage) {\r\n      console.error(\"Ink Storage has not been initialized\");\r\n    }\r\n\r\n    const mac = this.mac;\r\n    const time = event.timeStamp;\r\n\r\n    const openStrokeArg: IOpenStrokeArg = {\r\n      mac,\r\n      time,\r\n      penTipMode: event.penTipMode,\r\n      brushType: this.penRendererType,\r\n      thickness: this.penState[this.penRendererType].thickness,\r\n      color: this.penState[this.penRendererType].color,\r\n    }\r\n\r\n    const stroke = this.storage.openStroke(openStrokeArg);\r\n    const strokeKey = stroke.key;\r\n    this.currPenMovement.stroke = stroke;\r\n\r\n    console.log(`NeoSmartpen dispatch event ON_PEN_DOWN`);\r\n    this.dispatcher.dispatch(PenEventName.ON_PEN_DOWN, { strokeKey, mac, time, stroke });\r\n\r\n    this.manager.setActivePen(event.penId);\r\n    // event 전달\r\n    // let ph = this.appPen;\r\n    // ph.onPenDown(event);\r\n  }\r\n\r\n  /**\r\n   * 펜의 움직임\r\n   *    1) down/up이 있는 경우: DOWN -> INFO -> MOVE -> MOVE -> ... -> UP -> INFO와 같이 나옴\r\n   *    2) hove의 경우: (페이지가 바뀌면) INFO -> HOVER_MOVE -> HOVER_MOVE...\r\n   *\r\n   * pen down 된 후의 page info, 실질적으로 pen_down과 같음\r\n   *\r\n   * @param event\r\n   * @param hover\r\n   */\r\n  onPageInfo = (event: IPenEvent, hover: boolean) => {\r\n    // console.log(event);\r\n    this.lastInfoEvent = event;\r\n\r\n\r\n    // margin 값을 가져오기 위해서\r\n    const info = paperInfo.getPaperInfo({ section: event.section, book: event.book, owner: event.owner, page: event.page });\r\n    if (info) this.surfaceInfo = info;\r\n\r\n    // 이전에 펜 down이 있었으면\r\n    if (this.lastState === PEN_STATE.PEN_DOWN) {\r\n      this.currPenMovement.infoEvent = event;\r\n      // this.currPenMovement.infoEvent = {\r\n      //   section: event.section,\r\n      //   owner: event.owner,\r\n      //   book: event.book,\r\n      //   page: event.page,\r\n\r\n      //   ...event,\r\n      // };\r\n\r\n      if (!this.storage) {\r\n        console.error(\"Ink Storage has not been initialized\");\r\n      }\r\n      else {\r\n        const { section, owner, book, page, timeStamp } = event;\r\n        const mac = this.mac;\r\n        if (!mac) {\r\n          throw new Error(\"mac address was not registered\");\r\n        }\r\n\r\n        if (!hover) {\r\n          // storage에 저장\r\n          const stroke = this.currPenMovement.stroke;\r\n          const strokeKey = stroke.key;\r\n          this.storage.setStrokeInfo(strokeKey, section, owner, book, page, timeStamp);\r\n\r\n          // hand pen page the event\r\n          this.dispatcher.dispatch(PenEventName.ON_PEN_PAGEINFO, {\r\n            strokeKey, mac, stroke, section, owner, book, page,\r\n            time: event.timeStamp\r\n          });\r\n        }\r\n        else {\r\n          // hand hover page the event\r\n          this.dispatcher.dispatch(PenEventName.ON_PEN_HOVER_PAGEINFO, {\r\n            mac, section, owner, book, page, time: event.timeStamp\r\n          });\r\n\r\n        }\r\n      }\r\n\r\n      // let ph = this.appPen;\r\n      // ph.onPageInfo(event);\r\n    }\r\n\r\n    if (hover) {\r\n      const { section, owner, book, page, timeStamp } = event;\r\n      const mac = this.mac;\r\n\r\n      this.dispatcher.dispatch(PenEventName.ON_PEN_HOVER_PAGEINFO, {\r\n        mac, section, owner, book, page, time: timeStamp, pen: this\r\n      });\r\n    }\r\n\r\n    // event 전달\r\n    // let ph = this.appPen;\r\n    // if (hover) ph.onHoverPageInfo(event);\r\n\r\n    return;\r\n  }\r\n\r\n\r\n\r\n  private adjustPaperXminYmin = (event: IPenEvent) => {\r\n    event.x -= this.surfaceInfo.Xmin;\r\n    event.y -= this.surfaceInfo.Ymin;\r\n\r\n    return event;\r\n  }\r\n\r\n  /**\r\n   * pen down 상태에서 움직임\r\n   * @param event\r\n   */\r\n  onPenMove = (event: IPenEvent) => {\r\n    this.lastState = PEN_STATE.PEN_MOVE;\r\n\r\n    // margin을 paperInfo의 Xmin, Ymin 값에 따라 조정\r\n    // event = this.adjustPaperXminYmin(event);\r\n\r\n    // 기존의 방식에서는 처리하지 않았던 것, redundant할 수 있다.\r\n    if (this.currPenMovement.infoEvent) {\r\n      event.owner = this.currPenMovement.infoEvent.owner;\r\n      event.book = this.currPenMovement.infoEvent.book;\r\n      event.page = this.currPenMovement.infoEvent.page;\r\n    } else {\r\n      /**\r\n       * 종이에 터치되지 않고 들어오는 호버 이벤트\r\n       *\r\n       */\r\n      event.owner = -1;\r\n      event.book = -1;\r\n      event.page = -1;\r\n      // let srcLine = getFunctionName();\r\n      // console.error(`Get PEN_MOVE without PEN_INFO ${srcLine}`);\r\n      // throw new Error( `Get PEN_MOVE without PEN_INFO`);\r\n    }\r\n\r\n    this.currPenMovement.numMovement++;\r\n    event.isFirstDot = (this.currPenMovement.numMovement === 1);\r\n\r\n    // storage에 저장\r\n    if (!this.storage) {\r\n      console.error(\"Ink Storage has not been initialized\");\r\n    }\r\n\r\n    const dot = new NeoDot({\r\n      dotType: 2,   // moving\r\n      deltaTime: event.timediff,\r\n      time: event.timeStamp,\r\n      f: event.force,\r\n      x: event.x,\r\n      y: event.y,\r\n    });\r\n\r\n    const stroke = this.currPenMovement.stroke;\r\n    const strokeKey = stroke.key;\r\n    this.storage.appendDot(strokeKey, dot);\r\n    const pen = this;\r\n\r\n    if(event.owner === 1013 && event.book === 1116 && event.page === 1) {\r\n      console.log(\"asdfasdfasfa\");\r\n      console.log(event.isFirstDot);\r\n      event.isFirstDot = true;\r\n      if (event.isFirstDot) {\r\n        console.log(\"===================================\");\r\n        // var puis = window._pui;\r\n        var puis = window._pui\r\n        console.log(puis);\r\n        var i;\r\n        for (i = 0; i < puis.length; i++) {\r\n          var pui = puis[i];\r\n          console.log(pui);\r\n          var cmd = pui.getCommand(event.owner, event.book, event.page, dot.x, dot.y);\r\n          console.log(cmd);\r\n          \r\n          if(cmd) {\r\n            console.log(`PUI EXECUTE ==> ${cmd}`);\r\n\r\n            PUIController.executeCommand(cmd);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // hand the event\r\n    this.dispatcher.dispatch(PenEventName.ON_PEN_MOVE, { strokeKey, mac: stroke.mac, stroke, dot, pen });\r\n\r\n    // 이벤트 전달\r\n    // console.log(\"    -> onPenMove\" + event);\r\n    // let ph = this.appPen;\r\n    // ph.onPenMove(event);\r\n  }\r\n\r\n  /**\r\n   * hover 상태에서 움직임\r\n   * @param event\r\n   */\r\n  onHoverMove = (event: IPenEvent) => {\r\n    this.lastState = PEN_STATE.HOVER_MOVE;\r\n\r\n    // margin을 paperInfo의 Xmin, Ymin 값에 따라 조정\r\n    // event = this.adjustPaperXminYmin(event);\r\n\r\n\r\n    // console.log(\"    -> onHoverMove\" + event);\r\n    // let ph = this.appPen;\r\n    // ph.onHoverMove(event);\r\n    const mac = this.mac;\r\n    if (!mac) {\r\n      throw new Error(\"mac address was not registered\");\r\n    }\r\n    this.dispatcher.dispatch(PenEventName.ON_HOVER_MOVE, { pen: this, mac, event });\r\n  }\r\n\r\n  /**\r\n * hover 상태에서 움직임\r\n * @param event\r\n */\r\n  onHoverPageInfo = (event: IPenEvent) => {\r\n    this.lastState = PEN_STATE.HOVER_MOVE;\r\n\r\n    const mac = this.mac;\r\n    if (!mac) {\r\n      throw new Error(\"mac address was not registered\");\r\n    }\r\n\r\n    this.dispatcher.dispatch(PenEventName.ON_PEN_HOVER_PAGEINFO, { pen: this, mac, event });\r\n  }\r\n\r\n  /**\r\n   * pen up\r\n   * @param event\r\n   */\r\n  onPenUp = (event: IPenEvent) => {\r\n    this.lastState = PEN_STATE.PEN_UP;\r\n\r\n    this.currPenMovement.upEvent = event;\r\n\r\n    // storage에 저장\r\n    if (!this.storage) {\r\n      console.error(\"Ink Storage has not been initialized\");\r\n    }\r\n\r\n    if (this.penRendererType !== IBrushType.ERASER) {\r\n      const stroke = this.currPenMovement.stroke;\r\n      const strokeKey = stroke.key;\r\n      this.storage.closeStroke(strokeKey);\r\n\r\n      const { mac, section, owner, book, page } = stroke;\r\n      this.dispatcher.dispatch(PenEventName.ON_PEN_UP, { strokeKey, mac, pen: this, stroke, section, owner, book, page });\r\n\r\n      this.resetPenStroke();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ncode error\r\n   * @param event\r\n   */\r\n  onNcodeError = (event: IPenEvent) => {\r\n    // console.log(event);\r\n\r\n    // let ph = this.appPen;\r\n    // ph.onNcodeError(event);\r\n    const mac = this.mac;\r\n    if (!mac) {\r\n      throw new Error(\"mac address was not registered\");\r\n    }\r\n\r\n    this.manager.onNcodeError({ pen: this, event });\r\n    this.dispatcher.dispatch(PenEventName.ON_NCODE_ERROR, { pen: this, mac, event });\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   *\r\n   * @param event\r\n   */\r\n  onPasscodeRequired = (event: IPenEvent) => {\r\n    console.log(\"onPasscodeRequired\" + event);\r\n    const passcode = prompt(\"please enter passcode \" + (9 - event.retryCount));\r\n    this.protocolHandler.sendPasscode(passcode);\r\n\r\n    const mac = this.protocolHandler.getMac();\r\n    if (!mac) {\r\n      throw new Error(\"mac address was not registered\");\r\n    }\r\n    this.dispatcher.dispatch(PenEventName.ON_PW_REQUIRED, { pen: this, mac, event });\r\n    // throw new Error(\"Not implemented: onPasscodeRequired\");\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   *\r\n   * @param event\r\n   */\r\n  onConnected = (event: IPenEvent) => {\r\n    // let ph = this.appPen;\r\n    // ph.onConnected(event);\r\n\r\n    console.log(\"CONNECTED\");\r\n    const mac = this.protocolHandler.getMac();\r\n    this.mac = mac;\r\n    console.log(`Connected: ${mac}`);\r\n\r\n    this.manager.onConnected({ pen: this, event });\r\n    this.dispatcher.dispatch(PenEventName.ON_CONNECTED, { pen: this, mac, event });\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param event\r\n   */\r\n  onFirmwareUpgradeNeeded = (event: IPenEvent) => {\r\n    // let ph = this.appPen;\r\n    // ph.onFirmwareUpgradeNeeded(event);\r\n\r\n    const mac = this.mac;\r\n    if (!mac) {\r\n      throw new Error(\"mac address was not registered\");\r\n    }\r\n    this.dispatcher.dispatch(PenEventName.ON_UPGRADE_NEEDED, { pen: this, mac, event });\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param event\r\n   */\r\n  onDisconnected = (event: IPenEvent) => {\r\n    // let event = makePenEvent(DeviceTypeEnum.PEN, PenEventEnum.ON_DISCONNECTED);\r\n    // let ph = this.appPen;\r\n    // ph.onDisconnected(event);\r\n    const mac = this.mac;\r\n    if (!mac) {\r\n      console.error(`mac address was not registered`);\r\n      console.error(event);\r\n    }\r\n    else {\r\n      this.manager.onDisconnected({ pen: this, event });\r\n      this.dispatcher.dispatch(PenEventName.ON_DISCONNECTED, { pen: this, mac, event });\r\n    }\r\n  }\r\n\r\n  setColor(color: string) {\r\n    this.penState[this.penRendererType].color = color;\r\n  }\r\n\r\n  setThickness(thickness: number) {\r\n    this.penState[this.penRendererType].thickness = thickness;\r\n  }\r\n\r\n  setPenRendererType(type) {\r\n    this.penRendererType = type;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param eventName\r\n   * @param listener\r\n   */\r\n  public addEventListener(eventName: PenEventName, listener: EventCallbackType) {\r\n    if (eventName === PenEventName.ON_PEN_DOWN) {\r\n      console.log(`NeoSmartpen: addEventListener ${eventName}`);\r\n    }\r\n\r\n    this.dispatcher.on(eventName, listener, null);\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param eventName\r\n   * @param listener\r\n   */\r\n  public removeEventListener(eventName: PenEventName, listener: EventCallbackType) {\r\n    this.dispatcher.off(eventName, listener);\r\n  }\r\n}\r\n","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NeoPdf\\FileBrowser.tsx",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\SurfaceMapper\\Calibration\\CalibrationDialog.tsx",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\renderer\\MixedPageView.tsx",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\noteserver\\PaperInfo.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\noteserver\\NoteserverClient.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\utils\\UtilsFunc.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\RenderWorkerBase.tsx",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\StorageRenderer.tsx",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\PenBasedRenderer.tsx",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PrintPdfMain.tsx",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\SurfaceInfo.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\NcodeRasterizer.tsx",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NeoPdf\\NeoPdfDocument.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\DataStructure\\NeoDot.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\DataStructure\\NeoStroke.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\pencomm\\pencomm.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\utils\\JsUtils.js",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\penstorage\\index.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\renderer\\pdf\\NeoPdfViewer.tsx",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\SurfaceSplitter.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\UtilFunc.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\StorageRenderWorker.tsx",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\PenBasedRenderWorker.tsx",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\NcodeSurfaceDataJson.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\NcodeConstans.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\DataStructure\\Structures.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PagesForPrint.tsx",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PageOrientation.tsx",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\NcodeFetcher.ts",["420"],"import { IPageSOBP } from \"../DataStructure/Structures\";\r\nimport * as Zlib from \"zlib\";\r\nimport { INcodeSurfaceDesc } from \"./SurfaceDataTypes\";\r\nimport { getNPaperInfo, isSamePage } from \"./SurfaceInfo\";\r\n\r\n\r\n/**\r\n * Class\r\n */\r\nexport default class NcodeFetcher {\r\n  private codeText = \"\";\r\n  private fetchPromise: Promise<string> = Promise.resolve(\"\");\r\n  pageInfo: IPageSOBP;\r\n\r\n  constructor(pageInfo: IPageSOBP) {\r\n    this.pageInfo = pageInfo;\r\n    this.fetchPromise = this.fetchNcodeData(pageInfo);\r\n    this.fetchPromise.then(txt => this.codeText = txt);\r\n  }\r\n\r\n\r\n  /**\r\n   * 코드 정보를 받아온다\r\n   * 코드 정보를 받아올 때 나중에는 x margin, y margin도 서버에서 받아오게 해야 한다 2020/11/26\r\n   * @param pageInfo\r\n   */\r\n  public getNcodeData = async (pageInfo: IPageSOBP): Promise<INcodeSurfaceDesc> => {\r\n    // glyph text를 받아 온다.\r\n    if (isSamePage(this.pageInfo, pageInfo)) {\r\n      console.log(\"reuse downloaded glyph data file\");\r\n      const txt = await this.fetchPromise;\r\n      this.codeText = txt;\r\n    }\r\n    else {\r\n      console.log(\"download glyph data file\");\r\n      const promise = this.fetchNcodeData(pageInfo);\r\n      this.fetchPromise = promise;\r\n      const txt = await this.fetchPromise;\r\n\r\n      this.pageInfo = pageInfo;\r\n      this.codeText = txt;\r\n    }\r\n\r\n    const result: INcodeSurfaceDesc = getNPaperInfo(pageInfo);\r\n    result.glyphData = this.codeText;\r\n\r\n    return result;\r\n  }\r\n\r\n\r\n  private fetchNcodeData = async (pageInfo: IPageSOBP): Promise<string> => {\r\n    return new Promise(async (resolve, reject) => {\r\n      // console.log(`[fetch] ${pageInfo.section}.${pageInfo.owner}.${pageInfo.book}.${pageInfo.page}`);\r\n      const url = this.getRawCodeDataUrl(pageInfo);\r\n\r\n      const blob = await fetch(url).then((r) => {\r\n\r\n        if (r.ok) {\r\n          return r.blob();\r\n        }\r\n\r\n        resolve(\"\");\r\n      });\r\n\r\n      function gunzipCallback(decompressed) {\r\n        // console.log(decompressed);\r\n        const txt = new TextDecoder(\"utf-8\").decode(decompressed);\r\n        resolve(txt);\r\n      }\r\n\r\n      if (blob != null) {\r\n        try {\r\n          const buffer = await blob.arrayBuffer();\r\n          const u8buf = new Uint8Array(buffer);\r\n          // eslint-disable-next-line\r\n          const gunzip = new Zlib.gunzip(u8buf, (err, result) => {\r\n            // console.error(err);\r\n            if (err) {\r\n              console.log(err);\r\n              resolve(\"\");\r\n            }\r\n            gunzipCallback(result);\r\n          });\r\n        } catch (e) {\r\n          resolve(\"\");\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n  private getAbsoluteURL = (base: string, relative: string): string => {\r\n    const stack = base.split(\"/\");\r\n    const parts = relative.split(\"/\");\r\n\r\n    stack.pop(); // remove current file name (or empty string)\r\n\r\n    // (omit if \"base\" is the current folder without trailing slash)\r\n    for (let i = 0; i < parts.length; i++) {\r\n      if (parts[i] === \".\") continue;\r\n      if (parts[i] === \"..\") stack.pop();\r\n      else stack.push(parts[i]);\r\n    }\r\n    return stack.join(\"/\");\r\n  }\r\n\r\n\r\n  private getRawCodeDataUrl = (pageInfo: IPageSOBP): string => {\r\n\r\n    const { section, owner, book, page } = pageInfo;\r\n\r\n    const ncode_idx = \"s\" + section + \"-o\" + owner + \"-b\" + book + \"-p\" + page;\r\n    const dir_name = \"s\" + section + \"-o\" + owner + \"-b\" + book;\r\n\r\n    const filename = \"./ncode_data/\" + dir_name + \"/\" + ncode_idx + \".code.gz\";\r\n    const doc_url = document.location.href;\r\n    const url = this.getAbsoluteURL(doc_url, filename);\r\n\r\n    return url;\r\n  }\r\n}","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NeoPdf\\NeoPdfPage.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\SurfaceMapper\\MappingItem.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\index.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\pencomm\\pencomm_enum.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\pencomm\\pen_util_func.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\pencomm\\pencomm_base.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\pencomm\\pencomm_event.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\pencomm\\pencomm_const.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\neosmartpen\\renderer\\pdf\\Page.tsx",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\index.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PageForPrint.tsx",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\CoordinateTanslater.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\DataTypes.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\SolveTransform.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\EchelonMatrix.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\GaussianElimination.ts",[],"C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\components\\PUIController.js",["421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452"],"import PenManager from \"../neosmartpen/pencomm/PenManager\";\r\nimport { IBrushType } from \"../neosmartpen/DataStructure\";\r\nimport React from 'react';\r\nimport $ from 'jquery';\r\n\r\n\r\n// 2020-12-09 현재 구현되어 있는 부분까지 PUI 완성(페이지 넘어가는 부분과 스트로크 찍히는 오류 수정할 것) \r\nexport default class PUIController {\r\n  constructor(url) {\r\n      /** @type {Promise} */\r\n      this._ready = this.getPuiXML(url);\r\n\r\n      /** @type {number} */\r\n      this._owner = 0;\r\n\r\n      /** @type {number} */\r\n      this._section = 0;\r\n\r\n      /** @type {number} */\r\n      this._book = 0;\r\n\r\n      /** @type {number} */\r\n      this._startPage = 0;\r\n\r\n      /** @type {Array.<number>} */\r\n      this._pages = [];\r\n\r\n      /** @type {Array.<{pageDelta:number, type:string, left:number, top:number, width:number, height:number, command:string}>} */\r\n      this._symbols = [];\r\n  }\r\n\r\n  get ready() {\r\n      return this._ready;\r\n  }\r\n\r\n  getPuiXML(url) {\r\n      var self = this;\r\n\r\n      return new Promise(function (resolve, reject) {\r\n          $.ajax({\r\n              type: \"GET\",\r\n              dataType: \"xml\",\r\n              url: url,\r\n              success: function (xml) {\r\n                console.log(xml);\r\n                  // page 정보\r\n                  var $bookXml = $(xml).find(\"book\");\r\n                  var section = parseInt($bookXml.find(\"section\").text());\r\n                  var owner = parseInt($bookXml.find(\"owner\").text());\r\n                  var book = parseInt($bookXml.find(\"code\").text());\r\n                  var startPage = parseInt($bookXml.find(\"start_page\").text());\r\n\r\n                  var $pagesXml = $(xml).find(\"pages\");\r\n                  var numPages = parseInt($pagesXml.attr(\"count\"));\r\n\r\n                  self._owner = owner;\r\n                  self._section = section;\r\n                  self._book = book;\r\n                  self._startPage = startPage;\r\n                  self._pages = [];\r\n\r\n                  var i;\r\n                  for (i = 0; i < numPages; i++) self._pages.push(startPage + i);\r\n\r\n                  // symbol 정보\r\n                  var xmlData = $(xml).find(\"symbol\");\r\n                  var listLength = xmlData.length;\r\n\r\n                  self._symbols = [];\r\n\r\n                  $(xmlData).each(function () {\r\n                      var pageDelta = parseInt($(this).attr(\"page\"));\r\n                      var type = $(this).attr(\"type\"); // 여기서는 Rectangle만 취급한다.\r\n                      var left = parseFloat($(this).attr(\"x\"));\r\n                      var top = parseFloat($(this).attr(\"y\"));\r\n                      var width = parseFloat($(this).attr(\"width\"));\r\n                      var height = parseFloat($(this).attr(\"height\"));\r\n\r\n                      var command = $(this).find(\"command\").attr(\"param\");\r\n\r\n                      var puiSymbol = {\r\n                          pageDelta,\r\n                          type,\r\n                          left,\r\n                          top,\r\n                          width,\r\n                          height,\r\n                          command,\r\n                      };\r\n                      self._symbols.push(puiSymbol);\r\n                  });\r\n\r\n                  self._symbols.sort(function (a, b) {\r\n                      var ax = a.top * 10000 + a.left;\r\n                      var bx = b.top * 10000 + b.left;\r\n\r\n                      return ax - bx;\r\n                  });\r\n\r\n                  resolve(true);\r\n              },\r\n              error: function (error) {\r\n                  resolve(false);\r\n              },\r\n              complete: function () {},\r\n          });\r\n      });\r\n  }\r\n\r\n  m(val) {\r\n      return Math.round(val * 10) / 10;\r\n  }\r\n\r\n  getCommand(owner, book, page, x, y) {\r\n      if (owner != this._owner || book != this._book) return null;\r\n      var pageDelta = page - this._startPage;\r\n      if (this._pages.findIndex((elem) => elem == page) < 0) return null;\r\n\r\n      var i;\r\n\r\n      for (i = 0; i < this._symbols.length; i++) {\r\n          var sym = this._symbols[i];\r\n\r\n          var x1 = sym.left / 72; // inch\r\n          var x2 = (sym.left + sym.width) / 72; // inch\r\n          var y1 = sym.top / 72;\r\n          var y2 = (sym.top + sym.height) / 72;\r\n\r\n          var xx = (x * 56) / 600;\r\n          var yy = (y * 56) / 600;\r\n\r\n          if (sym.pageDelta == pageDelta) {\r\n              if (x1 < xx && xx < x2 && y1 < yy && yy < y2) {\r\n                  var m = this.m;\r\n                  console.log(`(${m(xx)}, ${m(yy)}) in (${m(x1)}, ${m(y1)})-(${m(x2)}, ${m(y2)}) ==> ${sym.command}`);\r\n                  return sym.command;\r\n              }\r\n          }\r\n      }\r\n\r\n      return null;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {string} cmd\r\n   */\r\n  static executeCommand(cmd) {\r\n      switch (cmd) {\r\n          case \"strokesize_1\":\r\n            PenManager.getInstance().setThickness(1);\r\n              break;\r\n\r\n          case \"strokesize_2\":\r\n            PenManager.getInstance().setThickness(2);\r\n              break;\r\n\r\n          case \"strokesize_3\":\r\n            PenManager.getInstance().setThickness(3);\r\n              break;\r\n\r\n          case \"pen\":\r\n            PenManager.getInstance().setPenRendererType(IBrushType.PEN);\r\n              break;\r\n\r\n          case \"highlighter\":\r\n            PenManager.getInstance().setPenRendererType(IBrushType.MARKER);\r\n              break;\r\n\r\n          case \"erase_brush\":\r\n            PenManager.getInstance().setPenRendererType(IBrushType.ERASER);\r\n              break;\r\n\r\n          case \"#FFE5E5E5\":\r\n            PenManager.getInstance().setColor(5)\r\n              break;\r\n\r\n          case \"#FF000000\":\r\n            PenManager.getInstance().setColor(4)\r\n              break;\r\n\r\n          case \"#FFAAAAAA\":\r\n            PenManager.getInstance().setColor(0)\r\n              break;\r\n\r\n          case \"#FFFFD001\":\r\n            PenManager.getInstance().setColor(2)\r\n              break;\r\n\r\n          case \"#FFFF6500\":\r\n            PenManager.getInstance().setColor(6)\r\n              break;\r\n\r\n          case \"#FFFF0200\":\r\n            PenManager.getInstance().setColor(1)\r\n              break;\r\n\r\n          case \"#FF00ABEB\":\r\n            PenManager.getInstance().setColor(8)\r\n              break;\r\n\r\n          case \"#FF3CDD00\":\r\n            PenManager.getInstance().setColor(7)\r\n              break;\r\n\r\n          case \"#FF6C00E2\":\r\n            PenManager.getInstance().setColor(9)\r\n              break;\r\n\r\n          case \"#FF012EE2\":\r\n            PenManager.getInstance().setColor(3)\r\n              break;\r\n\r\n          case \"pointer\":\r\n              break;\r\n\r\n          case \"erase_all\":\r\n              break;\r\n\r\n          case \"menu_grida\":\r\n              break;\r\n\r\n          case \"full_screen\":\r\n              break;\r\n\r\n          case \"zoom_in\":\r\n              break;\r\n\r\n          case \"zoom_out\":\r\n              break;\r\n\r\n          case \"previous\":\r\n              break;\r\n\r\n          case \"next\":\r\n              break;\r\n      }\r\n  }\r\n}\r\n","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\components\\KeyBoardShortCut.js",["453","454"],"import PenManager from \"../neosmartpen/pencomm/PenManager\";\r\nimport { IBrushType } from \"../neosmartpen/DataStructure\";\r\nimport $ from 'jquery';\r\n\r\n// 2020-12-09 현재 구현되어 있는 기능까지 단축키 완성(추가 구현된 기능 넣고 다른 버튼들 단축키 지정하기)\r\n\r\nexport default function KeyBoardShortCut(evt) {\r\n\r\n    // console.log(\"webViewerKeyDown\");\r\n    let handled = false,\r\n        ensureViewerFocused = false;\r\n    const cmd = (evt.ctrlKey ? 1 : 0) | (evt.altKey ? 2 : 0) | (evt.shiftKey ? 4 : 0) | (evt.metaKey ? 8 : 0);\r\n\r\n    console.log(`keyCode = ${evt.keyCode}`);\r\n\r\n    if (cmd == 0) {\r\n        switch (true) {\r\n            case 0x30 <= evt.keyCode && evt.keyCode <= 0x39: // '1'\r\n                {\r\n                    var color_num = evt.keyCode - 0x30;\r\n                    PenManager.getInstance().setColor(color_num);\r\n                    // setPenColor(color_num);\r\n                    // toggleColorRadioButton( color_num );\r\n                    // console.log(`                ==> setColor(${color_num})`);\r\n                    // var $elem = $(`.color_${color_num}`);\r\n                    // processColorRadioButton(undefined, $elem);\r\n                    handled = true;\r\n                }\r\n\r\n                break;\r\n\r\n            case 81 == evt.keyCode: // q\r\n                // setPenType(PenType.PEN);\r\n                PenManager.getInstance().setPenRendererType(IBrushType.PEN);\r\n                handled = true;\r\n                break;\r\n\r\n            case 87 == evt.keyCode: // w\r\n                // setPenType(PenType.MARKER);\r\n                PenManager.getInstance().setPenRendererType(IBrushType.MARKER);\r\n                handled = true;\r\n                break;\r\n\r\n            case 69 == evt.keyCode: // e\r\n                // setPenType(PenType.ERASER);\r\n                PenManager.getInstance().setPenRendererType(IBrushType.ERASER);\r\n                handled = true;\r\n                break;\r\n\r\n            case 82 == evt.keyCode: // r\r\n                break;\r\n\r\n            case 84 == evt.keyCode: // t\r\n                break;\r\n\r\n            case 65 == evt.keyCode: // a\r\n                // setPenThickness(1);\r\n                PenManager.getInstance().setThickness(1);\r\n                handled = true;\r\n                break;\r\n\r\n            case 83 == evt.keyCode: // s\r\n                // setPenThickness(2);\r\n                PenManager.getInstance().setThickness(2);\r\n                handled = true;\r\n                break;\r\n\r\n            case 68 == evt.keyCode: // d\r\n                // setPenThickness(3);\r\n                PenManager.getInstance().setThickness(3);\r\n                handled = true;\r\n                break;\r\n\r\n            case 70 == evt.keyCode: // f\r\n                // setPenThickness(4);\r\n                // handled = true;\r\n                break;\r\n\r\n            case 71 == evt.keyCode: // g\r\n                // setPenThickness(5);\r\n                // handled = true;\r\n                break;\r\n\r\n            case 90 == evt.keyCode: // z\r\n                // onBtn_fitWidth();\r\n                // handled = true;\r\n                break;\r\n\r\n            case 88 == evt.keyCode: // x\r\n                // onBtn_fitHeight();\r\n                // handled = true;\r\n                break;\r\n\r\n            case 67 == evt.keyCode: // c\r\n                // onBtn_fitCanvas();\r\n                // handled = true;\r\n                break;\r\n\r\n            case 86 == evt.keyCode: // v\r\n                // onBtn_fitPaper();\r\n                // handled = true;\r\n                break;\r\n\r\n            case 66 == evt.keyCode: // b\r\n                break;\r\n\r\n            case 9 == evt.keyCode: // <TAB>\r\n                // onRotateButton();\r\n                // handled = true;\r\n                break;\r\n\r\n\r\n            case 80 == evt.keyCode: // P\r\n                // toggleAllStrokesVisible();\r\n                // handled = true;\r\n                break;\r\n\r\n            case 33 == evt.keyCode: // page up\r\n                // onPrevPage();\r\n                // handled = true;\r\n                break;\r\n            case 34 == evt.keyCode: // page down\r\n                // onNextPage();\r\n                // handled = true;\r\n                break;\r\n\r\n        }\r\n    } else if (cmd == 4) {\r\n        switch (evt.keyCode) {\r\n            case 0x31:\r\n            case 0x32:\r\n            case 0x33:\r\n            case 0x34:\r\n            case 0x35:\r\n            case 0x36:\r\n            case 0x37:\r\n            case 0x38:\r\n            case 0x39:\r\n                // togglePenStrokeVisible(evt.keyCode - 0x30);\r\n                // handled = true;\r\n                break;\r\n\r\n            case 0x30:\r\n                // toggleAllStrokesVisible();\r\n                // handled = true;\r\n                break;\r\n        }\r\n    } else if (cmd == 1) {\r\n        switch (evt.keyCode) {\r\n            case 90: // ctrl-Z\r\n                // onBtnUndo();\r\n                // handled = true;\r\n                break;\r\n\r\n            case 89: // ctrl-Z\r\n                // onBtnRedo();\r\n                // handled = true;\r\n                break;\r\n        }\r\n    }\r\n\r\n    if (handled) {\r\n        evt.preventDefault();\r\n    }\r\n}\r\n","C:\\Users\\jsc92\\OneDrive\\바탕 화면\\GridaBoard version 2\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\Modal\\PrintOptionDialog.js",["455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477"],"import React, {useState} from \"react\";\r\n// import { Container, Modal, Row, Col, Button } from \"react-bootstrap\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Radio } from '@material-ui/core';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { Button, Box, Input } from \"@material-ui/core\";\r\n\r\nimport { IPrintingReport, IPrintOption, MediaSize, PageInfo } from '../PrintDataTypes';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport $ from 'jquery';\r\n// import { CheckBox } from \"@material-ui/icons\";\r\nimport CheckBox from '@material-ui/core/Checkbox';\r\n\r\n// 2020-12-10 printDialog까지 완성 (인쇄하는 부분으로 값들 전달하는 것 완성시키기)\r\n\r\nconst displayOption = () => {\r\n  var subOption = document.getElementById('subOption');\r\n  if (subOption.style.display === 'none') {\r\n    subOption.style.display = 'block';\r\n  } else {\r\n    subOption.style.display = 'none';\r\n  }\r\n}\r\n\r\nvar _ncodePrint = $(\"#ncodePaper\").prop(\"defaultChecked\");\r\nvar _bluePrint = $(\"#bluePrint\").prop(\"defaultChecked\");\r\nvar _calibrationMark = $(\"#calibrationMark\").prop(\"defaultChecked\");\r\nvar _oldCalibrationMark = $(\"#calibrationMark\").prop(\"defaultChecked\");\r\nvar _printNcode = $(\"#printNcode\").prop(\"defaultChecked\");\r\nvar _ni = null;\r\nvar _ni_new = null;\r\nvar arrCallback = [];\r\n\r\nfunction on(select_target, message, _func, bindObj) {\r\n  // if (typeof obj == \"object\") {\r\n  //     console.log(\"!!\");\r\n  // }\r\n  $(select_target).on(message, _func.bind(bindObj));\r\n\r\n  // 나중에 dump할 것을 위해서 아래와 같이 배열에 추가\r\n  var callbackItem = getCallbackItem(\"jQuery\", select_target, message, _func, bindObj);\r\n  arrCallback.push(callbackItem);\r\n  // this.dumpAll();\r\n}\r\n\r\nfunction getCallbackItem(receiver, select_target, message, _func, obj) {\r\n  var obj_name = \"window\";\r\n  if (obj) {\r\n      if (obj.name) {\r\n          obj_name = obj.name;\r\n      } else if (obj.constructor) {\r\n          obj_name = obj.constructor.name;\r\n      }\r\n  }\r\n\r\n  return {\r\n      receiver: receiver,\r\n      target: select_target,\r\n      msg: message,\r\n      callback: _func.name,\r\n      class: obj_name,\r\n      assignedAt: getFunctionName(),\r\n  };\r\n};\r\n\r\nfunction getFunctionName() {\r\n  // https://kjwsx23.tistory.com/285/\r\n  let stack_msg = new Error().stack || \"\";\r\n  var stack = stack_msg.split(\"\\n\").map(function (line) {\r\n      return line.trim();\r\n  });\r\n  if (stack[0].indexOf(\"Error\") > -1) {\r\n      stack.splice(0, 1);\r\n  }\r\n\r\n  return stack[3];\r\n}\r\n\r\n\r\nwindow.onload = function() {\r\n  on(\"#nomalPaper\", \"change\", onNormalPaper, window);\r\n  on(\"#ncodePaper\", \"change\", onNcodePaper, window);\r\n  on(\"#printNcode\", \"change\", onChangePrintNcode, window);\r\n  on(\"#dropDownQualityState\", \"change\", onQualitySelectChanged, window);\r\n}\r\n\r\nfunction onNormalPaper() {\r\n  $(\"#nomalPaper\").removeAttr('defaultChecked');\r\n  if ($(\"#nomalPaper\").is(\":checked\") === true) {\r\n    $(\"#nomalPaper\").prop(\"checked\", true);\r\n  } else {\r\n    $(\"#nomalPaper\").prop(\"checked\", false);\r\n  }\r\n  var isForSmartpen = $(\"#nomalPaper\").prop(\"checked\");\r\n  console.log(isForSmartpen);\r\n  onModeChange(isForSmartpen);\r\n}\r\n\r\nfunction onNcodePaper() {\r\n  $(\"#nomalPaper\").removeAttr('defaultChecked');\r\n  if ($(\"#ncodePaper\").is(\":checked\") === true) {\r\n    $(\"#nomalPaper\").prop(\"checked\", false);\r\n  } else {\r\n    $(\"#nomalPaper\").prop(\"checked\", true);\r\n  }\r\n  var isForBlueprintOnly = $(\"#ncodePaper\").prop(\"checked\");\r\n  console.log(isForBlueprintOnly);\r\n  onModeChange(!isForBlueprintOnly);\r\n}\r\n\r\nfunction onQualitySelectChanged() {\r\n  var value = $(\"#dropDownQualityState\").val();\r\n  var print_ncode = $(\"#printNcode\").prop(\"checked\");\r\n\r\n  if (print_ncode) value = 4;\r\n  setPrintQuality(value);\r\n}\r\n\r\nfunction onModeChange(isForSmartpen) {\r\n  var code_txt2 = \"\";\r\n  if (isForSmartpen) {\r\n      // pop previous values\r\n      $(\"#bluePrint\").prop(\"defaultChecked\", _bluePrint);\r\n      $(\"#calibrationMark\").prop(\"defaultChecked\", _calibrationMark);\r\n      $(\"#printNcode\").prop(\"defaultChecked\", true);\r\n\r\n      // $(\"#code_density\").val(_code_density);\r\n\r\n      // ncode printing\r\n      $(\"#nomalPaper\").prop(\"checked\", true);\r\n      $(\"#ncodePaper\").prop(\"checked\", false);\r\n\r\n      $(\"#printNcode\").prop(\"disabled\", true);\r\n      $(\"#codeDensity\").prop(\"disabled\", false);\r\n      $(\"#calibrationMark\").prop(\"disabled\", false);\r\n      // $(\"#btn_blueprint\").prop(\"disabled\", false);\r\n\r\n      /** code issue area */\r\n      $(\"#forceNewCode\").prop(\"disabled\", false);\r\n      // if (_ni) {\r\n      //     $(\"#forceSameCode\").prop(\"disabled\", false);\r\n      //     code_txt2 = `(${_ni.section}.${_ni.owner}.${_ni.book}.${_ni.page} ~ ${_ni.page + _ni.num_pages - 1})`;\r\n      //     $(\"#reuseCodeRange\").text(code_txt2);\r\n      // } else $(\"#forceSameCode\").prop(\"disabled\", true);\r\n\r\n      // var code_txt1 = `(${_ni_new.section}.${_ni_new.owner}.${_ni_new.book}.${_ni_new.page} ~ ${\r\n      //     _ni_new.page + _ni_new.num_pages - 1\r\n      // })`;\r\n      // $(\"#newCodeRange\").text(code_txt1);\r\n\r\n      onChangePrintNcode();\r\n  } else {\r\n      // push previous values\r\n      _bluePrint = $(\"#bluePrint\").prop(\"defaultChecked\");\r\n      _oldCalibrationMark = $(\"#calibrationMark\").prop(\"defaultChecked\");\r\n      _printNcode = $(\"#printNcode\").prop(\"defaultChecked\");\r\n\r\n      // _code_density = parseInt($(\"#code_density\").val());\r\n\r\n      // Blueprint only\r\n      $(\"#nomalPaper\").prop(\"checked\", false);\r\n      $(\"#ncodePaper\").prop(\"checked\", true);\r\n\r\n      $(\"#printNcode\").prop(\"disabled\", true);\r\n      $(\"#printNcode\").prop(\"checked\", false);\r\n\r\n      $(\"#calibrationMark\").prop(\"disabled\", true);\r\n      $(\"#calibrationMark\").prop(\"checked\", true);\r\n\r\n      $(\"#codeDensity\").prop(\"disabled\", true);\r\n      // $(\"#btn_blueprint\").prop(\"disabled\", true);\r\n\r\n      $(\"#forceNewCode\").prop(\"disabled\", true);\r\n      $(\"#forceSameCode\").prop(\"disabled\", true);\r\n\r\n      $(\"#newCodeRange\").text(\"\");\r\n      $(\"#reuseCodeRange\").text(\"\");\r\n  }\r\n}\r\n\r\nfunction onChangePrintNcode() {\r\n  var print_ncode = $(\"#printNcode\").prop(\"defaultChecked\");\r\n\r\n  if (print_ncode) {\r\n      $(\"#calibrationMark\").prop(\"defaultChecked\", _oldCalibrationMark);\r\n      $(\"#calibrationMark\").prop(\"disabled\", false);\r\n\r\n      $(\"#codeDensity\").prop(\"disabled\", false);\r\n\r\n      setPrintQuality(4);\r\n  } else {\r\n      _oldCalibrationMark = $(\"#calibrationMark\").prop(\"defaultChecked\");\r\n      $(\"#calibrationMark\").prop(\"defaultChecked\", true);\r\n      $(\"#calibrationMark\").prop(\"disabled\", true);\r\n      $(\"#codeDensity\").prop(\"disabled\", true);\r\n  }\r\n}\r\n\r\nfunction setPrintQuality(value) {\r\n  var index = parseInt(value);\r\n  $(\"#dropDownQualityState\").val(index);\r\n  var dpi = resolutionIndexToDpiNumber(index);\r\n\r\n  $(\"#qualityDpiText\").text(`${dpi} DPI`);\r\n}\r\n\r\nfunction resolutionIndexToDpiNumber(index) {\r\n  var val = 300;\r\n  switch (index) {\r\n      case 1:\r\n          val = 150;\r\n          break;\r\n\r\n      case 2:\r\n          val = 200;\r\n          break;\r\n\r\n      case 3:\r\n          val = 300;\r\n          break;\r\n\r\n      case 4:\r\n          val = 600;\r\n          break;\r\n\r\n      default:\r\n          val = 300;\r\n          break;\r\n  }\r\n\r\n  return val;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    // display: 'flex',\r\n    // flexDirection: 'column',\r\n    margin: 'auto',\r\n    width: 'fit-content',\r\n    \"&&&:before\": {\r\n      borderBottom: \"none\"\r\n    },\r\n    \"&&:after\": {\r\n      borderBottom: \"none\"\r\n    }\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    minWidth: 120,\r\n  },\r\n  formControlLabel: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\nexport default function PrintOptionDialog () {\r\n  \r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [checked, setChecked] = React.useState(true);\r\n  const [IPrintOption, setIPrintOption] = useState({\r\n    codeDensity: 2,\r\n    printDpi: 600,\r\n    pdfRenderingDpi: 300,\r\n    putCalibrationMark: true,\r\n    printNcode: true,\r\n    dotsInACell: 7,\r\n    mediaSize: MediaSize.A4,\r\n    direction: \"auto\",\r\n    colorMode: 1,\r\n    scaleUpToMedia: true,\r\n    scaleDownToMedia: true,\r\n    targetPages: \"\",\r\n    pagesPerSheet: 1,\r\n    pageInfo: PageInfo.first_page,\r\n    debugMode: 0,\r\n    hasToPutNcode: true\r\n  })\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleClose = (e) => {\r\n    setIPrintOption({\r\n      ...IPrintOption,\r\n      codeDensity: 2,\r\n      printDpi: 600,\r\n      pdfRenderingDpi: 300,\r\n      putCalibrationMark: true,\r\n      printNcode: true,\r\n      dotsInACell: 7,\r\n      mediaSize: MediaSize.A4,\r\n      direction: \"auto\",\r\n      colorMode: 1,\r\n      scaleUpToMedia: true,\r\n      scaleDownToMedia: true,\r\n      targetPages: \"\",\r\n      pagesPerSheet: 1,\r\n      pageInfo: PageInfo.first_page,\r\n      debugMode: 0,\r\n      hasToPutNcode: true\r\n    })\r\n    setOpen(false);\r\n  }\r\n\r\n  const handleSave = (e) => {\r\n    //저장 로직 추가\r\n    setIPrintOption({\r\n      ...IPrintOption,\r\n      targetPages : $('#targetPages').val(),\r\n      [e.target.name] : e.target.value\r\n    });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setIPrintOption({\r\n      ...IPrintOption,\r\n      [e.target.name] : e.target.value\r\n    });\r\n\r\n    console.log(e.target.value);\r\n    // console.log(MediaSize);\r\n    // console.log(MediaSize.A4);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        <Box fontSize={16} fontWeight=\"fontWeightBold\" >\r\n          인쇄 옵션 설정\r\n        </Box>\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" style={{boxShadow: \"5px 5px\"}}>\r\n        <DialogTitle id=\"form-dialog-title\" style={{ float: \"left\", width: \"500px\"}}>\r\n          <div style={{float: \"left\", marginRight: \"10px\"}}>인쇄 설정</div>\r\n          <div style={{ fontSize: \"10px\", color: \"red\"}}>\r\n            *원활한 필기 인식을 위해 출력물의 색상이 실제와 다를 수 있습니다.\r\n          </div>\r\n        </DialogTitle>\r\n        <hr></hr>\r\n        <DialogContent>\r\n          <div>\r\n            <div style={{fontWeight: \"bold\"}}>\r\n              인쇄 방법\r\n            </div>\r\n            <br></br>\r\n            <p style={{float: \"left\", marginRight: \"40px\"}}>\r\n              <input id=\"nomalPaper\" type=\"checkbox\" defaultChecked onClick={onNormalPaper} style={{display: \"inline\", marginRight: \"10px\"}}></input>\r\n              <label>일반 용지에 인쇄</label>\r\n            </p>\r\n            <p>\r\n              <input id=\"ncodePaper\" type=\"checkbox\" onClick={onNcodePaper} style={{display: \"inline\", marginRight: \"10px\"}}></input>\r\n              <label>Ncode A4에 인쇄</label>\r\n            </p>\r\n          </div>  \r\n          {/* </form> */}\r\n          <Button onClick={displayOption} style={{border: \"1px solid black\", width: \"450px\"}}>고급 설정</Button>\r\n          \r\n          <div id=\"subOption\" style={{marginTop: \"20px\", display: \"none\"}}>\r\n            <p style={{float: \"left\", marginRight: \"40px\"}}>\r\n              <input id=\"calibrationMark\" type=\"checkbox\" defaultChecked style={{display: \"inline\", marginRight: \"10px\"}}></input>\r\n              <label>위치 보정용 마크 인쇄</label>\r\n            </p>\r\n            {/* 색변환(블루프린트) */}\r\n            <input id=\"bluePrint\" style={{display: \"none\"}}></input> \r\n            {/* Ncode 인쇄 여부 */}\r\n            <input id=\"printNcode\" style={{display: \"none\"}} disabled></input>\r\n            <p>\r\n              <span style={{marginRight: \"20px\"}}>코드 인쇄 농도</span>\r\n              <select id=\"codeDensity\">\r\n                <option>연하게</option>\r\n                <option>보통</option>\r\n                <option>진하게</option>\r\n              </select>\r\n            </p>\r\n\r\n            <div style={{fontWeight: \"bold\", clear: \"both\"}}>\r\n                Ncode 발행\r\n              </div>\r\n              <br></br>\r\n              <p style={{float: \"left\", marginRight: \"40px\"}}>\r\n                <input id=\"forceNewCode\" type=\"radio\" defaultChecked style={{marginRight: \"10px\"}} />\r\n                <label>새로운 페이지로 인쇄</label>\r\n                <small><span id=\"newCodeRange\"></span></small>\r\n              </p>\r\n              <p style={{clear: \"both\", marginRight: \"40px\"}}>\r\n                <input id=\"forceSameCode\" type=\"radio\" style={{marginRight: \"10px\"}} />\r\n                <label>기존 인쇄물과 같은 페이지로 인쇄</label>\r\n                <small><span id=\"reuseCodeRange\"></span></small>\r\n              </p>\r\n\r\n              <div>\r\n                <span style={{marginRight: \"20px\"}}>인쇄 품질</span>\r\n                <select id=\"dropDownQualityState\">\r\n                  <option>품질 우선</option>\r\n                  <option>보통 품질</option>\r\n                </select>\r\n                <span id=\"qualityDpiText\"></span>\r\n              </div>\r\n              <br></br>\r\n              <div>\r\n                <span style={{marginRight: \"20px\"}}>면당 여러 페이지 인쇄</span>\r\n                <select style={{width: \"50px\"}}>\r\n                  <option>2</option>\r\n                  <option>4</option>\r\n                  <option>6</option>\r\n                  <option>8</option>\r\n                </select>\r\n              </div>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleSave} color=\"primary\">\r\n            Save\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\n",{"ruleId":"478","severity":1,"message":"479","line":107,"column":3,"nodeType":"480","messageId":"481","endLine":107,"endColumn":52,"fix":"482"},{"ruleId":"478","severity":1,"message":"479","line":99,"column":5,"nodeType":"480","messageId":"481","endLine":99,"endColumn":46,"fix":"483"},{"ruleId":"478","severity":1,"message":"479","line":396,"column":9,"nodeType":"480","messageId":"481","endLine":396,"endColumn":31,"fix":"484"},{"ruleId":"478","severity":1,"message":"479","line":398,"column":9,"nodeType":"480","messageId":"481","endLine":398,"endColumn":15,"fix":"485"},{"ruleId":"478","severity":1,"message":"479","line":400,"column":11,"nodeType":"480","messageId":"481","endLine":400,"endColumn":29,"fix":"486"},{"ruleId":"478","severity":1,"message":"479","line":402,"column":11,"nodeType":"480","messageId":"481","endLine":402,"endColumn":87,"fix":"487"},{"ruleId":"488","severity":1,"message":"489","line":52,"column":24,"nodeType":"490","messageId":"491","endLine":52,"endColumn":29},{"ruleId":"478","severity":1,"message":"479","line":37,"column":7,"nodeType":"480","messageId":"481","endLine":37,"endColumn":23,"fix":"492"},{"ruleId":"478","severity":1,"message":"479","line":47,"column":19,"nodeType":"480","messageId":"481","endLine":47,"endColumn":54,"fix":"493"},{"ruleId":"478","severity":1,"message":"479","line":48,"column":19,"nodeType":"480","messageId":"481","endLine":48,"endColumn":75,"fix":"494"},{"ruleId":"478","severity":1,"message":"479","line":49,"column":19,"nodeType":"480","messageId":"481","endLine":49,"endColumn":71,"fix":"495"},{"ruleId":"478","severity":1,"message":"479","line":50,"column":19,"nodeType":"480","messageId":"481","endLine":50,"endColumn":69,"fix":"496"},{"ruleId":"478","severity":1,"message":"479","line":51,"column":19,"nodeType":"480","messageId":"481","endLine":51,"endColumn":80,"fix":"497"},{"ruleId":"478","severity":1,"message":"479","line":53,"column":19,"nodeType":"480","messageId":"481","endLine":53,"endColumn":56,"fix":"498"},{"ruleId":"478","severity":1,"message":"479","line":54,"column":19,"nodeType":"480","messageId":"481","endLine":54,"endColumn":68,"fix":"499"},{"ruleId":"478","severity":1,"message":"479","line":62,"column":19,"nodeType":"480","messageId":"481","endLine":62,"endColumn":25,"fix":"500"},{"ruleId":"478","severity":1,"message":"479","line":66,"column":19,"nodeType":"480","messageId":"481","endLine":66,"endColumn":55,"fix":"501"},{"ruleId":"478","severity":1,"message":"479","line":67,"column":19,"nodeType":"480","messageId":"481","endLine":67,"endColumn":51,"fix":"502"},{"ruleId":"478","severity":1,"message":"479","line":72,"column":23,"nodeType":"480","messageId":"481","endLine":72,"endColumn":70,"fix":"503"},{"ruleId":"478","severity":1,"message":"479","line":73,"column":23,"nodeType":"480","messageId":"481","endLine":73,"endColumn":55,"fix":"504"},{"ruleId":"478","severity":1,"message":"479","line":74,"column":23,"nodeType":"480","messageId":"481","endLine":74,"endColumn":64,"fix":"505"},{"ruleId":"478","severity":1,"message":"479","line":75,"column":23,"nodeType":"480","messageId":"481","endLine":75,"endColumn":63,"fix":"506"},{"ruleId":"478","severity":1,"message":"479","line":76,"column":23,"nodeType":"480","messageId":"481","endLine":76,"endColumn":69,"fix":"507"},{"ruleId":"478","severity":1,"message":"479","line":77,"column":23,"nodeType":"480","messageId":"481","endLine":77,"endColumn":71,"fix":"508"},{"ruleId":"478","severity":1,"message":"479","line":79,"column":23,"nodeType":"480","messageId":"481","endLine":79,"endColumn":75,"fix":"509"},{"ruleId":"478","severity":1,"message":"479","line":81,"column":23,"nodeType":"480","messageId":"481","endLine":89,"endColumn":25,"fix":"510"},{"ruleId":"478","severity":1,"message":"479","line":94,"column":23,"nodeType":"480","messageId":"481","endLine":94,"endColumn":55,"fix":"511"},{"ruleId":"478","severity":1,"message":"479","line":95,"column":23,"nodeType":"480","messageId":"481","endLine":95,"endColumn":55,"fix":"512"},{"ruleId":"513","severity":1,"message":"514","line":105,"column":37,"nodeType":"515","messageId":"516","endLine":105,"endColumn":39},{"ruleId":"478","severity":1,"message":"479","line":116,"column":7,"nodeType":"480","messageId":"481","endLine":116,"endColumn":46,"fix":"517"},{"ruleId":"478","severity":1,"message":"479","line":119,"column":7,"nodeType":"480","messageId":"481","endLine":119,"endColumn":13,"fix":"518"},{"ruleId":"478","severity":1,"message":"479","line":122,"column":11,"nodeType":"480","messageId":"481","endLine":122,"endColumn":38,"fix":"519"},{"ruleId":"478","severity":1,"message":"479","line":124,"column":11,"nodeType":"480","messageId":"481","endLine":124,"endColumn":34,"fix":"520"},{"ruleId":"478","severity":1,"message":"479","line":125,"column":11,"nodeType":"480","messageId":"481","endLine":125,"endColumn":48,"fix":"521"},{"ruleId":"478","severity":1,"message":"479","line":126,"column":11,"nodeType":"480","messageId":"481","endLine":126,"endColumn":33,"fix":"522"},{"ruleId":"478","severity":1,"message":"479","line":127,"column":11,"nodeType":"480","messageId":"481","endLine":127,"endColumn":48,"fix":"523"},{"ruleId":"478","severity":1,"message":"479","line":129,"column":11,"nodeType":"480","messageId":"481","endLine":129,"endColumn":35,"fix":"524"},{"ruleId":"478","severity":1,"message":"479","line":130,"column":11,"nodeType":"480","messageId":"481","endLine":130,"endColumn":35,"fix":"525"},{"ruleId":"478","severity":1,"message":"479","line":134,"column":19,"nodeType":"480","messageId":"481","endLine":134,"endColumn":34,"fix":"526"},{"ruleId":"527","severity":1,"message":"528","line":11,"column":9,"nodeType":"490","messageId":"529","endLine":11,"endColumn":28},{"ruleId":"478","severity":1,"message":"479","line":20,"column":21,"nodeType":"480","messageId":"481","endLine":20,"endColumn":56,"fix":"530"},{"ruleId":"478","severity":1,"message":"479","line":34,"column":3,"nodeType":"480","messageId":"481","endLine":34,"endColumn":56,"fix":"531"},{"ruleId":"478","severity":1,"message":"479","line":42,"column":1,"nodeType":"480","messageId":"481","endLine":42,"endColumn":59,"fix":"532"},{"ruleId":"478","severity":1,"message":"479","line":43,"column":1,"nodeType":"480","messageId":"481","endLine":43,"endColumn":57,"fix":"533"},{"ruleId":"478","severity":1,"message":"479","line":44,"column":1,"nodeType":"480","messageId":"481","endLine":44,"endColumn":69,"fix":"534"},{"ruleId":"478","severity":1,"message":"479","line":45,"column":1,"nodeType":"480","messageId":"481","endLine":45,"endColumn":72,"fix":"535"},{"ruleId":"478","severity":1,"message":"479","line":46,"column":1,"nodeType":"480","messageId":"481","endLine":46,"endColumn":59,"fix":"536"},{"ruleId":"478","severity":1,"message":"479","line":47,"column":1,"nodeType":"480","messageId":"481","endLine":47,"endColumn":16,"fix":"537"},{"ruleId":"478","severity":1,"message":"479","line":48,"column":1,"nodeType":"480","messageId":"481","endLine":48,"endColumn":20,"fix":"538"},{"ruleId":"478","severity":1,"message":"479","line":49,"column":1,"nodeType":"480","messageId":"481","endLine":49,"endColumn":22,"fix":"539"},{"ruleId":"478","severity":1,"message":"479","line":58,"column":3,"nodeType":"480","messageId":"481","endLine":58,"endColumn":88,"fix":"540"},{"ruleId":"478","severity":1,"message":"479","line":64,"column":3,"nodeType":"480","messageId":"481","endLine":64,"endColumn":27,"fix":"541"},{"ruleId":"542","severity":1,"message":"543","line":81,"column":2,"nodeType":"544","messageId":"516","endLine":81,"endColumn":3,"fix":"545"},{"ruleId":"527","severity":1,"message":"546","line":85,"column":7,"nodeType":"490","messageId":"529","endLine":85,"endColumn":16,"fix":"547"},{"ruleId":"478","severity":1,"message":"479","line":86,"column":3,"nodeType":"480","messageId":"481","endLine":88,"endColumn":6,"fix":"548"},{"ruleId":"478","severity":1,"message":"479","line":111,"column":3,"nodeType":"480","messageId":"481","endLine":111,"endColumn":56,"fix":"549"},{"ruleId":"478","severity":1,"message":"479","line":123,"column":3,"nodeType":"480","messageId":"481","endLine":123,"endColumn":61,"fix":"550"},{"ruleId":"478","severity":1,"message":"479","line":129,"column":3,"nodeType":"480","messageId":"481","endLine":129,"endColumn":48,"fix":"551"},{"ruleId":"478","severity":1,"message":"479","line":130,"column":3,"nodeType":"480","messageId":"481","endLine":130,"endColumn":54,"fix":"552"},{"ruleId":"478","severity":1,"message":"479","line":137,"column":3,"nodeType":"480","messageId":"481","endLine":137,"endColumn":22,"fix":"553"},{"ruleId":"478","severity":1,"message":"479","line":199,"column":3,"nodeType":"480","messageId":"481","endLine":199,"endColumn":61,"fix":"554"},{"ruleId":"478","severity":1,"message":"479","line":217,"column":3,"nodeType":"480","messageId":"481","endLine":217,"endColumn":31,"fix":"555"},{"ruleId":"478","severity":1,"message":"479","line":219,"column":3,"nodeType":"480","messageId":"481","endLine":219,"endColumn":47,"fix":"556"},{"ruleId":"478","severity":1,"message":"479","line":225,"column":3,"nodeType":"480","messageId":"481","endLine":225,"endColumn":17,"fix":"557"},"no-var","Unexpected var, use let or const instead.","VariableDeclaration","unexpectedVar",{"range":"558","text":"559"},{"range":"560","text":"559"},{"range":"561","text":"559"},{"range":"562","text":"559"},{"range":"563","text":"559"},{"range":"564","text":"559"},"no-async-promise-executor","Promise executor functions should not be async.","Identifier","async",{"range":"565","text":"559"},{"range":"566","text":"559"},{"range":"567","text":"559"},{"range":"568","text":"559"},{"range":"569","text":"559"},{"range":"570","text":"559"},{"range":"571","text":"559"},{"range":"572","text":"559"},{"range":"573","text":"559"},{"range":"574","text":"559"},{"range":"575","text":"559"},{"range":"576","text":"559"},{"range":"577","text":"559"},{"range":"578","text":"559"},{"range":"579","text":"559"},{"range":"580","text":"559"},{"range":"581","text":"559"},{"range":"582","text":"559"},{"range":"583","text":"559"},{"range":"584","text":"559"},{"range":"585","text":"559"},"@typescript-eslint/no-empty-function","Unexpected empty method 'complete'.","FunctionExpression","unexpected",{"range":"586","text":"559"},{"range":"587","text":"559"},{"range":"588","text":"559"},{"range":"589","text":"559"},{"range":"590","text":"559"},{"range":"591","text":"559"},{"range":"592","text":"559"},{"range":"593","text":"559"},{"range":"594","text":"559"},{"range":"595","text":"559"},"prefer-const","'ensureViewerFocused' is never reassigned. Use 'const' instead.","useConst",{"range":"596","text":"559"},{"range":"597","text":"559"},{"range":"598","text":"559"},{"range":"599","text":"559"},{"range":"600","text":"559"},{"range":"601","text":"559"},{"range":"602","text":"559"},{"range":"603","text":"559"},{"range":"604","text":"559"},{"range":"605","text":"559"},{"range":"606","text":"559"},{"range":"607","text":"559"},"@typescript-eslint/no-extra-semi","Unnecessary semicolon.","EmptyStatement",{"range":"608","text":"609"},"'stack_msg' is never reassigned. Use 'const' instead.",{"range":"610","text":"611"},{"range":"612","text":"559"},{"range":"613","text":"559"},{"range":"614","text":"559"},{"range":"615","text":"559"},{"range":"616","text":"559"},{"range":"617","text":"559"},{"range":"618","text":"559"},{"range":"619","text":"559"},{"range":"620","text":"559"},{"range":"621","text":"559"},[3492,3495],"let",[2829,2832],[10063,10066],[10123,10126],[10186,10189],[10245,10248],[915,918],[1219,1222],[1274,1277],[1350,1353],[1422,1425],[1492,1495],[1575,1578],[1632,1635],[1912,1915],[2055,2058],[2111,2114],[2259,2262],[2330,2333],[2411,2414],[2476,2479],[2540,2543],[2610,2613],[2684,2687],[2762,2765],[3205,3208],[3261,3264],[3756,3759],[3880,3883],[3952,3955],[3993,3996],[4036,4039],[4093,4096],[4127,4130],[4178,4181],[4214,4217],[4368,4371],[690,693],[1335,1338],[1536,1539],[1596,1599],[1654,1657],[1724,1727],[1797,1800],[1857,1860],[1874,1877],[1895,1898],[2143,2146],[2368,2371],[2747,2761],"}\r\n\r\nfunction",[2824,2827],"const",[2868,2871],[3578,3581],[3939,3942],[4117,4120],[4166,4169],[4326,4329],[6566,6569],[7154,7157],[7228,7231],[7373,7376]]