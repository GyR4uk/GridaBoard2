[{"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\index.js":"1","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\serviceWorker.js":"2","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\client\\Root.js":"3","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\shared\\App.js":"4","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\styles\\theme.js":"5","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\store\\rootReducer.ts":"6","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\store\\reducers\\authorization.js":"7","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\store\\reducers\\pointerTracer.js":"8","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\store\\reducers\\ui.js":"9","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\store\\reducers\\rotate.js":"10","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\pages\\index.tsx":"11","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\pages\\Post.tsx":"12","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\pages\\Posts.tsx":"13","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\pages\\About.tsx":"14","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\pages\\Home.tsx":"15","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\GoogleBtn.js":"16","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\navbar\\Upload.js":"17","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\Save\\SavePdf.tsx":"18","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\index.ts":"19","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\SurfaceMapper\\MappingStorage.ts":"20","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\navbar\\CalibrationMenual.tsx":"21","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\navbar\\PrintButton.tsx":"22","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\navbar\\PageNumbering.tsx":"23","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\buttons\\ZoomButton.tsx":"24","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\buttons\\TracePointButton.tsx":"25","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\buttons\\FullScreenButton.tsx":"26","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\penstorage\\InkStorage.ts":"27","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\buttons\\BackgroundButton.tsx":"28","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\buttons\\ConnectButton.tsx":"29","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\buttons\\RotateButton.tsx":"30","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\buttons\\FitButton.tsx":"31","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\navbar\\ColorButtons.tsx":"32","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\buttons\\PenTypeButton.tsx":"33","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\DefaultOption.ts":"34","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\Locales\\i18n.ts":"35","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PrintDataTypes.ts":"36","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\CanvasColorConverter.ts":"37","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\cloud_util_func.ts":"38","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\SurfaceMapper\\Calibration\\CalibrationButton.tsx":"39","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NeoPdf\\FileBrowserButton.tsx":"40","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PrintPdfButton.tsx":"41","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\index.ts":"42","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\penstorage\\EventSystem.ts":"43","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\styles\\ThemeManager.ts":"44","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\pencomm\\PenManager.ts":"45","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\index.ts":"46","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NeoPdf\\NeoPdfManager.ts":"47","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\constants.ts":"48","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NeoPdf\\FileBrowser.tsx":"49","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\SurfaceMapper\\Calibration\\CalibrationDialog.tsx":"50","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\types\\index.js":"51","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\noteserver\\PaperInfo.ts":"52","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\utils\\UtilsFunc.ts":"53","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\noteserver\\NoteserverClient.ts":"54","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PrintPdfMain.tsx":"55","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\DataStructure\\index.ts":"56","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\renderer\\MixedPageView.tsx":"57","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\DataStructure\\Enums.ts":"58","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\PenBasedRenderer.tsx":"59","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\StorageRenderer.tsx":"60","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\pencomm\\neosmartpen.ts":"61","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\RenderWorkerBase.tsx":"62","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\SurfaceInfo.ts":"63","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NeoPdf\\NeoPdfDocument.ts":"64","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\penstorage\\index.ts":"65","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\UtilFunc.ts":"66","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\utils\\JsUtils.js":"67","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\NcodeRasterizer.tsx":"68","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\SurfaceSplitter.ts":"69","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\DataStructure\\NeoStroke.ts":"70","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\DataStructure\\NeoDot.ts":"71","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PagesForPrint.tsx":"72","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\renderer\\pdf\\NeoPdfViewer.tsx":"73","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\NcodeConstans.ts":"74","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\DrawCurves.ts":"75","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\DataStructure\\Structures.ts":"76","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NeoPdf\\NeoPdfPage.ts":"77","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\index.ts":"78","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\pencomm\\pencomm.ts":"79","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\NcodeFetcher.ts":"80","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\SurfaceMapper\\MappingItem.ts":"81","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\StorageRenderWorker.tsx":"82","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PageForPrint.tsx":"83","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\pencomm\\pencomm_const.ts":"84","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\NcodeSurfaceDataJson.ts":"85","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\pencomm\\pen_util_func.ts":"86","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\renderer\\pdf\\Page.tsx":"87","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\pencomm\\pencomm_event.ts":"88","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\pencomm\\pencomm_enum.ts":"89","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\pencomm\\pencomm_base.ts":"90","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\index.ts":"91","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\PenBasedRenderWorker.tsx":"92","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\DataTypes.ts":"93","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\CoordinateTanslater.ts":"94","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\SolveTransform.ts":"95","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\EchelonMatrix.ts":"96","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\GaussianElimination.ts":"97","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PageOrientation.tsx":"98","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\PUIController.js":"99","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\KeyBoardShortCut.js":"100","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\Modal\\PrintOptionDialog.js":"101"},{"size":829,"mtime":1607317176919,"results":"102","hashOfConfig":"103"},{"size":5227,"mtime":1607317176967,"results":"104","hashOfConfig":"103"},{"size":930,"mtime":1607317176722,"results":"105","hashOfConfig":"103"},{"size":660,"mtime":1607317176968,"results":"106","hashOfConfig":"103"},{"size":1203,"mtime":1607317176984,"results":"107","hashOfConfig":"103"},{"size":454,"mtime":1607525905445,"results":"108","hashOfConfig":"103"},{"size":1129,"mtime":1607319735934,"results":"109","hashOfConfig":"103"},{"size":530,"mtime":1607317176974,"results":"110","hashOfConfig":"103"},{"size":4388,"mtime":1607317176975,"results":"111","hashOfConfig":"103"},{"size":465,"mtime":1607525905443,"results":"112","hashOfConfig":"103"},{"size":176,"mtime":1607333466116,"results":"113","hashOfConfig":"103"},{"size":198,"mtime":1607333540791,"results":"114","hashOfConfig":"103"},{"size":897,"mtime":1607331645289,"results":"115","hashOfConfig":"103"},{"size":378,"mtime":1607333516955,"results":"116","hashOfConfig":"103"},{"size":12811,"mtime":1607675497928,"results":"117","hashOfConfig":"103"},{"size":3793,"mtime":1607415111703,"results":"118","hashOfConfig":"103"},{"size":9744,"mtime":1607415111708,"results":"119","hashOfConfig":"103"},{"size":3305,"mtime":1607587444060,"results":"120","hashOfConfig":"103"},{"size":847,"mtime":1607596873513,"results":"121","hashOfConfig":"103"},{"size":6075,"mtime":1607424412795,"results":"122","hashOfConfig":"103"},{"size":1578,"mtime":1607597687579,"results":"123","hashOfConfig":"103"},{"size":1490,"mtime":1607597248138,"results":"124","hashOfConfig":"103"},{"size":2764,"mtime":1607597248135,"results":"125","hashOfConfig":"103"},{"size":1611,"mtime":1607597248123,"results":"126","hashOfConfig":"103"},{"size":2395,"mtime":1607597248119,"results":"127","hashOfConfig":"103"},{"size":1469,"mtime":1607597248111,"results":"128","hashOfConfig":"103"},{"size":9839,"mtime":1607324815358,"results":"129","hashOfConfig":"103"},{"size":3839,"mtime":1607597248104,"results":"130","hashOfConfig":"103"},{"size":2768,"mtime":1607597248106,"results":"131","hashOfConfig":"103"},{"size":1680,"mtime":1607597248117,"results":"132","hashOfConfig":"103"},{"size":3644,"mtime":1607597248109,"results":"133","hashOfConfig":"103"},{"size":8673,"mtime":1607597248129,"results":"134","hashOfConfig":"103"},{"size":7455,"mtime":1607597248113,"results":"135","hashOfConfig":"103"},{"size":1278,"mtime":1607597099302,"results":"136","hashOfConfig":"103"},{"size":1201,"mtime":1607317176689,"results":"137","hashOfConfig":"103"},{"size":3662,"mtime":1607597099303,"results":"138","hashOfConfig":"103"},{"size":3260,"mtime":1607420106538,"results":"139","hashOfConfig":"103"},{"size":5911,"mtime":1607424412823,"results":"140","hashOfConfig":"103"},{"size":754,"mtime":1607333748074,"results":"141","hashOfConfig":"103"},{"size":2664,"mtime":1607347727977,"results":"142","hashOfConfig":"103"},{"size":8379,"mtime":1607596880078,"results":"143","hashOfConfig":"103"},{"size":1421,"mtime":1607333512688,"results":"144","hashOfConfig":"103"},{"size":3336,"mtime":1607324316034,"results":"145","hashOfConfig":"103"},{"size":5627,"mtime":1607329529982,"results":"146","hashOfConfig":"103"},{"size":7540,"mtime":1607525905438,"results":"147","hashOfConfig":"103"},{"size":220,"mtime":1607317176708,"results":"148","hashOfConfig":"103"},{"size":2396,"mtime":1607317176711,"results":"149","hashOfConfig":"103"},{"size":854,"mtime":1607333395769,"results":"150","hashOfConfig":"103"},{"size":2599,"mtime":1607317176709,"results":"151","hashOfConfig":"103"},{"size":5823,"mtime":1607329052826,"results":"152","hashOfConfig":"103"},{"size":24,"mtime":1607317594439,"results":"153","hashOfConfig":"103"},{"size":6464,"mtime":1607323506473,"results":"154","hashOfConfig":"103"},{"size":3268,"mtime":1607344776509,"results":"155","hashOfConfig":"103"},{"size":5612,"mtime":1607335184395,"results":"156","hashOfConfig":"103"},{"size":8817,"mtime":1607584957590,"results":"157","hashOfConfig":"103"},{"size":271,"mtime":1607317176924,"results":"158","hashOfConfig":"103"},{"size":4070,"mtime":1607392366609,"results":"159","hashOfConfig":"103"},{"size":863,"mtime":1607323077606,"results":"160","hashOfConfig":"103"},{"size":13265,"mtime":1607333846598,"results":"161","hashOfConfig":"103"},{"size":10895,"mtime":1607332706285,"results":"162","hashOfConfig":"103"},{"size":15927,"mtime":1607597248142,"results":"163","hashOfConfig":"103"},{"size":19057,"mtime":1607392965884,"results":"164","hashOfConfig":"103"},{"size":4893,"mtime":1607587012388,"results":"165","hashOfConfig":"103"},{"size":8049,"mtime":1607420165385,"results":"166","hashOfConfig":"103"},{"size":62,"mtime":1607317176937,"results":"167","hashOfConfig":"103"},{"size":733,"mtime":1607587286631,"results":"168","hashOfConfig":"103"},{"size":286,"mtime":1607317176960,"results":"169","hashOfConfig":"103"},{"size":20942,"mtime":1607586216130,"results":"170","hashOfConfig":"103"},{"size":7031,"mtime":1607585856542,"results":"171","hashOfConfig":"103"},{"size":2645,"mtime":1607323506478,"results":"172","hashOfConfig":"103"},{"size":528,"mtime":1607317176922,"results":"173","hashOfConfig":"103"},{"size":3469,"mtime":1607577937089,"results":"174","hashOfConfig":"103"},{"size":2857,"mtime":1607569301055,"results":"175","hashOfConfig":"103"},{"size":905,"mtime":1607317176702,"results":"176","hashOfConfig":"103"},{"size":7529,"mtime":1607324815358,"results":"177","hashOfConfig":"103"},{"size":3704,"mtime":1607317176685,"results":"178","hashOfConfig":"103"},{"size":4410,"mtime":1607577660089,"results":"179","hashOfConfig":"103"},{"size":27,"mtime":1607317176700,"results":"180","hashOfConfig":"103"},{"size":28941,"mtime":1607324178359,"results":"181","hashOfConfig":"103"},{"size":3606,"mtime":1607587286631,"results":"182","hashOfConfig":"103"},{"size":2343,"mtime":1607317176718,"results":"183","hashOfConfig":"103"},{"size":33055,"mtime":1607333846599,"results":"184","hashOfConfig":"103"},{"size":15618,"mtime":1607586469981,"results":"185","hashOfConfig":"103"},{"size":513,"mtime":1607317176933,"results":"186","hashOfConfig":"103"},{"size":2644,"mtime":1607317176705,"results":"187","hashOfConfig":"103"},{"size":1404,"mtime":1607317176930,"results":"188","hashOfConfig":"103"},{"size":8434,"mtime":1607396056444,"results":"189","hashOfConfig":"103"},{"size":1813,"mtime":1607324178360,"results":"190","hashOfConfig":"103"},{"size":461,"mtime":1607323792452,"results":"191","hashOfConfig":"103"},{"size":9241,"mtime":1607323753733,"results":"192","hashOfConfig":"103"},{"size":120,"mtime":1607317176683,"results":"193","hashOfConfig":"103"},{"size":14814,"mtime":1607325076022,"results":"194","hashOfConfig":"103"},{"size":3033,"mtime":1607415111692,"results":"195","hashOfConfig":"103"},{"size":7550,"mtime":1607587286632,"results":"196","hashOfConfig":"103"},{"size":3929,"mtime":1607329819676,"results":"197","hashOfConfig":"103"},{"size":1068,"mtime":1607317176680,"results":"198","hashOfConfig":"103"},{"size":2144,"mtime":1607317176681,"results":"199","hashOfConfig":"103"},{"size":2017,"mtime":1607585096656,"results":"200","hashOfConfig":"103"},{"size":6991,"mtime":1607597248101,"results":"201","hashOfConfig":"103"},{"size":5155,"mtime":1607597248098,"results":"202","hashOfConfig":"103"},{"size":14259,"mtime":1607597248092,"results":"203","hashOfConfig":"103"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},"5l6bpr",{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"238","usedDeprecatedRules":"206"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"267","usedDeprecatedRules":"217"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"368","usedDeprecatedRules":"217"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"217"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":31,"source":"408","usedDeprecatedRules":"206"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"411","usedDeprecatedRules":"206"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":23,"source":"414","usedDeprecatedRules":"206"},"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\index.js",[],[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\serviceWorker.js",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\client\\Root.js",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\shared\\App.js",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\styles\\theme.js",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\store\\rootReducer.ts",[],[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\store\\reducers\\authorization.js",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\store\\reducers\\pointerTracer.js",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\store\\reducers\\ui.js",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\store\\reducers\\rotate.js",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\pages\\index.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\pages\\Post.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\pages\\Posts.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\pages\\About.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\pages\\Home.tsx",["415"],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\GoogleBtn.js",["416"],"/*global chrome*/\r\nimport React, {Component, useState, useEffect} from 'react';\r\nimport { gapi } from 'gapi-script';\r\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\r\n// import MappingStorage from \"../NcodePrintLib/SurfaceMapper/MappingStorage\";\r\n\r\nconst CLIENT_ID = '169738066451-5u100n2i6rko17jhmtpvq0bnjuedj7g4.apps.googleusercontent.com';\r\n\r\nclass GoogleBtn extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLogined:false,\r\n      accessToken:''\r\n    };\r\n\r\n    this.login = this.login.bind(this);\r\n    this.handleLoginFailure = this.handleLoginFailure.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n    this.handleLogoutFailure = this.handleLogoutFailure.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // var self = this;\r\n    // gapi.load('auth2', function() { \r\n    //   var gauth = gapi.auth2.init({\r\n    //       client_id: {CLIENT_ID}\r\n    //   });\r\n      \r\n    //   gauth.then(function(){\r\n    //     console.log('gauth init success');\r\n    //       if (gauth.isSignedIn.get()) {\r\n    //         self.setState({isLogined : true});\r\n    //         console.log('로그인 상태');\r\n    //       } else {\r\n    //         self.setState({isLogined : false});\r\n    //         console.log('로그아웃 상태');\r\n    //       }\r\n    //     }, function(){\r\n    //     console.error('gauth init fail');\r\n    //   });\r\n    // });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    // if (this.state.isLogined) {\r\n    //   this.readMappingInfo();\r\n    // }\r\n  }\r\n\r\n  readMappingInfo = () => {\r\n    gapi.load('client', function () {\r\n      gapi.client.load('drive', 'v2', async function () {\r\n        const fileResponse = await gapi.client.drive.files.list();\r\n        const files = fileResponse.result.items;\r\n\r\n        if (files && files.length > 0) {\r\n          for (let i = 0; i < files.length; i++) {\r\n            const file = files[i];\r\n            if (file.title === 'mappingInfo.json') {\r\n              const fileId = file.id;\r\n              const getFileRequest = gapi.client.drive.files.get({\r\n                fileId: fileId,\r\n                alt: 'media'\r\n              })\r\n\r\n              getFileRequest.then(await function(response) {\r\n                const currentMappingObj = JSON.parse(response.body);\r\n                const content = JSON.stringify(currentMappingObj);\r\n                console.log(content);\r\n              }, function(error) {\r\n                console.error(error)\r\n              })\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  login (resp) {\r\n    if(resp.accessToken) {\r\n      this.setState(state => ({\r\n        isLogined: true,\r\n        accessToken: resp.accessToken\r\n      }));\r\n    }\r\n  }\r\n\r\n  logout (resp) {\r\n    this.setState(state => ({\r\n      isLogined: false,\r\n      accessToken: ''\r\n    }));\r\n\r\n    var auth2 = gapi.auth2.getAuthInstance();\r\n    auth2.signOut().then(function () {\r\n      console.log('user log out ');\r\n    });\r\n    auth2.disconnect();\r\n  }\r\n\r\n  handleLoginFailure (resp) {\r\n    console.log('why login fail?');\r\n  }\r\n  handleLogoutFailure (resp) {\r\n    console.log('why logout fail?');\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        {this.state.isLogined ?\r\n          <GoogleLogout\r\n          clientId = {CLIENT_ID}\r\n          buttonText = 'Logout'\r\n          onLogoutSuccess={this.logout}\r\n          onFailure={this.handleLogoutFailure}\r\n          ></GoogleLogout>: \r\n          <GoogleLogin \r\n            clientId = {CLIENT_ID}\r\n            buttonText=\"Login\"\r\n            onSuccess={this.login}\r\n            onFailure={this.handleLoginFailure}\r\n            cookiePolicy={'single_host_origin'}\r\n            responseType='code,token'\r\n          />\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default GoogleBtn;","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\navbar\\Upload.js",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\Save\\SavePdf.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\index.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\SurfaceMapper\\MappingStorage.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\navbar\\CalibrationMenual.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\navbar\\PrintButton.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\navbar\\PageNumbering.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\buttons\\ZoomButton.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\buttons\\TracePointButton.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\buttons\\FullScreenButton.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\penstorage\\InkStorage.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\buttons\\BackgroundButton.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\buttons\\ConnectButton.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\buttons\\RotateButton.tsx",["417"],"import React from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport '../../styles/buttons.css';\r\nimport Tooltip, { TooltipProps } from '@material-ui/core/Tooltip';\r\nimport { Theme, Typography, withStyles } from '@material-ui/core';\r\nimport { RootState } from '../../store/rootReducer';\r\nimport { setRotate } from '../../store/reducers/rotate';\r\nimport $ from \"jquery\";\r\n\r\nconst RotateTooltip = withStyles((theme: Theme) => ({\r\n  tooltip: {\r\n      backgroundColor: '#f5f5f9',\r\n      color: 'rgba(0, 0, 0, 0.87)',\r\n      maxWidth: 240,\r\n      fontSize: theme.typography.pxToRem(12),\r\n      border: '1px solid #dadde9',\r\n  },\r\n}))(Tooltip);\r\n\r\nconst setEnable = () => {\r\n  var $elem = $(\"#btn_rotate\").find(\".c2\");\r\n  if ($elem.hasClass(\"checked\")) {\r\n      $elem.removeClass(\"checked\");\r\n  } else {\r\n      $elem.addClass(\"checked\");\r\n  }\r\n}\r\n\r\nconst RotateButton = () => {\r\n  const isRotate = useSelector((state:RootState) => state.rotate.isRotate)\r\n  const dispatch = useDispatch();\r\n\r\n  const onToggleRotate = () => {\r\n    dispatch(setRotate(!isRotate));\r\n    setEnable();\r\n  }\r\n\r\n  return (\r\n    <div className=\"btn-group dropright\" role=\"group\">\r\n    <button type=\"button\" id=\"btn_rotate\" title=\"Rotate\" className=\"btn btn-neo btn-neo-vertical\"\r\n    onClick = {() => onToggleRotate()}>\r\n      <RotateTooltip placement=\"left\" title={\r\n          <React.Fragment>\r\n              <Typography color=\"inherit\">Rotate</Typography>\r\n              <em>{\"종이 또는 스마트 플레이트의 입력이 회전되어 반영될지 아닐지를 선택합니다.\"}</em>\r\n              <br></br>\r\n              <b>{\"TAB 가로쓰기/세로쓰기 전환\"}</b>\r\n          </React.Fragment>\r\n              }>\r\n          <div className=\"c2\">\r\n            <img src=\"../../icons/icon_portrait_n.png\" className=\"toggle-off normal-image\"></img>\r\n            <img src=\"../../icons/icon_portrait_p.png\" className=\"toggle-off hover-image\"></img>\r\n            <img src=\"../../icons/icon_landscape_n.png\" className=\"toggle-on normal-image\"></img>\r\n            <img src=\"../../icons/icon_landscape_p.png\" className=\"toggle-on hover-image\"></img>\r\n          </div>\r\n      </RotateTooltip>\r\n    </button>\r\n  </div>\r\n    );\r\n}\r\nexport default RotateButton;","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\buttons\\FitButton.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\navbar\\ColorButtons.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\buttons\\PenTypeButton.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\DefaultOption.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\Locales\\i18n.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PrintDataTypes.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\CanvasColorConverter.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\cloud_util_func.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\SurfaceMapper\\Calibration\\CalibrationButton.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NeoPdf\\FileBrowserButton.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PrintPdfButton.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\index.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\penstorage\\EventSystem.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\styles\\ThemeManager.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\pencomm\\PenManager.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\index.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NeoPdf\\NeoPdfManager.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\constants.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NeoPdf\\FileBrowser.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\SurfaceMapper\\Calibration\\CalibrationDialog.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\types\\index.js",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\noteserver\\PaperInfo.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\utils\\UtilsFunc.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\noteserver\\NoteserverClient.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PrintPdfMain.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\DataStructure\\index.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\renderer\\MixedPageView.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\DataStructure\\Enums.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\PenBasedRenderer.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\StorageRenderer.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\pencomm\\neosmartpen.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\RenderWorkerBase.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\SurfaceInfo.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NeoPdf\\NeoPdfDocument.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\penstorage\\index.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\UtilFunc.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\utils\\JsUtils.js",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\NcodeRasterizer.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\SurfaceSplitter.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\DataStructure\\NeoStroke.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\DataStructure\\NeoDot.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PagesForPrint.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\renderer\\pdf\\NeoPdfViewer.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\NcodeConstans.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\DrawCurves.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\DataStructure\\Structures.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NeoPdf\\NeoPdfPage.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\index.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\pencomm\\pencomm.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\NcodeFetcher.ts",["418","419"],"import { IPageSOBP } from \"../DataStructure/Structures\";\r\nimport * as Zlib from \"zlib\";\r\nimport { INcodeSurfaceDesc } from \"./SurfaceDataTypes\";\r\nimport { getNPaperInfo, isSamePage } from \"./SurfaceInfo\";\r\n\r\n\r\n/**\r\n * Class\r\n */\r\nexport default class NcodeFetcher {\r\n  private codeText: string = \"\";\r\n  private fetchPromise: Promise<string> = Promise.resolve(\"\");\r\n  pageInfo: IPageSOBP;\r\n\r\n  constructor(pageInfo: IPageSOBP) {\r\n    this.pageInfo = pageInfo;\r\n    this.fetchPromise = this.fetchNcodeData(pageInfo);\r\n    this.fetchPromise.then(txt => this.codeText = txt);\r\n  }\r\n\r\n\r\n  /**\r\n   * 코드 정보를 받아온다\r\n   * 코드 정보를 받아올 때 나중에는 x margin, y margin도 서버에서 받아오게 해야 한다 2020/11/26\r\n   * @param pageInfo\r\n   */\r\n  public getNcodeData = async (pageInfo: IPageSOBP): Promise<INcodeSurfaceDesc> => {\r\n    // glyph text를 받아 온다.\r\n    if (isSamePage(this.pageInfo, pageInfo)) {\r\n      console.log(\"reuse downloaded glyph data file\");\r\n      const txt = await this.fetchPromise;\r\n      this.codeText = txt;\r\n    }\r\n    else {\r\n      console.log(\"download glyph data file\");\r\n      const promise = this.fetchNcodeData(pageInfo);\r\n      this.fetchPromise = promise;\r\n      const txt = await this.fetchPromise;\r\n\r\n      this.pageInfo = pageInfo;\r\n      this.codeText = txt;\r\n    }\r\n\r\n    const result: INcodeSurfaceDesc = getNPaperInfo(pageInfo);\r\n    result.glyphData = this.codeText;\r\n\r\n    return result;\r\n  }\r\n\r\n\r\n  private fetchNcodeData = async (pageInfo: IPageSOBP): Promise<string> => {\r\n    return new Promise(async (resolve, reject) => {\r\n      // console.log(`[fetch] ${pageInfo.section}.${pageInfo.owner}.${pageInfo.book}.${pageInfo.page}`);\r\n      const url = this.getRawCodeDataUrl(pageInfo);\r\n\r\n      const blob = await fetch(url).then((r) => {\r\n\r\n        if (r.ok) {\r\n          return r.blob();\r\n        }\r\n\r\n        resolve(\"\");\r\n      });\r\n\r\n      function gunzipCallback(decompressed) {\r\n        // console.log(decompressed);\r\n        const txt = new TextDecoder(\"utf-8\").decode(decompressed);\r\n        resolve(txt);\r\n      }\r\n\r\n      if (blob != null) {\r\n        try {\r\n          const buffer = await blob.arrayBuffer();\r\n          const u8buf = new Uint8Array(buffer);\r\n          // eslint-disable-next-line\r\n          const gunzip = new Zlib.gunzip(u8buf, (err, result) => {\r\n            // console.error(err);\r\n            if (err) {\r\n              console.log(err);\r\n              resolve(\"\");\r\n            }\r\n            gunzipCallback(result);\r\n          });\r\n        } catch (e) {\r\n          resolve(\"\");\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n  private getAbsoluteURL = (base: string, relative: string): string => {\r\n    const stack = base.split(\"/\");\r\n    const parts = relative.split(\"/\");\r\n\r\n    stack.pop(); // remove current file name (or empty string)\r\n\r\n    // (omit if \"base\" is the current folder without trailing slash)\r\n    for (let i = 0; i < parts.length; i++) {\r\n      if (parts[i] === \".\") continue;\r\n      if (parts[i] === \"..\") stack.pop();\r\n      else stack.push(parts[i]);\r\n    }\r\n    return stack.join(\"/\");\r\n  }\r\n\r\n\r\n  private getRawCodeDataUrl = (pageInfo: IPageSOBP): string => {\r\n\r\n    const { section, owner, book, page } = pageInfo;\r\n\r\n    const ncode_idx = \"s\" + section + \"-o\" + owner + \"-b\" + book + \"-p\" + page;\r\n    const dir_name = \"s\" + section + \"-o\" + owner + \"-b\" + book;\r\n\r\n    const filename = \"./ncode_data/\" + dir_name + \"/\" + ncode_idx + \".code.gz\";\r\n    const doc_url = document.location.href;\r\n    const url = this.getAbsoluteURL(doc_url, filename);\r\n\r\n    return url;\r\n  }\r\n}","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\SurfaceMapper\\MappingItem.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\StorageRenderWorker.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PageForPrint.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\pencomm\\pencomm_const.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\NcodeSurfaceDataJson.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\pencomm\\pen_util_func.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\renderer\\pdf\\Page.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\pencomm\\pencomm_event.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\pencomm\\pencomm_enum.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\pencomm\\pencomm_base.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\index.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\PenBasedRenderWorker.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\DataTypes.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\CoordinateTanslater.ts",["420"],"import { IPoint } from \"../DataStructure/Structures\";\r\nimport * as Solve from \"./SolveTransform\";\r\nimport { TransformPoints, TransformPointPairs, TransformParameters, IMappingParams } from \"./DataTypes\";\r\nimport { MappingItem } from \"../SurfaceMapper/MappingItem\";\r\nimport { sprintf } from \"sprintf-js\";\r\n\r\nconst solveAffine = Solve.solveAffine;\r\nconst solveHomography = Solve.solveHomography;\r\nconst applyTransform = Solve.applyTransform;\r\n\r\n\r\n/** for debugging */\r\nlet _srcPts: TransformPoints = null;\r\nlet _dstPts: TransformPoints = null;\r\nlet _params: TransformParameters = null;\r\n\r\n/**\r\n * -----------------------------------------------------------------------------------\r\n * A. 우리는 다음과 같은 좌표계를 쓴다.\r\n *\r\n * 1) Ncode 좌표계\r\n * 2) PDF 좌표계\r\n * 3) Canvas 좌표계\r\n * 4) 화면 좌표계\r\n *\r\n *\r\n * 1) NU(Ncode Unit): 56/600 DPI, Ncode 좌표계는 펜에서 검출되는 좌표계를 기준으로 한다.\r\n *    - 600DPI에서 8 pixel 거리를 가지는 7개 glyph 가 하나의 Ncode\r\n *    - 1 NU = 7(glyphs) * 8(pixels) / 600 (DPI) = 56/600 Inch = 약 2.370666667 mm\r\n *\r\n *\r\n * 2) PU(Pdf Unit): 72 DPI, PDF 좌표계는 PdfJs.getViewport({scale:1})을 통해서 나오는 크기를 기준으로 하는 좌표계\r\n *    - PDF가 설계될 당시 1:1 scale의 좌표계는 72DPI\r\n *    - 1 PU = 1 pixel @ 72DPI = 1(pixel) / 72(DPI) = 1/72 Inch = 약 0.352777778 mm\r\n *\r\n * 3) CU(Canvas Unit): 96 DPI, HTML의 CSS에 의해 만들어진 좌표\r\n *    - 1 CU = 1pixel @ 96DPI = 1(pixel) / 96(DPI) = 1/96 Inch = 약 0.010416667 mm\r\n *\r\n * 4) SU(Screen Unit): 화면의 zoom과 offset에 따라 달라짐\r\n *    - zoom은 CU와 1:1일 때, 100%\r\n *    - fabric의 canvas.zoom, offset_x, offset_y에 의해 계산이 달라짐\r\n *\r\n * -----------------------------------------------------------------------------------\r\n * B. 1:1일 때, 계산 방법\r\n *\r\n * 1) NU to PU\r\n *    pu = nu * (56/600) / (1/72) = nu * 6.72\r\n *\r\n * 2) PU to CU\r\n *    cu = pu * (1/72) / (1/96) = pu * 4 / 3\r\n *\r\n * 3) NU to CU\r\n *    cu = nu * 6.72 * (4/3) = nu * 8.96\r\n *\r\n * 4) CU to SU(zoom, offset)\r\n *    su = zoom * CU + offset\r\n *\r\n * -----------------------------------------------------------------------------------\r\n * C. Transform matrix로 계산 방법\r\n *\r\n * 0) TransformMatrix를 구한다\r\n *    a) src points (Ncode Unit)의 4개 점 (affine에서는 3개 점)\r\n *    b) 각 src point에 해당하는 dst points (Pdf Unit)의 4개 점을 (affine에서는 3개 점)\r\n *    c) HomographyPoints (또는 AffinePoints)에 넣고\r\n *    d) solveHomography 또는 solveAffine으로 값을 구하고 TransformMatrix 타입의 리턴을\r\n *    e) 어딘가에 저장해 둔다. (예, transMtx)\r\n *\r\n * 1) pt in NU to pt' in PU\r\n *    pt' = applyTransform( pt, transMtx );\r\n *\r\n * 2) PU to CU\r\n *    - B-2)과 같다.\r\n *\r\n * 3) NU to CU\r\n *    - cu = applyTransform( nu, transMtx ) * 4 /3\r\n *\r\n * -----------------------------------------------------------------------------------\r\n * D. 코딩 시 변수 구별 원칙\r\n * 1) ptNu = pt at Ncode coordinate system\r\n * 2) ptPu = pt at Pdf Pixel coordinate system\r\n * 3) ptCu = pt at Fabric Canvas coordinate system\r\n * 4) ptSu = pt at screen coordinate system\r\n *\r\n *\r\n */\r\nexport default class CoordinateTanslater {\r\n  // private _params: TransformParameters = null;\r\n  // private _paramsReverse: TransformParameters = null;\r\n\r\n  private _mappingParams: IMappingParams = null;\r\n\r\n  constructor(arg: CoordinateTanslater | IMappingParams = null) {\r\n    if (arg) {\r\n      if (arg.hasOwnProperty(\"_mappingParams\")) {\r\n        const trans = arg as CoordinateTanslater;\r\n        const json = JSON.stringify(trans._mappingParams);\r\n        this._mappingParams = JSON.parse(json);\r\n        this.calcReverse();\r\n      }\r\n      else {\r\n        const params = arg as IMappingParams;\r\n        const json = JSON.stringify(params);\r\n        this._mappingParams = JSON.parse(json);\r\n        this.calcReverse();\r\n      }\r\n    }\r\n  }\r\n\r\n  get mappingParams() {\r\n    return this._mappingParams;\r\n  }\r\n\r\n  /**\r\n   * calculate transform parameters (reverse\r\n   * @param points\r\n   */\r\n  public calc = (mappingItem: MappingItem) => {\r\n    this._mappingParams = mappingItem._params;\r\n\r\n    const srcPts = mappingItem.srcPts;\r\n    const dstPts = mappingItem.dstPts;\r\n\r\n    _srcPts = mappingItem.srcPts;\r\n    _dstPts = mappingItem.dstPts;\r\n\r\n    /** src:NU, dst:PU */\r\n    const pts = {\r\n      src: { ...srcPts, },\r\n      dst: { ...dstPts, }\r\n    } as TransformPointPairs;\r\n\r\n    /** src:PU, dst:NU */\r\n    const ptsReverse = {\r\n      src: { ...dstPts, },\r\n      dst: { ...srcPts, }\r\n    } as TransformPointPairs;\r\n\r\n\r\n    if (srcPts.type === \"affine\") {\r\n      this._mappingParams.h = solveAffine(pts);  // NU -> PU\r\n      this._mappingParams.h_rev = solveAffine(ptsReverse);  // PU -> NU\r\n\r\n      _params = this._mappingParams.h;\r\n      return;\r\n    }\r\n    else if (srcPts.type === \"homography\") {\r\n      this._mappingParams.h = solveHomography(pts);  // NU -> PU\r\n      this._mappingParams.h_rev = solveHomography(ptsReverse);  // PU -> NU\r\n\r\n      _params = this._mappingParams.h;\r\n      return;\r\n    }\r\n\r\n    throw Error(\"CoordinateTanslater needs '3 or 4 pairs of points' to initiate class.\");\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   */\r\n  private calcReverse = () => {\r\n    // 아래는 임의의 숫자\r\n    const srcPts: TransformPoints = {\r\n      type: \"homography\",\r\n      unit: \"pu\",\r\n      pts: [\r\n        { x: 0, y: 0 },\r\n        { x: 100, y: 0 },\r\n        { x: 100, y: 100 },\r\n        { x: 0, y: 100 },\r\n      ]\r\n    };\r\n\r\n    // 정방향 파라메터로 역방향의 대상이 되는 점을 연산\r\n    const dstPts: TransformPoints = {\r\n      type: \"homography\",\r\n      unit: \"nu\",\r\n      pts: new Array(4),\r\n    };\r\n\r\n    for (let i = 0; i < 4; i++) {\r\n      const dstPt = this.NUtoPU(srcPts[i]);\r\n      dstPts[i] = dstPt;\r\n    }\r\n\r\n    /** src:PU, dst:NU */\r\n    const ptsReverse = {\r\n      src: { ...dstPts, },\r\n      dst: { ...srcPts, }\r\n    } as TransformPointPairs;\r\n\r\n    this._mappingParams.h_rev = solveHomography(ptsReverse);\r\n  }\r\n\r\n  public dump = (prefix: string) => {\r\n    const { a, b, c, d, e, f, g, h } = _params;\r\n    const sp = _srcPts.pts;\r\n    const dp = _dstPts.pts;\r\n\r\n    for (let i = 0; i < 4; i++) {\r\n      console.log(`[${prefix}] ${sprintf(\"(%6.1f, %6.1f) => (%5d, %5d)\", sp[i].x, sp[i].y, dp[i].x, dp[i].y)}`);\r\n\r\n    }\r\n\r\n\r\n    const first = sprintf(\"%7.1f %7.1f %7.1f\", a, b, c);\r\n    const second = sprintf(\"%7.2f %7.1f %7.1f\", d, e, f);\r\n    const thrid = sprintf(\"%7.1f %7.1f %7.1f\", g, h, 1);\r\n\r\n    console.log(`[${prefix}]`);\r\n    console.log(`[${prefix}]          | ${first} |`);\r\n    console.log(`[${prefix}]     H =  | ${second} |`);\r\n    console.log(`[${prefix}]          | ${thrid} |`);\r\n    console.log(`[${prefix}]`);\r\n  }\r\n\r\n  /**\r\n   * 계산된 변환행렬을 반환\r\n   *\r\n   * return {...this._params} 로 해야 하지 않을까?\r\n   * 이것 때문에 class가 메모리에 계속 남아 있으면 어떻게 하지?\r\n   */\r\n  public get params(): TransformParameters {\r\n    return this._mappingParams.h;\r\n  }\r\n\r\n  /**\r\n   * Ncode point to Pds point\r\n   * @param ptNu\r\n   */\r\n  public NUtoPU = (ptNu: IPoint): IPoint => {\r\n    const ptPu = applyTransform(ptNu, this._mappingParams.h);\r\n    return ptPu;\r\n  }\r\n\r\n  /**\r\n   * Pds point to Ncode point\r\n   * @param ptNu\r\n   */\r\n  public PUtoNU = (ptPu: IPoint): IPoint => {\r\n    const ptNu = applyTransform(ptPu, this._mappingParams.h_rev);\r\n    return ptNu;\r\n  }\r\n\r\n}\r\n","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\SolveTransform.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\EchelonMatrix.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\GaussianElimination.ts",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PageOrientation.tsx",[],"F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\PUIController.js",["421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452"],"import PenManager from \"../neosmartpen/pencomm/PenManager\";\r\nimport { IBrushType } from \"../neosmartpen/DataStructure\";\r\nimport React from 'react';\r\nimport $ from 'jquery';\r\n\r\n\r\n// 2020-12-09 현재 구현되어 있는 부분까지 PUI 완성(페이지 넘어가는 부분과 스트로크 찍히는 오류 수정할 것) \r\nexport default class PUIController {\r\n  constructor(url) {\r\n      /** @type {Promise} */\r\n      this._ready = this.getPuiXML(url);\r\n\r\n      /** @type {number} */\r\n      this._owner = 0;\r\n\r\n      /** @type {number} */\r\n      this._section = 0;\r\n\r\n      /** @type {number} */\r\n      this._book = 0;\r\n\r\n      /** @type {number} */\r\n      this._startPage = 0;\r\n\r\n      /** @type {Array.<number>} */\r\n      this._pages = [];\r\n\r\n      /** @type {Array.<{pageDelta:number, type:string, left:number, top:number, width:number, height:number, command:string}>} */\r\n      this._symbols = [];\r\n  }\r\n\r\n  get ready() {\r\n      return this._ready;\r\n  }\r\n\r\n  getPuiXML(url) {\r\n      var self = this;\r\n\r\n      return new Promise(function (resolve, reject) {\r\n          $.ajax({\r\n              type: \"GET\",\r\n              dataType: \"xml\",\r\n              url: url,\r\n              success: function (xml) {\r\n                console.log(xml);\r\n                  // page 정보\r\n                  var $bookXml = $(xml).find(\"book\");\r\n                  var section = parseInt($bookXml.find(\"section\").text());\r\n                  var owner = parseInt($bookXml.find(\"owner\").text());\r\n                  var book = parseInt($bookXml.find(\"code\").text());\r\n                  var startPage = parseInt($bookXml.find(\"start_page\").text());\r\n\r\n                  var $pagesXml = $(xml).find(\"pages\");\r\n                  var numPages = parseInt($pagesXml.attr(\"count\"));\r\n\r\n                  self._owner = owner;\r\n                  self._section = section;\r\n                  self._book = book;\r\n                  self._startPage = startPage;\r\n                  self._pages = [];\r\n\r\n                  var i;\r\n                  for (i = 0; i < numPages; i++) self._pages.push(startPage + i);\r\n\r\n                  // symbol 정보\r\n                  var xmlData = $(xml).find(\"symbol\");\r\n                  var listLength = xmlData.length;\r\n\r\n                  self._symbols = [];\r\n\r\n                  $(xmlData).each(function () {\r\n                      var pageDelta = parseInt($(this).attr(\"page\"));\r\n                      var type = $(this).attr(\"type\"); // 여기서는 Rectangle만 취급한다.\r\n                      var left = parseFloat($(this).attr(\"x\"));\r\n                      var top = parseFloat($(this).attr(\"y\"));\r\n                      var width = parseFloat($(this).attr(\"width\"));\r\n                      var height = parseFloat($(this).attr(\"height\"));\r\n\r\n                      var command = $(this).find(\"command\").attr(\"param\");\r\n\r\n                      var puiSymbol = {\r\n                          pageDelta,\r\n                          type,\r\n                          left,\r\n                          top,\r\n                          width,\r\n                          height,\r\n                          command,\r\n                      };\r\n                      self._symbols.push(puiSymbol);\r\n                  });\r\n\r\n                  self._symbols.sort(function (a, b) {\r\n                      var ax = a.top * 10000 + a.left;\r\n                      var bx = b.top * 10000 + b.left;\r\n\r\n                      return ax - bx;\r\n                  });\r\n\r\n                  resolve(true);\r\n              },\r\n              error: function (error) {\r\n                  resolve(false);\r\n              },\r\n              complete: function () {},\r\n          });\r\n      });\r\n  }\r\n\r\n  m(val) {\r\n      return Math.round(val * 10) / 10;\r\n  }\r\n\r\n  getCommand(owner, book, page, x, y) {\r\n      if (owner != this._owner || book != this._book) return null;\r\n      var pageDelta = page - this._startPage;\r\n      if (this._pages.findIndex((elem) => elem == page) < 0) return null;\r\n\r\n      var i;\r\n\r\n      for (i = 0; i < this._symbols.length; i++) {\r\n          var sym = this._symbols[i];\r\n\r\n          var x1 = sym.left / 72; // inch\r\n          var x2 = (sym.left + sym.width) / 72; // inch\r\n          var y1 = sym.top / 72;\r\n          var y2 = (sym.top + sym.height) / 72;\r\n\r\n          var xx = (x * 56) / 600;\r\n          var yy = (y * 56) / 600;\r\n\r\n          if (sym.pageDelta == pageDelta) {\r\n              if (x1 < xx && xx < x2 && y1 < yy && yy < y2) {\r\n                  var m = this.m;\r\n                  console.log(`(${m(xx)}, ${m(yy)}) in (${m(x1)}, ${m(y1)})-(${m(x2)}, ${m(y2)}) ==> ${sym.command}`);\r\n                  return sym.command;\r\n              }\r\n          }\r\n      }\r\n\r\n      return null;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {string} cmd\r\n   */\r\n  static executeCommand(cmd) {\r\n      switch (cmd) {\r\n          case \"strokesize_1\":\r\n            PenManager.getInstance().setThickness(1);\r\n              break;\r\n\r\n          case \"strokesize_2\":\r\n            PenManager.getInstance().setThickness(2);\r\n              break;\r\n\r\n          case \"strokesize_3\":\r\n            PenManager.getInstance().setThickness(3);\r\n              break;\r\n\r\n          case \"pen\":\r\n            PenManager.getInstance().setPenRendererType(IBrushType.PEN);\r\n              break;\r\n\r\n          case \"highlighter\":\r\n            PenManager.getInstance().setPenRendererType(IBrushType.MARKER);\r\n              break;\r\n\r\n          case \"erase_brush\":\r\n            PenManager.getInstance().setPenRendererType(IBrushType.ERASER);\r\n              break;\r\n\r\n          case \"#FFE5E5E5\":\r\n            PenManager.getInstance().setColor(5)\r\n              break;\r\n\r\n          case \"#FF000000\":\r\n            PenManager.getInstance().setColor(4)\r\n              break;\r\n\r\n          case \"#FFAAAAAA\":\r\n            PenManager.getInstance().setColor(0)\r\n              break;\r\n\r\n          case \"#FFFFD001\":\r\n            PenManager.getInstance().setColor(2)\r\n              break;\r\n\r\n          case \"#FFFF6500\":\r\n            PenManager.getInstance().setColor(6)\r\n              break;\r\n\r\n          case \"#FFFF0200\":\r\n            PenManager.getInstance().setColor(1)\r\n              break;\r\n\r\n          case \"#FF00ABEB\":\r\n            PenManager.getInstance().setColor(8)\r\n              break;\r\n\r\n          case \"#FF3CDD00\":\r\n            PenManager.getInstance().setColor(7)\r\n              break;\r\n\r\n          case \"#FF6C00E2\":\r\n            PenManager.getInstance().setColor(9)\r\n              break;\r\n\r\n          case \"#FF012EE2\":\r\n            PenManager.getInstance().setColor(3)\r\n              break;\r\n\r\n          case \"pointer\":\r\n              break;\r\n\r\n          case \"erase_all\":\r\n              break;\r\n\r\n          case \"menu_grida\":\r\n              break;\r\n\r\n          case \"full_screen\":\r\n              break;\r\n\r\n          case \"zoom_in\":\r\n              break;\r\n\r\n          case \"zoom_out\":\r\n              break;\r\n\r\n          case \"previous\":\r\n              break;\r\n\r\n          case \"next\":\r\n              break;\r\n      }\r\n  }\r\n}\r\n","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\components\\KeyBoardShortCut.js",["453","454"],"import PenManager from \"../neosmartpen/pencomm/PenManager\";\r\nimport { IBrushType } from \"../neosmartpen/DataStructure\";\r\nimport $ from 'jquery';\r\n\r\n// 2020-12-09 현재 구현되어 있는 기능까지 단축키 완성(추가 구현된 기능 넣고 다른 버튼들 단축키 지정하기)\r\n\r\nexport default function KeyBoardShortCut(evt) {\r\n\r\n    // console.log(\"webViewerKeyDown\");\r\n    let handled = false,\r\n        ensureViewerFocused = false;\r\n    const cmd = (evt.ctrlKey ? 1 : 0) | (evt.altKey ? 2 : 0) | (evt.shiftKey ? 4 : 0) | (evt.metaKey ? 8 : 0);\r\n\r\n    console.log(`keyCode = ${evt.keyCode}`);\r\n\r\n    if (cmd == 0) {\r\n        switch (true) {\r\n            case 0x30 <= evt.keyCode && evt.keyCode <= 0x39: // '1'\r\n                {\r\n                    var color_num = evt.keyCode - 0x30;\r\n                    PenManager.getInstance().setColor(color_num);\r\n                    // setPenColor(color_num);\r\n                    // toggleColorRadioButton( color_num );\r\n                    // console.log(`                ==> setColor(${color_num})`);\r\n                    // var $elem = $(`.color_${color_num}`);\r\n                    // processColorRadioButton(undefined, $elem);\r\n                    handled = true;\r\n                }\r\n\r\n                break;\r\n\r\n            case 81 == evt.keyCode: // q\r\n                // setPenType(PenType.PEN);\r\n                PenManager.getInstance().setPenRendererType(IBrushType.PEN);\r\n                handled = true;\r\n                break;\r\n\r\n            case 87 == evt.keyCode: // w\r\n                // setPenType(PenType.MARKER);\r\n                PenManager.getInstance().setPenRendererType(IBrushType.MARKER);\r\n                handled = true;\r\n                break;\r\n\r\n            case 69 == evt.keyCode: // e\r\n                // setPenType(PenType.ERASER);\r\n                PenManager.getInstance().setPenRendererType(IBrushType.ERASER);\r\n                handled = true;\r\n                break;\r\n\r\n            case 82 == evt.keyCode: // r\r\n                break;\r\n\r\n            case 84 == evt.keyCode: // t\r\n                break;\r\n\r\n            case 65 == evt.keyCode: // a\r\n                // setPenThickness(1);\r\n                PenManager.getInstance().setThickness(1);\r\n                handled = true;\r\n                break;\r\n\r\n            case 83 == evt.keyCode: // s\r\n                // setPenThickness(2);\r\n                PenManager.getInstance().setThickness(2);\r\n                handled = true;\r\n                break;\r\n\r\n            case 68 == evt.keyCode: // d\r\n                // setPenThickness(3);\r\n                PenManager.getInstance().setThickness(3);\r\n                handled = true;\r\n                break;\r\n\r\n            case 70 == evt.keyCode: // f\r\n                // setPenThickness(4);\r\n                // handled = true;\r\n                break;\r\n\r\n            case 71 == evt.keyCode: // g\r\n                // setPenThickness(5);\r\n                // handled = true;\r\n                break;\r\n\r\n            case 90 == evt.keyCode: // z\r\n                // onBtn_fitWidth();\r\n                // handled = true;\r\n                break;\r\n\r\n            case 88 == evt.keyCode: // x\r\n                // onBtn_fitHeight();\r\n                // handled = true;\r\n                break;\r\n\r\n            case 67 == evt.keyCode: // c\r\n                // onBtn_fitCanvas();\r\n                // handled = true;\r\n                break;\r\n\r\n            case 86 == evt.keyCode: // v\r\n                // onBtn_fitPaper();\r\n                // handled = true;\r\n                break;\r\n\r\n            case 66 == evt.keyCode: // b\r\n                break;\r\n\r\n            case 9 == evt.keyCode: // <TAB>\r\n                // onRotateButton();\r\n                // handled = true;\r\n                break;\r\n\r\n\r\n            case 80 == evt.keyCode: // P\r\n                // toggleAllStrokesVisible();\r\n                // handled = true;\r\n                break;\r\n\r\n            case 33 == evt.keyCode: // page up\r\n                // onPrevPage();\r\n                // handled = true;\r\n                break;\r\n            case 34 == evt.keyCode: // page down\r\n                // onNextPage();\r\n                // handled = true;\r\n                break;\r\n\r\n        }\r\n    } else if (cmd == 4) {\r\n        switch (evt.keyCode) {\r\n            case 0x31:\r\n            case 0x32:\r\n            case 0x33:\r\n            case 0x34:\r\n            case 0x35:\r\n            case 0x36:\r\n            case 0x37:\r\n            case 0x38:\r\n            case 0x39:\r\n                // togglePenStrokeVisible(evt.keyCode - 0x30);\r\n                // handled = true;\r\n                break;\r\n\r\n            case 0x30:\r\n                // toggleAllStrokesVisible();\r\n                // handled = true;\r\n                break;\r\n        }\r\n    } else if (cmd == 1) {\r\n        switch (evt.keyCode) {\r\n            case 90: // ctrl-Z\r\n                // onBtnUndo();\r\n                // handled = true;\r\n                break;\r\n\r\n            case 89: // ctrl-Z\r\n                // onBtnRedo();\r\n                // handled = true;\r\n                break;\r\n        }\r\n    }\r\n\r\n    if (handled) {\r\n        evt.preventDefault();\r\n    }\r\n}\r\n","F:\\__Work\\dotProject\\_trunk\\WWW\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\Modal\\PrintOptionDialog.js",["455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477"],"import React, {useState} from \"react\";\r\n// import { Container, Modal, Row, Col, Button } from \"react-bootstrap\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Radio } from '@material-ui/core';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { Button, Box, Input } from \"@material-ui/core\";\r\n\r\nimport { IPrintingReport, IPrintOption, MediaSize, PageInfo } from '../PrintDataTypes';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport $ from 'jquery';\r\n// import { CheckBox } from \"@material-ui/icons\";\r\nimport CheckBox from '@material-ui/core/Checkbox';\r\n\r\n// 2020-12-10 printDialog까지 완성 (인쇄하는 부분으로 값들 전달하는 것 완성시키기)\r\n\r\nconst displayOption = () => {\r\n  var subOption = document.getElementById('subOption');\r\n  if (subOption.style.display === 'none') {\r\n    subOption.style.display = 'block';\r\n  } else {\r\n    subOption.style.display = 'none';\r\n  }\r\n}\r\n\r\nvar _ncodePrint = $(\"#ncodePaper\").prop(\"defaultChecked\");\r\nvar _bluePrint = $(\"#bluePrint\").prop(\"defaultChecked\");\r\nvar _calibrationMark = $(\"#calibrationMark\").prop(\"defaultChecked\");\r\nvar _oldCalibrationMark = $(\"#calibrationMark\").prop(\"defaultChecked\");\r\nvar _printNcode = $(\"#printNcode\").prop(\"defaultChecked\");\r\nvar _ni = null;\r\nvar _ni_new = null;\r\nvar arrCallback = [];\r\n\r\nfunction on(select_target, message, _func, bindObj) {\r\n  // if (typeof obj == \"object\") {\r\n  //     console.log(\"!!\");\r\n  // }\r\n  $(select_target).on(message, _func.bind(bindObj));\r\n\r\n  // 나중에 dump할 것을 위해서 아래와 같이 배열에 추가\r\n  var callbackItem = getCallbackItem(\"jQuery\", select_target, message, _func, bindObj);\r\n  arrCallback.push(callbackItem);\r\n  // this.dumpAll();\r\n}\r\n\r\nfunction getCallbackItem(receiver, select_target, message, _func, obj) {\r\n  var obj_name = \"window\";\r\n  if (obj) {\r\n      if (obj.name) {\r\n          obj_name = obj.name;\r\n      } else if (obj.constructor) {\r\n          obj_name = obj.constructor.name;\r\n      }\r\n  }\r\n\r\n  return {\r\n      receiver: receiver,\r\n      target: select_target,\r\n      msg: message,\r\n      callback: _func.name,\r\n      class: obj_name,\r\n      assignedAt: getFunctionName(),\r\n  };\r\n};\r\n\r\nfunction getFunctionName() {\r\n  // https://kjwsx23.tistory.com/285/\r\n  let stack_msg = new Error().stack || \"\";\r\n  var stack = stack_msg.split(\"\\n\").map(function (line) {\r\n      return line.trim();\r\n  });\r\n  if (stack[0].indexOf(\"Error\") > -1) {\r\n      stack.splice(0, 1);\r\n  }\r\n\r\n  return stack[3];\r\n}\r\n\r\nwindow.onload = function() {\r\n  on(\"#nomalPaper\", \"change\", onNormalPaper, window);\r\n  on(\"#ncodePaper\", \"change\", onNcodePaper, window);\r\n  on(\"#printNcode\", \"change\", onChangePrintNcode, window);\r\n  on(\"#dropDownQualityState\", \"change\", onQualitySelectChanged, window);\r\n}\r\n\r\nfunction onNormalPaper() {\r\n  $(\"#nomalPaper\").removeAttr('defaultChecked');\r\n  if ($(\"#nomalPaper\").is(\":checked\") === true) {\r\n    $(\"#nomalPaper\").prop(\"checked\", true);\r\n  } else {\r\n    $(\"#nomalPaper\").prop(\"checked\", false);\r\n  }\r\n  var isForSmartpen = $(\"#nomalPaper\").prop(\"checked\");\r\n  console.log(isForSmartpen);\r\n  onModeChange(isForSmartpen);\r\n}\r\n\r\nfunction onNcodePaper() {\r\n  $(\"#nomalPaper\").removeAttr('defaultChecked');\r\n  if ($(\"#ncodePaper\").is(\":checked\") === true) {\r\n    $(\"#nomalPaper\").prop(\"checked\", false);\r\n  } else {\r\n    $(\"#nomalPaper\").prop(\"checked\", true);\r\n  }\r\n  var isForBlueprintOnly = $(\"#ncodePaper\").prop(\"checked\");\r\n  console.log(isForBlueprintOnly);\r\n  onModeChange(!isForBlueprintOnly);\r\n}\r\n\r\nfunction onQualitySelectChanged() {\r\n  var value = $(\"#dropDownQualityState\").val();\r\n  var print_ncode = $(\"#printNcode\").prop(\"checked\");\r\n\r\n  if (print_ncode) value = 4;\r\n  setPrintQuality(value);\r\n}\r\n\r\nfunction onModeChange(isForSmartpen) {\r\n  var code_txt2 = \"\";\r\n  if (isForSmartpen) {\r\n      // pop previous values\r\n      $(\"#bluePrint\").prop(\"defaultChecked\", _bluePrint);\r\n      $(\"#calibrationMark\").prop(\"defaultChecked\", _calibrationMark);\r\n      $(\"#printNcode\").prop(\"defaultChecked\", true);\r\n\r\n      // $(\"#code_density\").val(_code_density);\r\n\r\n      // ncode printing\r\n      $(\"#nomalPaper\").prop(\"checked\", true);\r\n      $(\"#ncodePaper\").prop(\"checked\", false);\r\n\r\n      $(\"#printNcode\").prop(\"disabled\", true);\r\n      $(\"#codeDensity\").prop(\"disabled\", false);\r\n      $(\"#calibrationMark\").prop(\"disabled\", false);\r\n      // $(\"#btn_blueprint\").prop(\"disabled\", false);\r\n\r\n      /** code issue area */\r\n      $(\"#forceNewCode\").prop(\"disabled\", false);\r\n      // if (_ni) {\r\n      //     $(\"#forceSameCode\").prop(\"disabled\", false);\r\n      //     code_txt2 = `(${_ni.section}.${_ni.owner}.${_ni.book}.${_ni.page} ~ ${_ni.page + _ni.num_pages - 1})`;\r\n      //     $(\"#reuseCodeRange\").text(code_txt2);\r\n      // } else $(\"#forceSameCode\").prop(\"disabled\", true);\r\n\r\n      // var code_txt1 = `(${_ni_new.section}.${_ni_new.owner}.${_ni_new.book}.${_ni_new.page} ~ ${\r\n      //     _ni_new.page + _ni_new.num_pages - 1\r\n      // })`;\r\n      // $(\"#newCodeRange\").text(code_txt1);\r\n\r\n      onChangePrintNcode();\r\n  } else {\r\n      // push previous values\r\n      _bluePrint = $(\"#bluePrint\").prop(\"defaultChecked\");\r\n      _oldCalibrationMark = $(\"#calibrationMark\").prop(\"defaultChecked\");\r\n      _printNcode = $(\"#printNcode\").prop(\"defaultChecked\");\r\n\r\n      // _code_density = parseInt($(\"#code_density\").val());\r\n\r\n      // Blueprint only\r\n      $(\"#nomalPaper\").prop(\"checked\", false);\r\n      $(\"#ncodePaper\").prop(\"checked\", true);\r\n\r\n      $(\"#printNcode\").prop(\"disabled\", true);\r\n      $(\"#printNcode\").prop(\"checked\", false);\r\n\r\n      $(\"#calibrationMark\").prop(\"disabled\", true);\r\n      $(\"#calibrationMark\").prop(\"checked\", true);\r\n\r\n      $(\"#codeDensity\").prop(\"disabled\", true);\r\n      // $(\"#btn_blueprint\").prop(\"disabled\", true);\r\n\r\n      $(\"#forceNewCode\").prop(\"disabled\", true);\r\n      $(\"#forceSameCode\").prop(\"disabled\", true);\r\n\r\n      $(\"#newCodeRange\").text(\"\");\r\n      $(\"#reuseCodeRange\").text(\"\");\r\n  }\r\n}\r\n\r\nfunction onChangePrintNcode() {\r\n  var print_ncode = $(\"#printNcode\").prop(\"defaultChecked\");\r\n\r\n  if (print_ncode) {\r\n      $(\"#calibrationMark\").prop(\"defaultChecked\", _oldCalibrationMark);\r\n      $(\"#calibrationMark\").prop(\"disabled\", false);\r\n\r\n      $(\"#codeDensity\").prop(\"disabled\", false);\r\n\r\n      setPrintQuality(4);\r\n  } else {\r\n      _oldCalibrationMark = $(\"#calibrationMark\").prop(\"defaultChecked\");\r\n      $(\"#calibrationMark\").prop(\"defaultChecked\", true);\r\n      $(\"#calibrationMark\").prop(\"disabled\", true);\r\n      $(\"#codeDensity\").prop(\"disabled\", true);\r\n  }\r\n}\r\n\r\nfunction setPrintQuality(value) {\r\n  var index = parseInt(value);\r\n  $(\"#dropDownQualityState\").val(index);\r\n  var dpi = resolutionIndexToDpiNumber(index);\r\n\r\n  $(\"#qualityDpiText\").text(`${dpi} DPI`);\r\n}\r\n\r\nfunction resolutionIndexToDpiNumber(index) {\r\n  var val = 300;\r\n  switch (index) {\r\n      case 1:\r\n          val = 150;\r\n          break;\r\n\r\n      case 2:\r\n          val = 200;\r\n          break;\r\n\r\n      case 3:\r\n          val = 300;\r\n          break;\r\n\r\n      case 4:\r\n          val = 600;\r\n          break;\r\n\r\n      default:\r\n          val = 300;\r\n          break;\r\n  }\r\n\r\n  return val;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    // display: 'flex',\r\n    // flexDirection: 'column',\r\n    margin: 'auto',\r\n    width: 'fit-content',\r\n    \"&&&:before\": {\r\n      borderBottom: \"none\"\r\n    },\r\n    \"&&:after\": {\r\n      borderBottom: \"none\"\r\n    }\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    minWidth: 120,\r\n  },\r\n  formControlLabel: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\nexport default function PrintOptionDialog () {\r\n  \r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [checked, setChecked] = React.useState(true);\r\n  const [IPrintOption, setIPrintOption] = useState({\r\n    codeDensity: 2,\r\n    printDpi: 600,\r\n    pdfRenderingDpi: 300,\r\n    putCalibrationMark: true,\r\n    printNcode: true,\r\n    dotsInACell: 7,\r\n    mediaSize: MediaSize.A4,\r\n    direction: \"auto\",\r\n    colorMode: 1,\r\n    scaleUpToMedia: true,\r\n    scaleDownToMedia: true,\r\n    targetPages: \"\",\r\n    pagesPerSheet: 1,\r\n    pageInfo: PageInfo.first_page,\r\n    debugMode: 0,\r\n    hasToPutNcode: true\r\n  })\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleClose = (e) => {\r\n    setIPrintOption({\r\n      ...IPrintOption,\r\n      codeDensity: 2,\r\n      printDpi: 600,\r\n      pdfRenderingDpi: 300,\r\n      putCalibrationMark: true,\r\n      printNcode: true,\r\n      dotsInACell: 7,\r\n      mediaSize: MediaSize.A4,\r\n      direction: \"auto\",\r\n      colorMode: 1,\r\n      scaleUpToMedia: true,\r\n      scaleDownToMedia: true,\r\n      targetPages: \"\",\r\n      pagesPerSheet: 1,\r\n      pageInfo: PageInfo.first_page,\r\n      debugMode: 0,\r\n      hasToPutNcode: true\r\n    })\r\n    setOpen(false);\r\n  }\r\n\r\n  const handleSave = (e) => {\r\n    //저장 로직 추가\r\n    setIPrintOption({\r\n      ...IPrintOption,\r\n      targetPages : $('#targetPages').val(),\r\n      [e.target.name] : e.target.value\r\n    });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setIPrintOption({\r\n      ...IPrintOption,\r\n      [e.target.name] : e.target.value\r\n    });\r\n\r\n    console.log(e.target.value);\r\n    // console.log(MediaSize);\r\n    // console.log(MediaSize.A4);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        <Box fontSize={16} fontWeight=\"fontWeightBold\" >\r\n          인쇄 옵션 설정\r\n        </Box>\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" style={{boxShadow: \"5px 5px\"}}>\r\n        <DialogTitle id=\"form-dialog-title\" style={{ float: \"left\", width: \"500px\"}}>\r\n          <div style={{float: \"left\", marginRight: \"10px\"}}>인쇄 설정</div>\r\n          <div style={{ fontSize: \"10px\", color: \"red\"}}>\r\n            *원활한 필기 인식을 위해 출력물의 색상이 실제와 다를 수 있습니다.\r\n          </div>\r\n        </DialogTitle>\r\n        <hr></hr>\r\n        <DialogContent>\r\n          <div>\r\n            <div style={{fontWeight: \"bold\"}}>\r\n              인쇄 방법\r\n            </div>\r\n            <br></br>\r\n            <p style={{float: \"left\", marginRight: \"40px\"}}>\r\n              <input id=\"nomalPaper\" type=\"checkbox\" defaultChecked onClick={onNormalPaper} style={{display: \"inline\", marginRight: \"10px\"}}></input>\r\n              <label>일반 용지에 인쇄</label>\r\n            </p>\r\n            <p>\r\n              <input id=\"ncodePaper\" type=\"checkbox\" onClick={onNcodePaper} style={{display: \"inline\", marginRight: \"10px\"}}></input>\r\n              <label>Ncode A4에 인쇄</label>\r\n            </p>\r\n          </div>  \r\n          {/* </form> */}\r\n          <Button onClick={displayOption} style={{border: \"1px solid black\", width: \"450px\"}}>고급 설정</Button>\r\n          \r\n          <div id=\"subOption\" style={{marginTop: \"20px\", display: \"none\"}}>\r\n            <p style={{float: \"left\", marginRight: \"40px\"}}>\r\n              <input id=\"calibrationMark\" type=\"checkbox\" defaultChecked style={{display: \"inline\", marginRight: \"10px\"}}></input>\r\n              <label>위치 보정용 마크 인쇄</label>\r\n            </p>\r\n            {/* 색변환(블루프린트) */}\r\n            <input id=\"bluePrint\" style={{display: \"none\"}}></input> \r\n            {/* Ncode 인쇄 여부 */}\r\n            <input id=\"printNcode\" style={{display: \"none\"}} disabled></input>\r\n            <p>\r\n              <span style={{marginRight: \"20px\"}}>코드 인쇄 농도</span>\r\n              <select id=\"codeDensity\">\r\n                <option>연하게</option>\r\n                <option>보통</option>\r\n                <option>진하게</option>\r\n              </select>\r\n            </p>\r\n\r\n            <div style={{fontWeight: \"bold\", clear: \"both\"}}>\r\n                Ncode 발행\r\n              </div>\r\n              <br></br>\r\n              <p style={{float: \"left\", marginRight: \"40px\"}}>\r\n                <input id=\"forceNewCode\" type=\"radio\" defaultChecked style={{marginRight: \"10px\"}} />\r\n                <label>새로운 페이지로 인쇄</label>\r\n                <small><span id=\"newCodeRange\"></span></small>\r\n              </p>\r\n              <p style={{clear: \"both\", marginRight: \"40px\"}}>\r\n                <input id=\"forceSameCode\" type=\"radio\" style={{marginRight: \"10px\"}} />\r\n                <label>기존 인쇄물과 같은 페이지로 인쇄</label>\r\n                <small><span id=\"reuseCodeRange\"></span></small>\r\n              </p>\r\n\r\n              <div>\r\n                <span style={{marginRight: \"20px\"}}>인쇄 품질</span>\r\n                <select id=\"dropDownQualityState\">\r\n                  <option>품질 우선</option>\r\n                  <option>보통 품질</option>\r\n                </select>\r\n                <span id=\"qualityDpiText\"></span>\r\n              </div>\r\n              <br></br>\r\n              <div>\r\n                <span style={{marginRight: \"20px\"}}>면당 여러 페이지 인쇄</span>\r\n                <select style={{width: \"50px\"}}>\r\n                  <option>2</option>\r\n                  <option>4</option>\r\n                  <option>6</option>\r\n                  <option>8</option>\r\n                </select>\r\n              </div>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleSave} color=\"primary\">\r\n            Save\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\n",{"ruleId":"478","severity":1,"message":"479","line":108,"column":3,"nodeType":"480","messageId":"481","endLine":108,"endColumn":52,"fix":"482"},{"ruleId":"478","severity":1,"message":"479","line":99,"column":5,"nodeType":"480","messageId":"481","endLine":99,"endColumn":46,"fix":"483"},{"ruleId":"478","severity":1,"message":"479","line":21,"column":3,"nodeType":"480","messageId":"481","endLine":21,"endColumn":44,"fix":"484"},{"ruleId":"485","severity":1,"message":"486","line":11,"column":3,"nodeType":"487","messageId":"488","endLine":11,"endColumn":33,"fix":"489"},{"ruleId":"490","severity":1,"message":"491","line":52,"column":24,"nodeType":"492","messageId":"493","endLine":52,"endColumn":29},{"ruleId":"494","severity":1,"message":"495","line":94,"column":15,"nodeType":"496","messageId":"497","endLine":94,"endColumn":29},{"ruleId":"478","severity":1,"message":"479","line":37,"column":7,"nodeType":"480","messageId":"481","endLine":37,"endColumn":23,"fix":"498"},{"ruleId":"478","severity":1,"message":"479","line":47,"column":19,"nodeType":"480","messageId":"481","endLine":47,"endColumn":54,"fix":"499"},{"ruleId":"478","severity":1,"message":"479","line":48,"column":19,"nodeType":"480","messageId":"481","endLine":48,"endColumn":75,"fix":"500"},{"ruleId":"478","severity":1,"message":"479","line":49,"column":19,"nodeType":"480","messageId":"481","endLine":49,"endColumn":71,"fix":"501"},{"ruleId":"478","severity":1,"message":"479","line":50,"column":19,"nodeType":"480","messageId":"481","endLine":50,"endColumn":69,"fix":"502"},{"ruleId":"478","severity":1,"message":"479","line":51,"column":19,"nodeType":"480","messageId":"481","endLine":51,"endColumn":80,"fix":"503"},{"ruleId":"478","severity":1,"message":"479","line":53,"column":19,"nodeType":"480","messageId":"481","endLine":53,"endColumn":56,"fix":"504"},{"ruleId":"478","severity":1,"message":"479","line":54,"column":19,"nodeType":"480","messageId":"481","endLine":54,"endColumn":68,"fix":"505"},{"ruleId":"478","severity":1,"message":"479","line":62,"column":19,"nodeType":"480","messageId":"481","endLine":62,"endColumn":25,"fix":"506"},{"ruleId":"478","severity":1,"message":"479","line":66,"column":19,"nodeType":"480","messageId":"481","endLine":66,"endColumn":55,"fix":"507"},{"ruleId":"478","severity":1,"message":"479","line":67,"column":19,"nodeType":"480","messageId":"481","endLine":67,"endColumn":51,"fix":"508"},{"ruleId":"478","severity":1,"message":"479","line":72,"column":23,"nodeType":"480","messageId":"481","endLine":72,"endColumn":70,"fix":"509"},{"ruleId":"478","severity":1,"message":"479","line":73,"column":23,"nodeType":"480","messageId":"481","endLine":73,"endColumn":55,"fix":"510"},{"ruleId":"478","severity":1,"message":"479","line":74,"column":23,"nodeType":"480","messageId":"481","endLine":74,"endColumn":64,"fix":"511"},{"ruleId":"478","severity":1,"message":"479","line":75,"column":23,"nodeType":"480","messageId":"481","endLine":75,"endColumn":63,"fix":"512"},{"ruleId":"478","severity":1,"message":"479","line":76,"column":23,"nodeType":"480","messageId":"481","endLine":76,"endColumn":69,"fix":"513"},{"ruleId":"478","severity":1,"message":"479","line":77,"column":23,"nodeType":"480","messageId":"481","endLine":77,"endColumn":71,"fix":"514"},{"ruleId":"478","severity":1,"message":"479","line":79,"column":23,"nodeType":"480","messageId":"481","endLine":79,"endColumn":75,"fix":"515"},{"ruleId":"478","severity":1,"message":"479","line":81,"column":23,"nodeType":"480","messageId":"481","endLine":89,"endColumn":25,"fix":"516"},{"ruleId":"478","severity":1,"message":"479","line":94,"column":23,"nodeType":"480","messageId":"481","endLine":94,"endColumn":55,"fix":"517"},{"ruleId":"478","severity":1,"message":"479","line":95,"column":23,"nodeType":"480","messageId":"481","endLine":95,"endColumn":55,"fix":"518"},{"ruleId":"519","severity":1,"message":"520","line":105,"column":37,"nodeType":"521","messageId":"522","endLine":105,"endColumn":39},{"ruleId":"478","severity":1,"message":"479","line":116,"column":7,"nodeType":"480","messageId":"481","endLine":116,"endColumn":46,"fix":"523"},{"ruleId":"478","severity":1,"message":"479","line":119,"column":7,"nodeType":"480","messageId":"481","endLine":119,"endColumn":13,"fix":"524"},{"ruleId":"478","severity":1,"message":"479","line":122,"column":11,"nodeType":"480","messageId":"481","endLine":122,"endColumn":38,"fix":"525"},{"ruleId":"478","severity":1,"message":"479","line":124,"column":11,"nodeType":"480","messageId":"481","endLine":124,"endColumn":34,"fix":"526"},{"ruleId":"478","severity":1,"message":"479","line":125,"column":11,"nodeType":"480","messageId":"481","endLine":125,"endColumn":48,"fix":"527"},{"ruleId":"478","severity":1,"message":"479","line":126,"column":11,"nodeType":"480","messageId":"481","endLine":126,"endColumn":33,"fix":"528"},{"ruleId":"478","severity":1,"message":"479","line":127,"column":11,"nodeType":"480","messageId":"481","endLine":127,"endColumn":48,"fix":"529"},{"ruleId":"478","severity":1,"message":"479","line":129,"column":11,"nodeType":"480","messageId":"481","endLine":129,"endColumn":35,"fix":"530"},{"ruleId":"478","severity":1,"message":"479","line":130,"column":11,"nodeType":"480","messageId":"481","endLine":130,"endColumn":35,"fix":"531"},{"ruleId":"478","severity":1,"message":"479","line":134,"column":19,"nodeType":"480","messageId":"481","endLine":134,"endColumn":34,"fix":"532"},{"ruleId":"533","severity":1,"message":"534","line":11,"column":9,"nodeType":"492","messageId":"535","endLine":11,"endColumn":28},{"ruleId":"478","severity":1,"message":"479","line":20,"column":21,"nodeType":"480","messageId":"481","endLine":20,"endColumn":56,"fix":"536"},{"ruleId":"478","severity":1,"message":"479","line":34,"column":3,"nodeType":"480","messageId":"481","endLine":34,"endColumn":56,"fix":"537"},{"ruleId":"478","severity":1,"message":"479","line":42,"column":1,"nodeType":"480","messageId":"481","endLine":42,"endColumn":59,"fix":"538"},{"ruleId":"478","severity":1,"message":"479","line":43,"column":1,"nodeType":"480","messageId":"481","endLine":43,"endColumn":57,"fix":"539"},{"ruleId":"478","severity":1,"message":"479","line":44,"column":1,"nodeType":"480","messageId":"481","endLine":44,"endColumn":69,"fix":"540"},{"ruleId":"478","severity":1,"message":"479","line":45,"column":1,"nodeType":"480","messageId":"481","endLine":45,"endColumn":72,"fix":"541"},{"ruleId":"478","severity":1,"message":"479","line":46,"column":1,"nodeType":"480","messageId":"481","endLine":46,"endColumn":59,"fix":"542"},{"ruleId":"478","severity":1,"message":"479","line":47,"column":1,"nodeType":"480","messageId":"481","endLine":47,"endColumn":16,"fix":"543"},{"ruleId":"478","severity":1,"message":"479","line":48,"column":1,"nodeType":"480","messageId":"481","endLine":48,"endColumn":20,"fix":"544"},{"ruleId":"478","severity":1,"message":"479","line":49,"column":1,"nodeType":"480","messageId":"481","endLine":49,"endColumn":22,"fix":"545"},{"ruleId":"478","severity":1,"message":"479","line":58,"column":3,"nodeType":"480","messageId":"481","endLine":58,"endColumn":88,"fix":"546"},{"ruleId":"478","severity":1,"message":"479","line":64,"column":3,"nodeType":"480","messageId":"481","endLine":64,"endColumn":27,"fix":"547"},{"ruleId":"548","severity":1,"message":"549","line":81,"column":2,"nodeType":"550","messageId":"522","endLine":81,"endColumn":3,"fix":"551"},{"ruleId":"533","severity":1,"message":"552","line":85,"column":7,"nodeType":"492","messageId":"535","endLine":85,"endColumn":16,"fix":"553"},{"ruleId":"478","severity":1,"message":"479","line":86,"column":3,"nodeType":"480","messageId":"481","endLine":88,"endColumn":6,"fix":"554"},{"ruleId":"478","severity":1,"message":"479","line":110,"column":3,"nodeType":"480","messageId":"481","endLine":110,"endColumn":56,"fix":"555"},{"ruleId":"478","severity":1,"message":"479","line":122,"column":3,"nodeType":"480","messageId":"481","endLine":122,"endColumn":61,"fix":"556"},{"ruleId":"478","severity":1,"message":"479","line":128,"column":3,"nodeType":"480","messageId":"481","endLine":128,"endColumn":48,"fix":"557"},{"ruleId":"478","severity":1,"message":"479","line":129,"column":3,"nodeType":"480","messageId":"481","endLine":129,"endColumn":54,"fix":"558"},{"ruleId":"478","severity":1,"message":"479","line":136,"column":3,"nodeType":"480","messageId":"481","endLine":136,"endColumn":22,"fix":"559"},{"ruleId":"478","severity":1,"message":"479","line":198,"column":3,"nodeType":"480","messageId":"481","endLine":198,"endColumn":61,"fix":"560"},{"ruleId":"478","severity":1,"message":"479","line":216,"column":3,"nodeType":"480","messageId":"481","endLine":216,"endColumn":31,"fix":"561"},{"ruleId":"478","severity":1,"message":"479","line":218,"column":3,"nodeType":"480","messageId":"481","endLine":218,"endColumn":47,"fix":"562"},{"ruleId":"478","severity":1,"message":"479","line":224,"column":3,"nodeType":"480","messageId":"481","endLine":224,"endColumn":17,"fix":"563"},"no-var","Unexpected var, use let or const instead.","VariableDeclaration","unexpectedVar",{"range":"564","text":"565"},{"range":"566","text":"565"},{"range":"567","text":"565"},"@typescript-eslint/no-inferrable-types","Type string trivially inferred from a string literal, remove type annotation.","ClassProperty","noInferrableType",{"range":"568","text":"569"},"no-async-promise-executor","Promise executor functions should not be async.","Identifier","async","no-prototype-builtins","Do not access Object.prototype method 'hasOwnProperty' from target object.","CallExpression","prototypeBuildIn",{"range":"570","text":"565"},{"range":"571","text":"565"},{"range":"572","text":"565"},{"range":"573","text":"565"},{"range":"574","text":"565"},{"range":"575","text":"565"},{"range":"576","text":"565"},{"range":"577","text":"565"},{"range":"578","text":"565"},{"range":"579","text":"565"},{"range":"580","text":"565"},{"range":"581","text":"565"},{"range":"582","text":"565"},{"range":"583","text":"565"},{"range":"584","text":"565"},{"range":"585","text":"565"},{"range":"586","text":"565"},{"range":"587","text":"565"},{"range":"588","text":"565"},{"range":"589","text":"565"},{"range":"590","text":"565"},"@typescript-eslint/no-empty-function","Unexpected empty method 'complete'.","FunctionExpression","unexpected",{"range":"591","text":"565"},{"range":"592","text":"565"},{"range":"593","text":"565"},{"range":"594","text":"565"},{"range":"595","text":"565"},{"range":"596","text":"565"},{"range":"597","text":"565"},{"range":"598","text":"565"},{"range":"599","text":"565"},{"range":"600","text":"565"},"prefer-const","'ensureViewerFocused' is never reassigned. Use 'const' instead.","useConst",{"range":"601","text":"565"},{"range":"602","text":"565"},{"range":"603","text":"565"},{"range":"604","text":"565"},{"range":"605","text":"565"},{"range":"606","text":"565"},{"range":"607","text":"565"},{"range":"608","text":"565"},{"range":"609","text":"565"},{"range":"610","text":"565"},{"range":"611","text":"565"},{"range":"612","text":"565"},"@typescript-eslint/no-extra-semi","Unnecessary semicolon.","EmptyStatement",{"range":"613","text":"614"},"'stack_msg' is never reassigned. Use 'const' instead.",{"range":"615","text":"616"},{"range":"617","text":"565"},{"range":"618","text":"565"},{"range":"619","text":"565"},{"range":"620","text":"565"},{"range":"621","text":"565"},{"range":"622","text":"565"},{"range":"623","text":"565"},{"range":"624","text":"565"},{"range":"625","text":"565"},{"range":"626","text":"565"},[3489,3492],"let",[2829,2832],[694,697],[285,293],"",[915,918],[1219,1222],[1274,1277],[1350,1353],[1422,1425],[1492,1495],[1575,1578],[1632,1635],[1912,1915],[2055,2058],[2111,2114],[2259,2262],[2330,2333],[2411,2414],[2476,2479],[2540,2543],[2610,2613],[2684,2687],[2762,2765],[3205,3208],[3261,3264],[3756,3759],[3880,3883],[3952,3955],[3993,3996],[4036,4039],[4093,4096],[4127,4130],[4178,4181],[4214,4217],[4368,4371],[690,693],[1335,1338],[1536,1539],[1596,1599],[1654,1657],[1724,1727],[1797,1800],[1857,1860],[1874,1877],[1895,1898],[2143,2146],[2368,2371],[2747,2761],"}\r\n\r\nfunction",[2824,2827],"const",[2868,2871],[3576,3579],[3937,3940],[4115,4118],[4164,4167],[4324,4327],[6564,6567],[7152,7155],[7226,7229],[7371,7374]]