[{"C:\\Users\\loite\\Documents\\GridaBoard2\\src\\index.js":"1","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\serviceWorker.js":"2","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\client\\Root.js":"3","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\shared\\App.js":"4","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\styles\\theme.js":"5","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\store\\rootReducer.ts":"6","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\store\\reducers\\pointerTracer.js":"7","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\store\\reducers\\authorization.js":"8","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\store\\reducers\\ui.js":"9","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\pages\\index.js":"10","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\pages\\Post.js":"11","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\pages\\About.js":"12","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\pages\\Posts.js":"13","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\pages\\Home.tsx":"14","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\penstorage\\InkStorage.ts":"15","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\components\\buttons\\RotateButton.tsx":"16","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\components\\buttons\\ConnectButton.tsx":"17","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\components\\buttons\\BackgroundButton.tsx":"18","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\components\\buttons\\PenTypeButton.tsx":"19","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\components\\buttons\\FitButton.tsx":"20","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\components\\buttons\\TracePointButton.tsx":"21","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\components\\buttons\\FullScreenButton.tsx":"22","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\components\\buttons\\ZoomButton.tsx":"23","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\components\\navbar\\ColorButtons.tsx":"24","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\components\\navbar\\PageNumbering.tsx":"25","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\components\\navbar\\FileLoad.tsx":"26","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\components\\navbar\\CalibrationMenual.tsx":"27","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\components\\navbar\\PrintButton.tsx":"28","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\components\\navbar\\UpperNav.tsx":"29","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\index.js":"30","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\index.ts":"31","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\penstorage\\EventSystem.ts":"32","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\components\\navbar\\Upload.js":"33","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\styles\\ThemeManager.ts":"34","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\pencomm\\PenManager.ts":"35","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\constants.js":"36","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\StorageRenderer.js":"37","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\pencomm\\neosmartpen.ts":"38","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\noteserver\\NoteserverClient.ts":"39","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\utils\\UtilsFunc.ts":"40","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\noteserver\\PaperInfo.ts":"41","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\types\\index.js":"42","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\renderer\\MixedPageView.tsx":"43","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\RenderWorkerBase.tsx":"44","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\PenBasedRenderer.tsx":"45","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PrintDataTypes.ts":"46","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\DefaultOption.ts":"47","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\Locales\\i18n.ts":"48","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\CanvasColorConverter.ts":"49","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\DataStructure\\index.ts":"50","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PdfPrintButton.tsx":"51","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\Modal\\PrintOptionDialog.tsx":"52","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NeoPdf\\FileBrowserButton.tsx":"53","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\Save\\SavePdf.tsx":"54","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\SurfaceMapper\\Calibration\\CalibrationButton.tsx":"55","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\DataStructure\\Enums.ts":"56","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\StorageRenderWorker.js":"57","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\penstorage\\index.ts":"58","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\utils\\JsUtils.js":"59","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\DataStructure\\NeoDot.ts":"60","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\pencomm\\pencomm.ts":"61","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\DrawCurves.ts":"62","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\DataStructure\\NeoStroke.ts":"63","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\PenBasedRenderWorker.tsx":"64","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NeoPdf\\NeoPdfManager.ts":"65","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\renderer\\pdf\\NeoPdfViewer.tsx":"66","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PrintPdfMain.tsx":"67","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NeoPdf\\FileBrowser.tsx":"68","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\SurfaceMapper\\Calibration\\CalibrationDialog.tsx":"69","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\pencomm\\pencomm_base.ts":"70","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\pencomm\\pencomm_enum.ts":"71","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\pencomm\\pencomm_const.ts":"72","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\pencomm\\pen_util_func.ts":"73","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\pencomm\\pencomm_event.ts":"74","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NeoPdf\\NeoPdfDocument.ts":"75","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\SurfaceSplitter.ts":"76","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\UtilFunc.ts":"77","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\renderer\\pdf\\Page.tsx":"78","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PagesForPrint.tsx":"79","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PageOrientation.jsx":"80","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NeoPdf\\NeoPdfPage.ts":"81","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\SurfaceMapper\\MappingItem.ts":"82","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\SurfaceMapper\\MappingStorage.ts":"83","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\DataStructure\\Structures.ts":"84","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\index.ts":"85","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\NcodeRasterizer.tsx":"86","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\SurfaceInfo.ts":"87","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PageForPrint.tsx":"88","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\NcodeConstans.ts":"89","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\index.ts":"90","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\NcodeFetcher.ts":"91","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\NcodeSurfaceDataJson.ts":"92","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\index.ts":"93","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\DataTypes.ts":"94","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\CoordinateTanslater.ts":"95","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\SolveTransform.ts":"96","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\EchelonMatrix.ts":"97","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\GaussianElimination.ts":"98"},{"size":829,"mtime":1607322124051,"results":"99","hashOfConfig":"100"},{"size":5227,"mtime":1607322124066,"results":"101","hashOfConfig":"100"},{"size":930,"mtime":1607322123988,"results":"102","hashOfConfig":"100"},{"size":660,"mtime":1607322124066,"results":"103","hashOfConfig":"100"},{"size":1203,"mtime":1607322124070,"results":"104","hashOfConfig":"100"},{"size":402,"mtime":1607322124068,"results":"105","hashOfConfig":"100"},{"size":530,"mtime":1607322124067,"results":"106","hashOfConfig":"100"},{"size":1129,"mtime":1607322124067,"results":"107","hashOfConfig":"100"},{"size":4388,"mtime":1607322124068,"results":"108","hashOfConfig":"100"},{"size":176,"mtime":1607322124065,"results":"109","hashOfConfig":"100"},{"size":139,"mtime":1607322124065,"results":"110","hashOfConfig":"100"},{"size":303,"mtime":1607322124064,"results":"111","hashOfConfig":"100"},{"size":822,"mtime":1607322124065,"results":"112","hashOfConfig":"100"},{"size":9301,"mtime":1607322742250,"results":"113","hashOfConfig":"100"},{"size":9763,"mtime":1607322124057,"results":"114","hashOfConfig":"100"},{"size":1895,"mtime":1607322123990,"results":"115","hashOfConfig":"100"},{"size":2994,"mtime":1607322123989,"results":"116","hashOfConfig":"100"},{"size":3463,"mtime":1607322123988,"results":"117","hashOfConfig":"100"},{"size":11766,"mtime":1607322123989,"results":"118","hashOfConfig":"100"},{"size":4150,"mtime":1607322123989,"results":"119","hashOfConfig":"100"},{"size":1736,"mtime":1607322123990,"results":"120","hashOfConfig":"100"},{"size":1594,"mtime":1607322123989,"results":"121","hashOfConfig":"100"},{"size":881,"mtime":1607322123990,"results":"122","hashOfConfig":"100"},{"size":8836,"mtime":1607322123991,"results":"123","hashOfConfig":"100"},{"size":2848,"mtime":1607322123992,"results":"124","hashOfConfig":"100"},{"size":1497,"mtime":1607322123991,"results":"125","hashOfConfig":"100"},{"size":725,"mtime":1607322123990,"results":"126","hashOfConfig":"100"},{"size":736,"mtime":1607322123992,"results":"127","hashOfConfig":"100"},{"size":690,"mtime":1607322123992,"results":"128","hashOfConfig":"100"},{"size":1445,"mtime":1607322124053,"results":"129","hashOfConfig":"100"},{"size":808,"mtime":1607322123987,"results":"130","hashOfConfig":"100"},{"size":3240,"mtime":1607322124057,"results":"131","hashOfConfig":"100"},{"size":9443,"mtime":1607322123992,"results":"132","hashOfConfig":"100"},{"size":5882,"mtime":1607322124068,"results":"133","hashOfConfig":"100"},{"size":7623,"mtime":1607322124054,"results":"134","hashOfConfig":"100"},{"size":854,"mtime":1607322124053,"results":"135","hashOfConfig":"100"},{"size":14473,"mtime":1607322124061,"results":"136","hashOfConfig":"100"},{"size":15056,"mtime":1607322124055,"results":"137","hashOfConfig":"100"},{"size":5475,"mtime":1607322124054,"results":"138","hashOfConfig":"100"},{"size":2991,"mtime":1607322124064,"results":"139","hashOfConfig":"100"},{"size":6448,"mtime":1607322124054,"results":"140","hashOfConfig":"100"},{"size":24,"mtime":1607322124063,"results":"141","hashOfConfig":"100"},{"size":4048,"mtime":1607322124058,"results":"142","hashOfConfig":"100"},{"size":18543,"mtime":1607322124060,"results":"143","hashOfConfig":"100"},{"size":13303,"mtime":1607322124060,"results":"144","hashOfConfig":"100"},{"size":2522,"mtime":1607322123979,"results":"145","hashOfConfig":"100"},{"size":870,"mtime":1607322123977,"results":"146","hashOfConfig":"100"},{"size":1201,"mtime":1607322123976,"results":"147","hashOfConfig":"100"},{"size":3185,"mtime":1607322123981,"results":"148","hashOfConfig":"100"},{"size":271,"mtime":1607322124052,"results":"149","hashOfConfig":"100"},{"size":7837,"mtime":1607322123979,"results":"150","hashOfConfig":"100"},{"size":15313,"mtime":1607322123978,"results":"151","hashOfConfig":"100"},{"size":1492,"mtime":1607322123983,"results":"152","hashOfConfig":"100"},{"size":1408,"mtime":1607322123985,"results":"153","hashOfConfig":"100"},{"size":1156,"mtime":1607322123985,"results":"154","hashOfConfig":"100"},{"size":867,"mtime":1607322124051,"results":"155","hashOfConfig":"100"},{"size":31133,"mtime":1607322124060,"results":"156","hashOfConfig":"100"},{"size":62,"mtime":1607322124057,"results":"157","hashOfConfig":"100"},{"size":286,"mtime":1607322124064,"results":"158","hashOfConfig":"100"},{"size":528,"mtime":1607322124052,"results":"159","hashOfConfig":"100"},{"size":29000,"mtime":1607322124056,"results":"160","hashOfConfig":"100"},{"size":7475,"mtime":1607322124059,"results":"161","hashOfConfig":"100"},{"size":2656,"mtime":1607322124052,"results":"162","hashOfConfig":"100"},{"size":14938,"mtime":1607322124059,"results":"163","hashOfConfig":"100"},{"size":2396,"mtime":1607322123984,"results":"164","hashOfConfig":"100"},{"size":2894,"mtime":1607322124061,"results":"165","hashOfConfig":"100"},{"size":8496,"mtime":1607322123980,"results":"166","hashOfConfig":"100"},{"size":2599,"mtime":1607322123983,"results":"167","hashOfConfig":"100"},{"size":5797,"mtime":1607322123986,"results":"168","hashOfConfig":"100"},{"size":9282,"mtime":1607322124056,"results":"169","hashOfConfig":"100"},{"size":463,"mtime":1607322124056,"results":"170","hashOfConfig":"100"},{"size":513,"mtime":1607322124056,"results":"171","hashOfConfig":"100"},{"size":1404,"mtime":1607322124055,"results":"172","hashOfConfig":"100"},{"size":1807,"mtime":1607322124057,"results":"173","hashOfConfig":"100"},{"size":8000,"mtime":1607322123984,"results":"174","hashOfConfig":"100"},{"size":6983,"mtime":1607322123982,"results":"175","hashOfConfig":"100"},{"size":739,"mtime":1607322123980,"results":"176","hashOfConfig":"100"},{"size":7172,"mtime":1607322124061,"results":"177","hashOfConfig":"100"},{"size":3638,"mtime":1607322123979,"results":"178","hashOfConfig":"100"},{"size":322,"mtime":1607322123978,"results":"179","hashOfConfig":"100"},{"size":4369,"mtime":1607322123984,"results":"180","hashOfConfig":"100"},{"size":2343,"mtime":1607322123986,"results":"181","hashOfConfig":"100"},{"size":4732,"mtime":1607322123987,"results":"182","hashOfConfig":"100"},{"size":3704,"mtime":1607322123975,"results":"183","hashOfConfig":"100"},{"size":27,"mtime":1607322123980,"results":"184","hashOfConfig":"100"},{"size":19815,"mtime":1607322123982,"results":"185","hashOfConfig":"100"},{"size":4656,"mtime":1607322123982,"results":"186","hashOfConfig":"100"},{"size":15365,"mtime":1607322123978,"results":"187","hashOfConfig":"100"},{"size":905,"mtime":1607322123981,"results":"188","hashOfConfig":"100"},{"size":120,"mtime":1607322123974,"results":"189","hashOfConfig":"100"},{"size":3610,"mtime":1607322123981,"results":"190","hashOfConfig":"100"},{"size":2644,"mtime":1607322123982,"results":"191","hashOfConfig":"100"},{"size":220,"mtime":1607322123983,"results":"192","hashOfConfig":"100"},{"size":3007,"mtime":1607322123971,"results":"193","hashOfConfig":"100"},{"size":7210,"mtime":1607322123971,"results":"194","hashOfConfig":"100"},{"size":3925,"mtime":1607322123974,"results":"195","hashOfConfig":"100"},{"size":1068,"mtime":1607322123974,"results":"196","hashOfConfig":"100"},{"size":2144,"mtime":1607322123974,"results":"197","hashOfConfig":"100"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},"14vw1yq",{"filePath":"201","messages":"202","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"200"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"200"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"200"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"200"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"200"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"200"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"200"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"227","messages":"228","errorCount":3,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"200"},{"filePath":"230","messages":"231","errorCount":5,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"200"},{"filePath":"233","messages":"234","errorCount":11,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"200"},{"filePath":"236","messages":"237","errorCount":6,"warningCount":3,"fixableErrorCount":6,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":22,"warningCount":9,"fixableErrorCount":20,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"215"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"215"},{"filePath":"244","messages":"245","errorCount":2,"warningCount":5,"fixableErrorCount":1,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"215"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"215"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"215"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"215"},{"filePath":"256","messages":"257","errorCount":4,"warningCount":5,"fixableErrorCount":4,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"215"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"215"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"215"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"215"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"215"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"215"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"215"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"215"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"215"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"287","messages":"288","errorCount":6,"warningCount":6,"fixableErrorCount":1,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"215"},{"filePath":"290","messages":"291","errorCount":5,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"200"},{"filePath":"293","messages":"294","errorCount":11,"warningCount":18,"fixableErrorCount":11,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"215"},{"filePath":"296","messages":"297","errorCount":10,"warningCount":23,"fixableErrorCount":8,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"215"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"301","messages":"302","errorCount":10,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"200"},{"filePath":"304","messages":"305","errorCount":31,"warningCount":24,"fixableErrorCount":27,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"215"},{"filePath":"307","messages":"308","errorCount":37,"warningCount":4,"fixableErrorCount":36,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"215"},{"filePath":"310","messages":"311","errorCount":5,"warningCount":1,"fixableErrorCount":4,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"215"},{"filePath":"313","messages":"314","errorCount":8,"warningCount":0,"fixableErrorCount":8,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"215"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"318","messages":"319","errorCount":3,"warningCount":6,"fixableErrorCount":1,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"215"},{"filePath":"321","messages":"322","errorCount":60,"warningCount":28,"fixableErrorCount":59,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"215"},{"filePath":"324","messages":"325","errorCount":18,"warningCount":22,"fixableErrorCount":16,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"215"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"215"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"215"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"339","messages":"340","errorCount":2,"warningCount":12,"fixableErrorCount":1,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"215"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"215"},{"filePath":"345","messages":"346","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"215"},{"filePath":"348","messages":"349","errorCount":1,"warningCount":1,"fixableErrorCount":1,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"215"},{"filePath":"351","messages":"352","errorCount":2,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"215"},{"filePath":"354","messages":"355","errorCount":4,"warningCount":0,"fixableErrorCount":4,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"215"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":88,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"200"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"200"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"367","messages":"368","errorCount":4,"warningCount":25,"fixableErrorCount":3,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"215"},{"filePath":"370","messages":"371","errorCount":28,"warningCount":0,"fixableErrorCount":25,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"215"},{"filePath":"373","messages":"374","errorCount":5,"warningCount":2,"fixableErrorCount":5,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"215"},{"filePath":"376","messages":"377","errorCount":39,"warningCount":30,"fixableErrorCount":33,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"215"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"215"},{"filePath":"382","messages":"383","errorCount":7,"warningCount":6,"fixableErrorCount":4,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"215"},{"filePath":"385","messages":"386","errorCount":4,"warningCount":20,"fixableErrorCount":1,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"215"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"215"},{"filePath":"391","messages":"392","errorCount":1,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"215"},{"filePath":"394","messages":"395","errorCount":15,"warningCount":11,"fixableErrorCount":11,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"215"},{"filePath":"397","messages":"398","errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"215"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"215"},{"filePath":"405","messages":"406","errorCount":3,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"215"},{"filePath":"408","messages":"409","errorCount":2,"warningCount":17,"fixableErrorCount":2,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"215"},{"filePath":"411","messages":"412","errorCount":3,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"215"},{"filePath":"414","messages":"415","errorCount":5,"warningCount":1,"fixableErrorCount":2,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"215"},{"filePath":"417","messages":"418","errorCount":23,"warningCount":17,"fixableErrorCount":19,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"215"},{"filePath":"420","messages":"421","errorCount":3,"warningCount":12,"fixableErrorCount":1,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"215"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"200"},{"filePath":"426","messages":"427","errorCount":4,"warningCount":4,"fixableErrorCount":4,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"215"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"215"},{"filePath":"432","messages":"433","errorCount":8,"warningCount":10,"fixableErrorCount":7,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"215"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"215"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"440","messages":"441","errorCount":13,"warningCount":4,"fixableErrorCount":12,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"215"},{"filePath":"443","messages":"444","errorCount":12,"warningCount":8,"fixableErrorCount":11,"fixableWarningCount":0,"source":"445","usedDeprecatedRules":"215"},{"filePath":"446","messages":"447","errorCount":12,"warningCount":8,"fixableErrorCount":10,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"215"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"453","messages":"454","errorCount":4,"warningCount":1,"fixableErrorCount":3,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"215"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"462","messages":"463","errorCount":1,"warningCount":3,"fixableErrorCount":1,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"215"},{"filePath":"465","messages":"466","errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"215"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"215"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473"},"C:\\Users\\loite\\Documents\\GridaBoard2\\src\\index.js",[],[],"C:\\Users\\loite\\Documents\\GridaBoard2\\src\\serviceWorker.js",["474","475","476"],"// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\client\\Root.js",["477","478"],"import React from \"react\";\r\nimport App from \"../shared/App\";\r\nimport thunk from 'redux-thunk';\r\nimport {applyMiddleware, combineReducers, compose, createStore} from 'redux';\r\nimport rootReducer from \"../store/rootReducer\";\r\nimport { Provider } from \"react-redux\";\r\nimport { theme } from \"../styles/theme\";\r\nimport {\r\n  // Backdrop,\r\n  // Button,\r\n  // CircularProgress,\r\n  // Dialog,\r\n  // DialogActions,\r\n  // DialogContent,\r\n  // DialogContentText,\r\n  // DialogTitle,\r\n  // Fade,\r\n  // IconButton,\r\n  MuiThemeProvider,\r\n  // Snackbar,\r\n} from \"@material-ui/core\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nconst Root = () => (\r\n  <Provider store={store}>\r\n    <MuiThemeProvider theme={theme}>\r\n      <App theme={theme} />\r\n    </MuiThemeProvider>\r\n  </Provider>\r\n);\r\n\r\nexport default Root;\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\shared\\App.js",["479"],"import React, { Component } from \"react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { Home, About, Posts } from \"../pages\";\r\n// import Menu from '../components/Menu';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        {/* <Menu /> */}\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Switch>\r\n          <Route path=\"/about/:name\" component={About} />\r\n          <Route path=\"/about\" component={About} />\r\n        </Switch>\r\n        <Route path=\"/posts\" component={Posts} />\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\styles\\theme.js",["480"],"import { createMuiTheme } from '@material-ui/core';\r\nimport Colors from '../styles/colors.scss';\r\nimport { colors } from '@material-ui/core';\r\nimport { koKR } from '@material-ui/core/locale';\r\n// import { Button, Typography } from \"@material-ui/core\";\r\n\r\nconst prev_palette = {\r\n  type: 'light',\r\n  primary: {\r\n    main: Colors.primary\r\n  },\r\n  secondary: {\r\n    main: Colors.secondary\r\n  },\r\n  error: {\r\n    main: Colors.error\r\n  },\r\n  warning: {\r\n    main: Colors.warning\r\n  },\r\n  info: {\r\n    main: Colors.info\r\n  },\r\n  success: {\r\n    main: Colors.success\r\n  },\r\n  contrastThreshold: 3,\r\n  tonalOffset: 0.2\r\n};\r\n\r\nconst palette = {\r\n  myColor: {\r\n    main: colors.blue[500]\r\n  },\r\n  primary: {\r\n    main: \"#7D89EF\",\r\n  },\r\n  secondary: {\r\n    main: \"#B3DDED\",\r\n  },\r\n  error: {\r\n    main: \"#FF7777\",\r\n  },\r\n  warning: {\r\n    main:  \"#FFC569\",\r\n  },\r\n  info: {\r\n    main: \"#65BEFF\",\r\n  },\r\n  success: {\r\n    main: \"#87C651\",\r\n  },\r\n  contrastThreshold: 3,\r\n  tonalOffset: 0.2\r\n};\r\n\r\nexport const theme = createMuiTheme({\r\n  palette,\r\n  // drawer 폭, 넓이\r\n  props: {\r\n    drawerWidth: 200,\r\n  },\r\n\r\n  typography: {\r\n    useNextVariants: true,\r\n    fontFamily: '\"Noto Sans KR\"'\r\n  },\r\n}, koKR);\r\n\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\store\\rootReducer.ts",[],[],"C:\\Users\\loite\\Documents\\GridaBoard2\\src\\store\\reducers\\pointerTracer.js",["481","482","483","484"],"// 액션 타입\r\nconst SET_POINTER_TRACER = 'pointerTracer/SET_POINTER_TRACER';\r\n\r\n// 액션 생성 함수\r\nexport const setPointerTracer = isTrace => ({ type: SET_POINTER_TRACER, isTrace });\r\n\r\n// 초기 상태\r\nconst initialState = {\r\n  isTrace: true,\r\n};\r\n\r\n// 리듀서 작성\r\nexport default function pointerTracer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_POINTER_TRACER:\r\n      return {\r\n        ...state,\r\n        isTrace: action.isTrace,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\store\\reducers\\authorization.js",["485","486","487","488","489"],"import {store} from \"../../client/Root\";\r\nimport cookie from 'react-cookies';\r\n\r\n// Define Action Types\r\nconst ActionGroup = 'Auth';\r\n\r\nexport const AuthorizationActionTypes = {\r\n  LOGIN: `${ActionGroup}.LOGIN`,\r\n  LOGOUT: `${ActionGroup}.LOGOUT`\r\n};\r\n\r\n\r\n// Action Methods\r\nexport const didLogin = (authToken) => {\r\n  console.log(\"authToken : \", authToken);\r\n  store.dispatch({\r\n    type: AuthorizationActionTypes.LOGIN,\r\n    authToken: authToken\r\n  })\r\n};\r\n\r\nexport const logout = () => {\r\n  store.dispatch({\r\n    type: AuthorizationActionTypes.LOGOUT,\r\n    authToken: \"\"\r\n  })\r\n  cookie.remove(\"token\");\r\n};\r\n\r\n\r\n// Reducer\r\nexport default (state={\r\n  authToken: localStorage.getItem('idToken')\r\n}, action) => {\r\n  switch (action.type) {\r\n    case AuthorizationActionTypes.LOGIN: {\r\n      localStorage.setItem('idToken', action.authToken);\r\n      return {\r\n        ...state,\r\n        authToken: action.authToken\r\n      }\r\n    }\r\n    case AuthorizationActionTypes.LOGOUT: {\r\n      localStorage.removeItem('idToken');\r\n      state.authToken = null;\r\n      return {};\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\store\\reducers\\ui.js",["490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513"],"import {store} from \"../../client/Root\";\r\n\r\n//[Define Action Types\r\nconst ActionGroup = 'UI';\r\n\r\nexport const UIActionTypes = Object.freeze({\r\n  SHOW_UI_PROGRESS: `${ActionGroup}.SHOW_UI_PROGRESS`,\r\n  HIDE_UI_PROGRESS: `${ActionGroup}.HIDE_UI_PROGRESS`,\r\n  SHOW_TOAST_MESSAGE: `${ActionGroup}.SHOW_TOAST_MESSAGE`,\r\n  HIDE_TOAST_MESSAGE: `${ActionGroup}.HIDE_TOAST_MESSAGE`,\r\n  SHOW_DIALOG: `${ActionGroup}.SHOW_DIALOG`,\r\n  HIDE_DIALOG: `${ActionGroup}.HIDE_DIALOG`,\r\n  RESET_DIALOG: `${ActionGroup}.RESET_DIALOG`\r\n});\r\n//]\r\n\r\n//[Action Methods\r\nexport const ShowUIProgressBackdrop = () => {\r\n  store.dispatch({\r\n    type: UIActionTypes.SHOW_UI_PROGRESS\r\n  });\r\n};\r\nexport const HideUIProgressBackdrop = () => {\r\n  store.dispatch({\r\n    type: UIActionTypes.HIDE_UI_PROGRESS\r\n  });\r\n};\r\n\r\nexport const ShowErrorToast = (message) => {\r\n  store.dispatch({\r\n    type: UIActionTypes.SHOW_TOAST_MESSAGE,\r\n    message: message,\r\n    toastType: 'error'\r\n  });\r\n};\r\nexport const ShowWarningToast = (message) => {\r\n  store.dispatch({\r\n    type: UIActionTypes.SHOW_TOAST_MESSAGE,\r\n    message: message,\r\n    toastType: 'warning'\r\n  });\r\n};\r\nexport const ShowInfoToast = (message) => {\r\n  store.dispatch({\r\n    type: UIActionTypes.SHOW_TOAST_MESSAGE,\r\n    message: message,\r\n    toastType: 'info'\r\n  });\r\n};\r\nexport const ShowSuccessToast = (message) => {\r\n  store.dispatch({\r\n    type: UIActionTypes.SHOW_TOAST_MESSAGE,\r\n    message: message,\r\n    toastType: 'success'\r\n  });\r\n};\r\nexport const ShowMessageToast = (message) => {\r\n  store.dispatch({\r\n    type: UIActionTypes.SHOW_TOAST_MESSAGE,\r\n    message: message,\r\n    toastType: ''\r\n  });\r\n};\r\nexport const HideToastMessage = () => {\r\n  store.dispatch({\r\n    type: UIActionTypes.HIDE_TOAST_MESSAGE\r\n  });\r\n};\r\n\r\nexport const ShowDialog = (title, message, confirmBtnText, cancelBtnText, isModal, didCloseCallback) => {\r\n  store.dispatch({\r\n    type: UIActionTypes.SHOW_DIALOG,\r\n    title: title,\r\n    message: message,\r\n    confirmBtnText: confirmBtnText,\r\n    cancelBtnText: cancelBtnText,\r\n    isModal: isModal,\r\n    didCloseCallback: didCloseCallback\r\n  });\r\n};\r\nexport const HideDialog = () => {\r\n  store.dispatch({\r\n    type: UIActionTypes.HIDE_DIALOG\r\n  });\r\n};\r\nexport const ResetDialogConfig = () => {\r\n  store.dispatch({\r\n    type: UIActionTypes.RESET_DIALOG\r\n  });\r\n};\r\n//]\r\n\r\n//[Reducer\r\nexport default (state={\r\n  progress: {\r\n    circular: false\r\n  },\r\n  toast: {\r\n    show: false,\r\n    message: '',\r\n    toastType: ''\r\n  },\r\n  dialog: {\r\n    show: false,\r\n    title: '',\r\n    message: '',\r\n    confirmBtnText: '',\r\n    cancelBtnText: '',\r\n    okButtonText: '',\r\n    isModal: false,\r\n    didCloseCallback: null\r\n  }\r\n}, action) => {\r\n  switch (action.type) {\r\n    case UIActionTypes.SHOW_UI_PROGRESS: {\r\n      return {\r\n        ...state,\r\n        progress: {\r\n          circular: true\r\n        }\r\n      };\r\n    }\r\n    case UIActionTypes.HIDE_UI_PROGRESS: {\r\n      return {\r\n        ...state,\r\n        progress: {\r\n          circular: false\r\n        }\r\n      };\r\n    }\r\n    case UIActionTypes.SHOW_TOAST_MESSAGE: {\r\n      return {\r\n        ...state,\r\n        toast: {\r\n          show: true,\r\n          message: action.message,\r\n          toastType: action.toastType\r\n        }\r\n      }\r\n    }\r\n    case UIActionTypes.HIDE_TOAST_MESSAGE: {\r\n      return {\r\n        ...state,\r\n        toast: {\r\n          show: false,\r\n          message: ''\r\n        }\r\n      }\r\n    }\r\n    case UIActionTypes.SHOW_DIALOG: {\r\n      return {\r\n        ...state,\r\n        dialog: {\r\n          show: true,\r\n          title: action.title,\r\n          message: action.message,\r\n          confirmBtnText: action.confirmBtnText,\r\n          cancelBtnText: action.cancelBtnText,\r\n          isModal: action.isModal,\r\n          didCloseCallback: action.didCloseCallback\r\n        }\r\n      }\r\n    }\r\n    case UIActionTypes.HIDE_DIALOG: {\r\n      return {\r\n        ...state,\r\n        dialog: {\r\n          ...state.dialog,\r\n          show: false\r\n        }\r\n      }\r\n    }\r\n    case UIActionTypes.RESET_DIALOG: {\r\n      return {\r\n        ...state,\r\n        dialog: {\r\n          show: false,\r\n          title: '',\r\n          message: '',\r\n          confirmBtnText: '',\r\n          cancelBtnText: '',\r\n          okButtonText: '',\r\n          isModal: false,\r\n          didCloseCallback: null\r\n        }\r\n      }\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n//]\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\pages\\index.js",[],"C:\\Users\\loite\\Documents\\GridaBoard2\\src\\pages\\Post.js",["514","515","516","517","518"],"import React from \"react\";\r\n\r\nconst Post = ({ match }) => {\r\n  return <div>포스트 {match.params.id}</div>;\r\n};\r\n\r\nexport default Post;\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\pages\\About.js",["519","520","521","522","523","524","525"],"import React from \"react\";\r\nimport queryString from \"query-string\";\r\n\r\nconst About = ({ location, match }) => {\r\n  const query = queryString.parse(location.search);\r\n  console.log(query);\r\n\r\n  return (\r\n    <div>\r\n      <h2>About {match.params.name}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\pages\\Posts.js",["526","527","528","529","530","531","532","533","534","535","536","537","538"],"import React from 'react';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport { Post } from \"../pages\";\r\n\r\nconst Posts = ({ location, match }) => {\r\n  console.log( `location.pathname = ${location.pathname}`);\r\n  console.log( `match.url = ${match.url}` );\r\n  console.log( `match.path = ${match.path}` );\r\n  return (\r\n    <div>\r\n      <h2>Post List</h2>\r\n      <ul>\r\n        <li><Link to={`${match.url}/1`}>Post #1</Link></li>\r\n        <li><Link to={`${match.url}/2`}>Post #2</Link></li>\r\n        <li><Link to={`${match.url}/3`}>Post #3</Link></li>\r\n        <li><Link to={`${match.url}/4`}>Post #4</Link></li>\r\n      </ul>\r\n      <Route exact path={match.url} render={() => (<h3>Please select any post</h3>)} />\r\n      <Route path={`${match.url}/:id`} component={Post} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\pages\\Home.tsx",["539","540","541","542","543","544","545","546","547"],"C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\penstorage\\InkStorage.ts",["548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578"],"import \"../types\";\r\n// import { initStroke, strokeAddDot, closeStroke } from \"./neostroke\";\r\nimport { NeoStroke, NeoDot, PenEventName, IBrushType } from \"../DataStructure\";\r\nimport { IPageSOBP } from \"../DataStructure/Structures\";\r\nimport Dispatcher from \"./EventSystem\";\r\nimport { INeoStrokeProps } from \"../DataStructure/NeoStroke\";\r\n\r\n/** @type {InkStorage} */\r\nlet _storage_instance = null;\r\n\r\n\r\nexport interface IOpenStrokeArg {\r\n  mac: string,\r\n  time: number,\r\n  penTipMode: number/**0:pen, 1:eraser */,\r\n\r\n  brushType: IBrushType,\r\n  thickness: number,\r\n  color: string,\r\n}\r\n\r\n\r\nexport default class InkStorage {\r\n  completed: NeoStroke[];\r\n  realtime: Map<string, NeoStroke>;\r\n  completedOnPage: Map<string, NeoStroke[]>;\r\n\r\n  realtimeOnPage: Map<string, Map<string, NeoStroke>>;\r\n\r\n  _storage_instance: InkStorage;\r\n  dispatcher: Dispatcher;\r\n\r\n  lastPageInfo: IPageSOBP;\r\n\r\n\r\n  /** @type {InkStorage} */\r\n  // static instance;\r\n  constructor() {\r\n    if (_storage_instance) return _storage_instance;\r\n\r\n    this.completed = [];            // completed strokes\r\n\r\n    /** sourceKey (\"uuid\" ) ==> Stroke */\r\n    this.realtime = new Map();    // realtime strokes (incompleted strokes)\r\n\r\n    /** (pageId) ==> ({penId : NeoStroke[]}) */\r\n    this.completedOnPage = new Map();\r\n\r\n    /** (pageId) ==> ({strokeKey : NeoStroke}) */\r\n    this.realtimeOnPage = new Map();\r\n\r\n    _storage_instance = this;\r\n    this.dispatcher = new Dispatcher();\r\n    this.lastPageInfo = { section: -1, book: -1, owner: -1, page: -1 };\r\n\r\n  }\r\n\r\n  /**\r\n   * \r\n   */\r\n  static getInstance(): InkStorage {\r\n    if (_storage_instance) return _storage_instance;\r\n\r\n    _storage_instance = new InkStorage();\r\n    return _storage_instance;\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param eventName \r\n   * @param listener \r\n   * @param filter \r\n   */\r\n  public addEventListener(eventName: string, listener: Function, filter: any) {\r\n    this.dispatcher.on(eventName, listener, filter);\r\n    console.log(\"bound\", listener);\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param eventName \r\n   * @param listener \r\n   */\r\n  public removeEventListener(eventName: string, listener: Function) {\r\n    this.dispatcher.off(eventName, listener);\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param pageInfo \r\n   */\r\n  public getPageStrokes(pageInfo: IPageSOBP): NeoStroke[] {\r\n    const { section, book, owner, page } = pageInfo;\r\n    const pageId = InkStorage.getPageId({ section, book, owner, page });\r\n\r\n    let completed = this.completedOnPage;\r\n    let arr = completed.get(pageId);\r\n    if (arr) return arr;\r\n\r\n    return [];\r\n  }\r\n\r\n  public removeStrokeFromPage(pageInfo: IPageSOBP) {\r\n    const { section, book, owner, page } = pageInfo;\r\n    const pageId = InkStorage.getPageId({ section, book, owner, page });\r\n\r\n    let completed = this.completedOnPage;\r\n    completed.delete(pageId);\r\n  }\r\n  /**\r\n   * \r\n   * @param pageInfo \r\n   */\r\n  public getPageStrokes_live(pageInfo: IPageSOBP): NeoStroke[] {\r\n    const { section, book, owner, page } = pageInfo;\r\n    const pageId = InkStorage.getPageId({ section, book, owner, page });\r\n\r\n\r\n    /** @type {Map.<string, Map>} - (pageId) ==> (strokeKey ==> NeoStroke) */\r\n    let realtime = this.realtimeOnPage;\r\n\r\n    /** @type {Map.<string, NeoStroke>} - (strokeKey) ==> (NeoStroke) */\r\n    let penStrokesMap = realtime.get(pageId);\r\n\r\n    if (penStrokesMap) {\r\n      /** @type {Array.<NeoStroke>} */\r\n      let arr = [];\r\n      penStrokesMap.forEach((value, key) => {\r\n        arr.push(value);\r\n      });\r\n\r\n      return arr;\r\n    }\r\n\r\n    return [];\r\n  }\r\n\r\n  /**\r\n   * \r\n   */\r\n  public getLastPageInfo(): IPageSOBP {\r\n    return this.lastPageInfo;\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param stroke \r\n   */\r\n  private addCompletedToPage(stroke: NeoStroke) {\r\n    const { section, book, owner, page } = stroke;\r\n    const pageId = InkStorage.getPageId({ section, book, owner, page });\r\n    // console.log( `add completed: ${mac},  ${pageId} = ${section}.${book}.${owner}.${page} `);\r\n\r\n    // stroke에 점이 하나라도 있어야 옮긴다.\r\n    if (stroke.dotArray.length > 0) {\r\n      // 배열이 없으면 만들어 준다.\r\n\r\n      /** @type {Map.<string, Array.<NeoStroke>>} - (pageId) ==> (NeoStroke[]) */\r\n      let completed = this.completedOnPage;\r\n      if (!completed.has(pageId)) {\r\n        completed.set(pageId, new Array(0));\r\n      }\r\n\r\n      // 배열에 넣는다.\r\n      /** @type {Array.<NeoStroke>} */\r\n      let arr = completed.get(pageId);\r\n      arr.push(stroke);\r\n\r\n      this.lastPageInfo = { section, book, owner, page };\r\n      // console.log(completed);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param stroke \r\n   */\r\n  private addRealtimeToPage(stroke: NeoStroke) {\r\n    const { section, book, owner, page, key } = stroke;\r\n    let pageId = InkStorage.getPageId({ section, book, owner, page });\r\n\r\n\r\n    /** @type {Map.<string, Map>} - (pageId) ==> (strokeKey ==> NeoStroke) */\r\n    let realtime = this.realtimeOnPage;\r\n    if (!realtime.has(pageId)) realtime.set(pageId, new Map());\r\n\r\n    /** @type {Map.<string, NeoStroke>} - (strokeKey) ==> (NeoStroke) */\r\n    let penStrokesMap = realtime.get(pageId);\r\n\r\n    const strokeKey = key;\r\n    penStrokesMap.set(strokeKey, stroke);\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param stroke \r\n   */\r\n  private removeFromRealtime(stroke: NeoStroke) {\r\n    const { section, book, owner, page, key } = stroke;\r\n    let pageId = InkStorage.getPageId({ section, book, owner, page });\r\n\r\n    /** @type {Map.<string, Map>} - (pageId) ==> (strokeKey ==> NeoStroke) */\r\n    let realtime = this.realtimeOnPage;\r\n    if (realtime.has(pageId)) {\r\n      /** @type {Map.<string, NeoStroke>} - (strokeKey) ==> (NeoStroke) */\r\n      let penStrokesMap = realtime.get(pageId);\r\n\r\n      const strokeKey = key;\r\n      penStrokesMap.delete(strokeKey);\r\n    }\r\n\r\n    this.realtime[key] = null;\r\n  }\r\n\r\n\r\n  /**\r\n   * \r\n   * @param info \r\n   */\r\n  static getPageId(info: IPageSOBP): string {\r\n    const { section, book, owner, page } = info;\r\n    return `${section}.${book}.${owner}.${page}`;\r\n  }\r\n\r\n  static getPageSOBP( pageId: string ) : IPageSOBP {\r\n    const arr = pageId.split(\".\");\r\n    if ( arr.length !== 4 ) {\r\n      return { \r\n        section: -1,\r\n        owner:-1,\r\n        book:-1,\r\n        page:-1,\r\n      };\r\n    }\r\n\r\n    const ret : IPageSOBP = {\r\n      section: parseInt(arr[0]),\r\n      owner: parseInt(arr[1]),\r\n      book: parseInt(arr[2]),\r\n      page: parseInt(arr[3]),\r\n    }\r\n\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * create realtime stroke, wait for \"appendDot\", ..., \"closeStroke\"\r\n   * @param mac \r\n   * @param time \r\n   * @param penTipMode \r\n   * @param penColor \r\n   * @param thickness \r\n   */\r\n\r\n  public openStroke(args: IOpenStrokeArg): NeoStroke {\r\n    // let stroke = new NeoStroke(mac);\r\n\r\n    // let stroke = initStroke(-1 /* section */, -1 /* owner */, -1 /*book */, -1 /* page */, time, mac);\r\n    const { mac, time, thickness, brushType, color } = args;\r\n    const strokeProps: INeoStrokeProps = {\r\n      section: -1,\r\n      owner: -1,\r\n      book: -1,\r\n      page: -1,\r\n      startTime: time,\r\n      mac,\r\n      thickness,\r\n      brushType,\r\n      color,\r\n    }\r\n    let stroke = new NeoStroke(strokeProps);\r\n    // stroke.thickness = thickness;     // kitty\r\n    stroke.penTipMode = 0;    // kitty\r\n\r\n    // stroke.init(section, owner, book, page, startTime);\r\n\r\n    let strokeKey = stroke.key;\r\n    if (this.realtime[strokeKey]) this.realtime[strokeKey] = null;\r\n    this.realtime[strokeKey] = stroke;\r\n\r\n    // hand the event\r\n    this.dispatcher.dispatch(PenEventName.ON_PEN_DOWN, { strokeKey, mac, time, stroke });\r\n\r\n    return stroke;\r\n  }\r\n\r\n\r\n  /**\r\n   * create realtime stroke, wait for \"appendDot\", ..., \"closeStroke\"\r\n   * @param strokeKey \r\n   * @param section \r\n   * @param owner \r\n   * @param book \r\n   * @param page \r\n   * @param time \r\n   */\r\n  public setStrokeInfo(strokeKey: string, section: number, owner: number, book: number, page: number, time: number) {\r\n    let stroke = this.realtime[strokeKey];\r\n    stroke.section = section;\r\n    stroke.owner = owner;\r\n    stroke.book = book;\r\n    stroke.page = page;\r\n\r\n    this.addRealtimeToPage(stroke);\r\n\r\n    // hand the event\r\n    this.dispatcher.dispatch(PenEventName.ON_PEN_PAGEINFO, { strokeKey, mac: stroke.mac, stroke, section, owner, book, page, time });\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param strokeKey \r\n   */\r\n  public getRealTimeStroke(strokeKey: string): NeoStroke {\r\n    /** @type {NeoStroke} */\r\n    let stroke = this.realtime[strokeKey];\r\n    if (!stroke) {\r\n      console.error(`stroke was not initiated`);\r\n      return null;\r\n    }\r\n\r\n    return stroke;\r\n  }\r\n\r\n\r\n  /**\r\n   * add dot to the stroke opened\r\n   * @param strokeKey \r\n   * @param dot \r\n   */\r\n  public appendDot(strokeKey: string, dot: NeoDot) {\r\n    /** @type {NeoStroke} */\r\n    let stroke = this.realtime[strokeKey];\r\n    if (!stroke) {\r\n      console.error(`stroke was not initiated`);\r\n      console.error(dot);\r\n      return;\r\n    }\r\n\r\n    // strokeAddDot(stroke, dot);\r\n    stroke.addDot(dot);\r\n\r\n    // hand the event\r\n    this.dispatcher.dispatch(PenEventName.ON_PEN_MOVE, { strokeKey, mac: stroke.mac, stroke, dot });\r\n  }\r\n\r\n  /**\r\n   * close stroke to move to \"completed\"\r\n   * @param strokeKey \r\n   */\r\n  public closeStroke(strokeKey: string) {\r\n    /** @type {NeoStroke} */\r\n    let stroke = this.realtime[strokeKey];\r\n    if (!stroke) {\r\n      console.error(`stroke was not initiated`);\r\n      return;\r\n    }\r\n\r\n    // closeStroke(stroke);\r\n    stroke.close();\r\n\r\n    this.completed.push(stroke);\r\n\r\n    this.addCompletedToPage(stroke);\r\n    this.removeFromRealtime(stroke);\r\n\r\n    // hand the event\r\n    const { mac, section, owner, book, page } = stroke;\r\n    this.dispatcher.dispatch(PenEventName.ON_PEN_UP, { strokeKey, mac, stroke, section, owner, book, page });\r\n  }\r\n}","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\components\\buttons\\RotateButton.tsx",["579","580","581","582"],"import React, { Component, useState } from \"react\";\r\nimport '../../styles/buttons.css';\r\nimport Tooltip, { TooltipProps } from '@material-ui/core/Tooltip';\r\nimport { Theme, Typography, withStyles } from '@material-ui/core';\r\nimport icon_portrait_n from '../../icons/icon_portrait_n.png';\r\nimport icon_portrait_p from \"../../icons/icon_portrait_p.png\";\r\nimport icon_landscape_n from \"../../icons/icon_landscape_n.png\";\r\nimport icon_landscape_p from \"../../icons/icon_landscape_p.png\";\r\n\r\nconst RotateTooltip = withStyles((theme: Theme) => ({\r\n  tooltip: {\r\n      backgroundColor: '#f5f5f9',\r\n      color: 'rgba(0, 0, 0, 0.87)',\r\n      maxWidth: 240,\r\n      fontSize: theme.typography.pxToRem(12),\r\n      border: '1px solid #dadde9',\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default class RotateButton extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"btn-group dropright\" role=\"group\">\r\n      <button type=\"button\" id=\"btn_rotate\" title=\"Rotate\" className=\"btn btn-neo btn-neo-vertical\">\r\n        <RotateTooltip placement=\"left\" title={\r\n            <React.Fragment>\r\n                <Typography color=\"inherit\">Rotate</Typography>\r\n                <em>{\"종이 또는 스마트 플레이트의 입력이 회전되어 반영될지 아닐지를 선택합니다.\"}</em>\r\n                <br></br>\r\n                <b>{\"TAB 가로쓰기/세로쓰기 전환\"}</b>\r\n            </React.Fragment>\r\n                }>\r\n            <div className=\"c2\">\r\n              <img src= {icon_portrait_n} className=\"toggle-off normal-image\"></img>\r\n              <img src= {icon_portrait_p} className=\"toggle-off hover-image\"></img>\r\n              <img src= {icon_landscape_n} className=\"toggle-on normal-image\"></img>\r\n              <img src= {icon_landscape_p} className=\"toggle-on hover-image\"></img>\r\n            </div>\r\n        </RotateTooltip>\r\n      </button>\r\n    </div>\r\n      );\r\n  }\r\n}","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\components\\buttons\\ConnectButton.tsx",["583","584","585","586","587","588","589"],"import React, { Component, useState } from \"react\";\r\n\r\nimport '../../styles/buttons.css';\r\nimport Tooltip, { TooltipProps } from '@material-ui/core/Tooltip';\r\nimport { Theme, Typography, withStyles } from '@material-ui/core';\r\nimport PenManager from '../../neosmartpen/pencomm/PenManager'\r\nimport {PenEventName,} from '../../neosmartpen';\r\n\r\nimport icon_smartpen_connected_p from '../../icons/icon_smartpen_connected_p.png';\r\nimport icon_smartpen_disconnected_n from '../../icons/icon_smartpen_disconnected_n.png'; \r\nimport icon_smartpen_connected_n from '../../icons/icon_smartpen_connected_n.png'; \r\nimport icon_smartpen_disconnected_p from '../../icons/icon_smartpen_disconnected_p.png'; \r\nconst ConnectTooltip = withStyles((theme: Theme) => ({\r\n  tooltip: {\r\n      backgroundColor: '#f5f5f9',\r\n      color: 'rgba(0, 0, 0, 0.87)',\r\n      maxWidth: 240,\r\n      fontSize: theme.typography.pxToRem(12),\r\n      border: '1px solid #dadde9',\r\n  },\r\n}))(Tooltip);\r\n\r\nconst ConnectButton = (props) => {\r\n\r\n  /**\r\n   * @param {{pen:NeoSmartpen, mac:string, event:PenEvent}} e\r\n   */\r\n  const onPenLinkChanged = e => {\r\n    props.onPenLinkChanged(e);\r\n  };\r\n\r\n  const handleConnectPen = () => {\r\n    const penManager = PenManager.getInstance();\r\n    let new_pen = penManager.createPen();\r\n\r\n    if (new_pen.connect()) {\r\n      new_pen.addEventListener(PenEventName.ON_CONNECTED, onPenLinkChanged);\r\n      new_pen.addEventListener(PenEventName.ON_DISCONNECTED, onPenLinkChanged);\r\n\r\n      //실제 device가 연결되기도 전인 pen 생성자에서 해줄 이유는 없는거 같으니\r\n      new_pen.initHoverCursor();\r\n      new_pen.initPenTracker();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"btn-group-vertical neo_shadow\" style = {{ marginBottom: 10 }}>\r\n      <button id=\"btn_connect\" type=\"button\" className=\"btn btn-neo btn-neo-vertical\" title=\"Connect\">\r\n      <ConnectTooltip placement=\"left\" title={\r\n          <React.Fragment>\r\n              <Typography color=\"inherit\">Pen Connect</Typography>\r\n              <em>{\"블루투스를 통해 펜을 연결합니다. 블루투스 통신이 가능한 환경에서만 동작합니다.\"}</em>\r\n              <br></br>\r\n              <b>{\"Shift + 1~7 각 펜의 내용을 감추기/보이기, P 모든 펜의 획을 감추기/보이기\"}</b>\r\n          </React.Fragment>\r\n              } onClick={() => handleConnectPen()}>\r\n          <div className=\"c2 \">\r\n            <img src={icon_smartpen_connected_p} className=\"toggle-off hover-image\"></img>\r\n            <img src={icon_smartpen_disconnected_n} className=\"toggle-off normal-image\"></img>\r\n            <img src={icon_smartpen_connected_n} className=\"toggle-on normal-image\"></img>\r\n            <img src={icon_smartpen_disconnected_p} className=\"toggle-on hover-image\"></img>\r\n\r\n            <span id=\"pen_id\" className=\"pen-badge badge badge-pill badge-light\">0/0</span>\r\n          </div>\r\n        </ConnectTooltip>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConnectButton;","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\components\\buttons\\BackgroundButton.tsx",["590","591","592"],"import React, { Component, useState } from \"react\";\r\nimport '../../styles/buttons.css';\r\nimport ThemeManager from \"../../styles/ThemeManager\";\r\n\r\nimport icon_background_n from \"../../icons/icon_background_n.png\";\r\nimport icon_background_p from \"../../icons/icon_background_p.png\";\r\nimport icon_bg_gd01_n from \"../../icons/icon_bg_gd01_n.png\";\r\nimport icon_bg_gd01_p from \"../../icons/icon_bg_gd01_p.png\";\r\nimport icon_bg_gd02_n from \"../../icons/icon_bg_gd02_n.png\";\r\nimport icon_bg_gd02_p from \"../../icons/icon_bg_gd02_p.png\";\r\n\r\nimport icon_bg_wh_n from \"../../icons/icon_bg_wh_n.png\";\r\nimport icon_bg_wh_p from \"../../icons/icon_bg_wh_p.png\";\r\nimport icon_bg_bk_n from \"../../icons/icon_bg_bk_n.png\";\r\nimport icon_bg_bk_p from \"../../icons/icon_bg_bk_p.png\";\r\n\r\n\r\nconst themeManager: ThemeManager = ThemeManager.getInstance();\r\n\r\nexport default class BackgroundButton extends React.Component {\r\n  render() {\r\n    return (\r\n        <div className=\"btn-group dropright\" role=\"group\">\r\n          <button type=\"button\" id=\"btn_background\" title=\"Backgrounds\" className=\"btn btn-neo btn-neo-vertical\"\r\n              data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n              <div className=\"c2\">\r\n                  <img src={icon_background_n} className=\"normal-image\"></img>\r\n                  <img src={icon_background_p} className=\"hover-image\"></img>\r\n              </div>\r\n          </button>\r\n\r\n          <div className=\"dropdown-menu p-0 border border-0 \" aria-labelledby=\"btn_background\">\r\n            <a className=\"dropdown-item\" href=\"#\">\r\n\r\n              <a id=\"btn_bg_gd\" className=\"dropdown-item\" href=\"javascript:void(0)\"\r\n              onClick={() => themeManager.setT1()}>\r\n                  <div className=\"c2\">\r\n                      <img src={icon_bg_gd01_n} className=\"normal-image\"></img>\r\n                      <img src={icon_bg_gd01_p} className=\"hover-image\"></img>\r\n                      <span className=\"bg-dropmenu\">Gurodong</span>\r\n                  </div>\r\n              </a>\r\n\r\n              <a id=\"btn_bg_avan\" className=\"dropdown-item\" href=\"javascript:void(0)\"\r\n              onClick={() => themeManager.setT2()}>\r\n                  <div className=\"c2\">\r\n                      <img src={icon_bg_gd02_n} className=\"normal-image\"></img>\r\n                      <img src={icon_bg_gd02_p} className=\"hover-image\"></img>\r\n                      <span className=\"bg-dropmenu\">Aubergine</span>\r\n                  </div>\r\n              </a>\r\n\r\n              <a id=\"btn_bg_white\" className=\"dropdown-item\" href=\"javascript:void(0)\"\r\n              onClick={() => themeManager.setT4()}>\r\n                  <div className=\"c2\">\r\n                      <img src={icon_bg_wh_n} className=\"normal-image\"></img>\r\n                      <img src={icon_bg_wh_p} className=\"hover-image\"></img>\r\n                      <span className=\"bg-dropmenu\">White</span>\r\n                  </div>\r\n              </a>\r\n\r\n              <a id=\"btn_bg_black\" className=\"dropdown-item\" href=\"javascript:void(0)\" \r\n              onClick={() => themeManager.setT5()}>\r\n                  <div className=\"c2\">\r\n                      <img src={icon_bg_bk_n} className=\"normal-image\"></img>\r\n                      <img src={icon_bg_bk_p} className=\"hover-image\"></img>\r\n                      <span className=\"bg-dropmenu\">Black</span>\r\n                  </div>\r\n              </a>\r\n            </a>  \r\n          </div> \r\n        </div>\r\n      );\r\n  }\r\n}","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\components\\buttons\\PenTypeButton.tsx",["593","594","595","596","597","598","599","600","601","602","603"],"import React, { Component, useState } from \"react\";\r\nimport '../../styles/buttons.css';\r\nimport Tooltip, { TooltipProps } from '@material-ui/core/Tooltip';\r\nimport { Theme, Typography, withStyles } from '@material-ui/core';\r\nimport PenManager from \"../../neosmartpen/pencomm/PenManager\";\r\nimport { IBrushType } from \"../../neosmartpen/DataStructure\";\r\n\r\nconst PenTypeTooltip = withStyles((theme: Theme) => ({\r\n    tooltip: {\r\n        backgroundColor: '#f5f5f9',\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n        maxWidth: 240,\r\n        fontSize: theme.typography.pxToRem(12),\r\n        border: '1px solid #dadde9',\r\n    },\r\n}))(Tooltip);\r\n\r\nconst manager: PenManager = PenManager.getInstance();\r\n\r\nexport default class PenTypeButton extends React.Component {\r\n  shouldComponentUpdate(nextProps: any, nextState: any) {\r\n    return false;\r\n  }\r\n    \r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n            <button id=\"btn_brush\" disabled type=\"button\" title=\"Pen type\"\r\n                className=\"bind-popover btn btn-neo btn-neo-vertical\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n                aria-expanded=\"false\">\r\n                <PenTypeTooltip placement=\"left\" title={\r\n                    <React.Fragment>\r\n                        <Typography color=\"inherit\">Pen Type</Typography>\r\n                        <em>{\"펜과 형광펜, 지우개 중 하나를 선택하는 버튼입니다.\"}</em>\r\n                        <br></br>\r\n                        <b>{\"Q 펜, W 형광펜, E 지우개, A~G 굵기 선택\"}</b>\r\n                    </React.Fragment>\r\n                        }>\r\n                    <div className=\"c2 disabled state_0\">\r\n                        <img src={require(\"../../icons/icon_pen_n.png\")} className=\"state_0 normal-image\"></img>\r\n                        <img src={require(\"../../icons/icon_pen_p.png\")} className=\"state_0 hover-image\"></img>\r\n\r\n                        <img src={require(\"../../icons/icon_highlight_n.png\")} className=\"state_1 normal-image\"></img>\r\n                        <img src={require(\"../../icons/icon_highlight_p.png\")} className=\"state_1 hover-image\"></img>\r\n\r\n                        <img src={require(\"../../icons/icon_eraser_n.png\")} className=\"state_2 normal-image\"></img>\r\n                        <img src={require(\"../../icons/icon_eraser_p.png\")} className=\"state_2 hover-image\"></img>\r\n\r\n                        <span id=\"thickness_num\" className=\"thickness-badge badge badge-pill badge-secondary\">2</span>\r\n                    </div>\r\n                </PenTypeTooltip>\r\n            </button>\r\n\r\n            <div className=\"dropdown-menu dropdown-menu-right p-0 border border-0\" aria-labelledby=\"btn_brush\">\r\n                {/* 펜/형광펜 */}\r\n                <div className=\"btn-group\">\r\n                    <button id=\"btn_pen\" type=\"button\" className=\"btn btn-neo btn-neo-dropdown\"\r\n                    onClick={() => manager.setPenRendererType(IBrushType.PEN)}>\r\n                    <PenTypeTooltip placement=\"left\" title={\r\n                        <React.Fragment>\r\n                            <Typography color=\"inherit\">Pen Type</Typography>\r\n                            <em>{\"펜과 형광펜, 지우개 중 하나를 선택하는 버튼입니다.\"}</em>\r\n                            <br></br>\r\n                            <b>{\"Q 펜, W 형광펜, E 지우개, A~G 굵기 선택\"}</b>\r\n                        </React.Fragment>\r\n                            }>\r\n                        <div className=\"c2\">\r\n                            <img src = { require(\"../../icons/icon_pen_n.png\") } className=\"normal-image\"></img>\r\n                            <img src = { require(\"../../icons/icon_pen_p.png\") } className=\"hover-image\"></img>\r\n                        </div>\r\n                    </PenTypeTooltip>\r\n                    </button>\r\n                    <button id=\"btn_marker\" type=\"button\" className=\"btn btn-neo btn-neo-dropdown\" \r\n                    onClick={() => manager.setPenRendererType(IBrushType.MARKER)}>\r\n                        <PenTypeTooltip placement=\"left\" title={\r\n                            <React.Fragment>\r\n                                <Typography color=\"inherit\">Pen Type</Typography>\r\n                                <em>{\"펜과 형광펜, 지우개 중 하나를 선택하는 버튼입니다.\"}</em>\r\n                                <br></br>\r\n                                <b>{\"Q 펜, W 형광펜, E 지우개, A~G 굵기 선택\"}</b>\r\n                            </React.Fragment>\r\n                                }>\r\n                            <div className=\"c2\">\r\n                                <img src= { require(\"../../icons/icon_highlight_n.png\") } className=\"normal-image\"></img>\r\n                                <img src= { require(\"../../icons/icon_highlight_p.png\") } className=\"hover-image\"></img>\r\n                            </div>\r\n                        </PenTypeTooltip>\r\n                    </button>\r\n                    <button id=\"btn_eraser\" type=\"button\" className=\"btn btn-neo btn-neo-dropdown\" \r\n                    onClick={() => manager.setPenRendererType(IBrushType.ERASER)}>\r\n                        <PenTypeTooltip placement=\"left\" title={\r\n                            <React.Fragment>\r\n                                <Typography color=\"inherit\">Pen Type</Typography>\r\n                                <em>{\"펜과 형광펜, 지우개 중 하나를 선택하는 버튼입니다.\"}</em>\r\n                                <br></br>\r\n                                <b>{\"Q 펜, W 형광펜, E 지우개, A~G 굵기 선택\"}</b>\r\n                            </React.Fragment>\r\n                                }>\r\n                            <div className=\"c2\">\r\n                                <img src = { require(\"../../icons/icon_eraser_n.png\") } className=\"normal-image\"></img>\r\n                                <img src = { require(\"../../icons/icon_eraser_p.png\") } className=\"hover-image\"></img>\r\n                            </div>\r\n                        </PenTypeTooltip>\r\n                    </button>\r\n                </div>\r\n\r\n                {/* 선 굵기 */}\r\n                <div className=\"dropdown-divider\"></div>\r\n                <div className=\"btn-group\">\r\n                    <button id=\"btn_thick_1\" type=\"button\" className=\"btn btn-neo btn-neo-dropdown\" onClick={() => manager.setThickness(1)}>\r\n                        <PenTypeTooltip placement=\"left\" title={\r\n                            <React.Fragment>\r\n                                <Typography color=\"inherit\">Pen Type</Typography>\r\n                                <em>{\"펜과 형광펜, 지우개 중 하나를 선택하는 버튼입니다.\"}</em>\r\n                                <br></br>\r\n                                <b>{\"Q 펜, W 형광펜, E 지우개, A~G 굵기 선택\"}</b>\r\n                            </React.Fragment>\r\n                                }>\r\n                            <div className=\"c2\">\r\n                                <img src = { require(\"../../icons/icon_thickness_01_n.png\") } className=\"normal-image\"></img>\r\n                                <img src = { require(\"../../icons/icon_thickness_01_p.png\") } className=\"hover-image\"></img>\r\n                            </div>\r\n                        </PenTypeTooltip>\r\n                    </button>\r\n                    <button id=\"btn_thick_2\" type=\"button\" className=\"btn btn-neo btn-neo-dropdown\" onClick={() => manager.setThickness(2)}>\r\n                        <PenTypeTooltip placement=\"left\" title={\r\n                            <React.Fragment>\r\n                                <Typography color=\"inherit\">Pen Type</Typography>\r\n                                <em>{\"펜과 형광펜, 지우개 중 하나를 선택하는 버튼입니다.\"}</em>\r\n                                <br></br>\r\n                                <b>{\"Q 펜, W 형광펜, E 지우개, A~G 굵기 선택\"}</b>\r\n                            </React.Fragment>\r\n                                }>\r\n                            <div className=\"c2\">\r\n                                <img src = { require(\"../../icons/icon_thickness_02_n.png\") } className=\"normal-image\"></img>\r\n                                <img src = { require(\"../../icons/icon_thickness_02_p.png\") } className=\"hover-image\"></img>\r\n                            </div>\r\n                        </PenTypeTooltip> \r\n                    </button>\r\n                    <button id=\"btn_thick_3\" type=\"button\" className=\"btn btn-neo btn-neo-dropdown\" onClick={() => manager.setThickness(3)}>\r\n                        <PenTypeTooltip placement=\"left\" title={\r\n                            <React.Fragment>\r\n                                <Typography color=\"inherit\">Pen Type</Typography>\r\n                                <em>{\"펜과 형광펜, 지우개 중 하나를 선택하는 버튼입니다.\"}</em>\r\n                                <br></br>\r\n                                <b>{\"Q 펜, W 형광펜, E 지우개, A~G 굵기 선택\"}</b>\r\n                            </React.Fragment>\r\n                                }>\r\n                            <div className=\"c2\">\r\n                                <img src = { require(\"../../icons/icon_thickness_03_n.png\") } className=\"normal-image\"></img>\r\n                                <img src = { require(\"../../icons/icon_thickness_03_p.png\") } className=\"hover-image\"></img>\r\n                            </div>\r\n                        </PenTypeTooltip> \r\n                    </button>\r\n                    <button id=\"btn_thick_4\" type=\"button\" className=\"btn btn-neo btn-neo-dropdown\" onClick={() => manager.setThickness(4)}>\r\n                        <PenTypeTooltip placement=\"left\" title={\r\n                            <React.Fragment>\r\n                                <Typography color=\"inherit\">Pen Type</Typography>\r\n                                <em>{\"펜과 형광펜, 지우개 중 하나를 선택하는 버튼입니다.\"}</em>\r\n                                <br></br>\r\n                                <b>{\"Q 펜, W 형광펜, E 지우개, A~G 굵기 선택\"}</b>\r\n                            </React.Fragment>\r\n                                }>\r\n                            <div className=\"c2\">\r\n                                <img src = { require(\"../../icons/icon_thickness_04_n.png\") } className=\"normal-image\"></img>\r\n                                <img src = { require(\"../../icons/icon_thickness_04_p.png\") } className=\"hover-image\"></img>\r\n                            </div>\r\n                        </PenTypeTooltip> \r\n                    </button>\r\n                    <button id=\"btn_thick_5\" type=\"button\" className=\"btn btn-neo btn-neo-dropdown\" onClick={() => manager.setThickness(5)}>\r\n                        <PenTypeTooltip placement=\"left\" title={\r\n                            <React.Fragment>\r\n                                <Typography color=\"inherit\">Pen Type</Typography>\r\n                                <em>{\"펜과 형광펜, 지우개 중 하나를 선택하는 버튼입니다.\"}</em>\r\n                                <br></br>\r\n                                <b>{\"Q 펜, W 형광펜, E 지우개, A~G 굵기 선택\"}</b>\r\n                            </React.Fragment>\r\n                                }>\r\n                            <div className=\"c2\">\r\n                                <img src = { require(\"../../icons/icon_thickness_05_n.png\") } className=\"normal-image\"></img>\r\n                                <img src = { require(\"../../icons/icon_thickness_05_p.png\") } className=\"hover-image\"></img>\r\n                            </div>\r\n                        </PenTypeTooltip> \r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n  }\r\n}","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\components\\buttons\\FitButton.tsx",["604","605","606","607"],"import React, { Component, useState } from \"react\";\r\nimport '../../styles/buttons.css';\r\nimport Tooltip, { TooltipProps } from '@material-ui/core/Tooltip';\r\nimport { Theme, Typography, withStyles } from '@material-ui/core';\r\n\r\nimport icon_ratio_n from \"../../icons/icon_ratio_n.png\";\r\nimport icon_ratio_p from \"../../icons/icon_ratio_p.png\";\r\nimport icon_fit_width_n from \"../../icons/icon_fit_width_n.png\";\r\nimport icon_fit_width_p from \"../../icons/icon_fit_width_p.png\";\r\nimport icon_fit_height_n from \"../../icons/icon_fit_height_n.png\";\r\nimport icon_fit_height_p from \"../../icons/icon_fit_height_p.png\";\r\nimport icon_fit_canvas_n from \"../../icons/icon_fit_canvas_n.png\";\r\nimport icon_fit_canvas_p from \"../../icons/icon_fit_canvas_p.png\";\r\nimport icon_fit_paper_n from \"../../icons/icon_fit_paper_n.png\";\r\nimport icon_fit_paper_p from \"../../icons/icon_fit_paper_p.png\";\r\n\r\nconst FitTooltip = withStyles((theme: Theme) => ({\r\n  tooltip: {\r\n      backgroundColor: '#f5f5f9',\r\n      color: 'rgba(0, 0, 0, 0.87)',\r\n      maxWidth: 240,\r\n      fontSize: theme.typography.pxToRem(12),\r\n      border: '1px solid #dadde9',\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default class FitButton extends React.Component {\r\n  render() {\r\n    return (\r\n    <React.Fragment>\r\n      <div className=\"btn-group dropright\" role=\"group\">\r\n          <button type=\"button\" id=\"btn_fit\" title=\"Fit\" className=\"btn btn-neo btn-neo-vertical\" data-toggle=\"dropdown\"\r\n              aria-haspopup=\"true\" aria-expanded=\"false\">\r\n              <FitTooltip placement=\"left\" title={\r\n                <React.Fragment>\r\n                    <Typography color=\"inherit\">Fit</Typography>\r\n                    <em>{\"용지의 크기를 맞추는 여러 옵션 중 하나를 선택합니다.\"}</em>\r\n                    <br></br>\r\n                    <b>{\"Z 폭 맞춤, X 높이 맞춤, C 전체 페이지, V 100%\"}</b>\r\n                </React.Fragment>\r\n                    }>\r\n                <div className=\"c2\">\r\n                  <img src={icon_ratio_n} className=\"normal-image\"></img>\r\n                  <img src={icon_ratio_p} className=\"hover-image\"></img>\r\n                </div>\r\n            </FitTooltip>\r\n          </button>\r\n          <div className=\"dropdown-menu p-0 border border-0 \" aria-labelledby=\"btn_eraser\">\r\n              <a id=\"btn_fit_width\" className=\"dropdown-item\" href=\"javascript:void(0)\">\r\n                  <div className=\"c2\">\r\n                      <img src={icon_fit_width_n} className=\"normal-image\"></img>\r\n                      <img src={icon_fit_width_p} className=\"hover-image\"></img>\r\n                      <span className=\"bg-dropmenu\" data-l10n-id=\"page_scale_width\">Fit to width</span>\r\n                  </div>\r\n              </a>\r\n              <a id=\"btn_fit_height\" className=\"dropdown-item\" href=\"javascript:void(0)\">\r\n                  <div className=\"c2\">\r\n                      <img src={icon_fit_height_n} className=\"normal-image\"></img>\r\n                      <img src={icon_fit_height_p} className=\"hover-image\"></img>\r\n                      <span className=\"bg-dropmenu\" data-l10n-id=\"page_scale_fit\">Fit to height</span>\r\n                  </div>\r\n              </a>\r\n              <a id=\"btn_fit_canvas\" className=\"dropdown-item\" href=\"javascript:void(0)\">\r\n                  <div className=\"c2\">\r\n                      <img src={icon_fit_canvas_n} className=\"normal-image\"></img>\r\n                      <img src={icon_fit_canvas_p} className=\"hover-image\"></img>\r\n                      <span className=\"bg-dropmenu\" data-l10n-id=\"page_scale_auto\">Fit to full page</span>\r\n                  </div>\r\n              </a>\r\n              <a id=\"btn_fit_paper\" className=\"dropdown-item\" href=\"javascript:void(0)\">\r\n                  <div className=\"c2\">\r\n                      <img src={icon_fit_paper_n} className=\"normal-image\"></img>\r\n                      <img src={icon_fit_paper_p} className=\"hover-image\"></img>\r\n                      <span className=\"bg-dropmenu\" data-l10n-id=\"page_scale_actual\">Fit to 100%</span>\r\n                  </div>\r\n              </a>\r\n          </div>\r\n      </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\components\\buttons\\TracePointButton.tsx",["608","609","610","611","612","613","614","615","616"],"import React, { Component, useState } from \"react\";\r\nimport '../../styles/buttons.css';\r\nimport { connect, useSelector, useDispatch } from 'react-redux';\r\nimport { setPointerTracer } from '../../store/reducers/pointerTracer';\r\nimport jQuery from \"jquery\";\r\nimport { RootState } from '../../store/rootReducer';\r\n\r\nimport icon_point_d from \"../../icons/icon_point_d.png\";\r\nimport icon_point_p from \"../../icons/icon_point_p.png\";\r\nimport icon_point_n from \"../../icons/icon_point_n.png\";\r\n\r\nlet $ = jQuery;\r\n\r\nconst TracePointButton = () => {\r\n  const isTrace = useSelector((state:RootState) => state.pointerTracer.isTrace)\r\n  const dispatch = useDispatch();\r\n\r\n  const setEnable = (elem_name: string, sw: boolean) => {\r\n    var $elem = $(`#${elem_name}`);\r\n    if (sw) {\r\n        let $elem = $(\"#btn_tracepoint\").find(\".c2\");\r\n        $elem.addClass(\"checked\");\r\n    } else {\r\n        let $elem = $(\"#btn_tracepoint\").find(\".c2\");\r\n        $elem.removeClass(\"checked\");\r\n    }\r\n  }\r\n  \r\n  const onTogglePointerTracer = () => {\r\n    dispatch(setPointerTracer(!isTrace));\r\n    setEnable(\"btn_tracepoint\", isTrace);\r\n  }\r\n\r\n    return (\r\n      <button id=\"btn_tracepoint\" type=\"button\" className=\"btn btn-neo btn-neo-vertical\" title=\"Trace Point\"\r\n      onClick = {() => onTogglePointerTracer()}>\r\n          <div className=\"c2 checked\">\r\n              <img src={icon_point_d} className=\"toggle-off normal-image\"></img>\r\n              <img src={icon_point_p} className=\"toggle-off hover-image\"></img>\r\n              <img src={icon_point_n} className=\"toggle-on normal-image\"></img>\r\n              <img src={icon_point_p} className=\"toggle-on hover-image\"></img>\r\n          </div>\r\n      </button>\r\n    );\r\n}\r\nexport default TracePointButton;","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\components\\buttons\\FullScreenButton.tsx",["617","618","619","620"],"import React, { Component, useState } from \"react\";\r\nimport '../../styles/buttons.css';\r\nimport Tooltip, { TooltipProps } from '@material-ui/core/Tooltip';\r\nimport { Theme, Typography, withStyles } from '@material-ui/core';\r\nimport ThemeManager from \"../../styles/ThemeManager\";\r\n\r\nimport icon_fullscreen_n from \"../../icons/icon_fullscreen_n.png\";\r\nimport icon_fullscreen_p from \"../../icons/icon_fullscreen_p.png\";\r\n\r\nconst FullscreenTooltip = withStyles((theme: Theme) => ({\r\n  tooltip: {\r\n      backgroundColor: '#f5f5f9',\r\n      color: 'rgba(0, 0, 0, 0.87)',\r\n      maxWidth: 240,\r\n      fontSize: theme.typography.pxToRem(12),\r\n      border: '1px solid #dadde9',\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default class FullScreenButton extends React.Component {\r\n  render() {\r\n    return (\r\n      <button id=\"btn_fullscreen\" type=\"button\" className=\"btn btn-neo btn-neo-vertical\" title=\"Fullscreen\"\r\n      onClick = {() => ThemeManager.getInstance().toggleFullScreen()}>\r\n          <FullscreenTooltip placement=\"left\" title={\r\n          <React.Fragment>\r\n              <Typography color=\"inherit\">Fullscreen</Typography>\r\n              <em>{\"전체 화면으로 표시합니다. \"}</em>\r\n              <br></br>\r\n              <b>{\"돌아가려면 [ESC]키를 눌러야 합니다.\"}</b>\r\n          </React.Fragment>\r\n              }>\r\n          <div className=\"c2\">\r\n              <img src={icon_fullscreen_n} className=\"normal-image\"></img>\r\n              <img src={icon_fullscreen_p} className=\"hover-image\"></img>\r\n          </div>\r\n        </FullscreenTooltip>\r\n      </button>\r\n      );\r\n  }\r\n}","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\components\\buttons\\ZoomButton.tsx",["621","622","623"],"import React, { Component, useState } from \"react\";\r\nimport '../../styles/buttons.css';\r\n\r\nimport icon_zoom_n from \"../../icons/icon_zoom_n.png\";\r\nimport icon_zoom_p from \"../../icons/icon_zoom_p.png\";\r\nexport default class ZoomButton extends React.Component {\r\n  render() {\r\n    return (\r\n      <button id=\"btn_zoom\" type=\"button\" disabled className=\"btn btn-neo has-badge\" title=\"Zoom\" data-container=\"body\"\r\n          data-toggle=\"popover\" data-placement=\"left\" data-trigger=\"focus\" data-html=\"true\"\r\n          data-target=\"#my-popover-content\">\r\n          <div className=\"c2 disabled\">\r\n              <img src={ icon_zoom_n } className=\"normal-image\"></img>\r\n              <img src={ icon_zoom_p } className=\"hover-image\"></img>\r\n          </div>\r\n          <span id=\"zoom-ratio\" className=\"zoom-badge badge badge-pill badge-info\">100%</span>\r\n      </button>\r\n      );\r\n  }\r\n}","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\components\\navbar\\ColorButtons.tsx",["624","625"],"import React from 'react';\r\nimport '../../styles/main.css';\r\nimport PenManager from \"../../neosmartpen/pencomm/PenManager\";\r\nimport Tooltip, { TooltipProps } from '@material-ui/core/Tooltip';\r\nimport { Theme, Typography, withStyles } from '@material-ui/core';\r\n\r\nconst manager: PenManager = PenManager.getInstance();\r\n\r\nconst PenColorTooltip = withStyles((theme: Theme) => ({\r\n    tooltip: {\r\n        backgroundColor: '#f5f5f9',\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n        maxWidth: 240,\r\n        fontSize: theme.typography.pxToRem(12),\r\n        border: '1px solid #dadde9',\r\n    },\r\n}))(Tooltip);\r\n\r\nconst ColorButtons = () => {\r\n    \r\n    return (\r\n        // <div className=\"color_bar neo_shadow float-left bottom_text color_bar\">\r\n        <React.Fragment>\r\n          <div className=\"btn-group\">\r\n              <button id=\"clr_1\" type=\"button\" className=\"btn btn-neo color_btn othercolors\" title=\"color 1\" \r\n                onClick={() => manager.setColor(1)}>\r\n                  <PenColorTooltip placement=\"top\" title={\r\n                        <React.Fragment>\r\n                            <Typography color=\"inherit\">Pen Color [RED]</Typography>\r\n                            <em>{\"표시되는 펜의 색상을 선택합니다\"}</em>\r\n                            <br></br>\r\n                            <b>{\"키보드 버튼 1로 선택 가능합니다\"}</b>\r\n                        </React.Fragment>\r\n                    }>\r\n                        <div className=\"color_icon color_1\">\r\n                        </div>\r\n                    </PenColorTooltip>\r\n              </button>\r\n\r\n              <button id=\"clr_2\" type=\"button\" className=\"btn btn-neo color_btn\" title=\"Pen color\"\r\n                onClick={() => manager.setColor(2)}>\r\n                  <PenColorTooltip placement=\"top\" title={\r\n                        <React.Fragment>\r\n                            <Typography color=\"inherit\">Pen Color [YELLOW]</Typography>\r\n                            <em>{\"표시되는 펜의 색상을 선택합니다\"}</em>\r\n                            <br></br>\r\n                            <b>{\"키보드 버튼 2로 선택 가능합니다\"}</b>\r\n                        </React.Fragment>\r\n                    }>\r\n                        <div className=\"color_icon color_2\">\r\n                        </div>\r\n                    </PenColorTooltip>\r\n              </button>\r\n              <button id=\"clr_3\" type=\"button\" className=\"btn btn-neo color_btn othercolors\" title=\"color 3\"\r\n                onClick={() => manager.setColor(3)}>\r\n                  <PenColorTooltip placement=\"top\" title={\r\n                        <React.Fragment>\r\n                            <Typography color=\"inherit\">Pen Color [NAVY]</Typography>\r\n                            <em>{\"표시되는 펜의 색상을 선택합니다\"}</em>\r\n                            <br></br>\r\n                            <b>{\"키보드 버튼 3로 선택 가능합니다\"}</b>\r\n                        </React.Fragment>\r\n                    }>\r\n                        <div className=\"color_icon color_3\">\r\n                        </div>\r\n                    </PenColorTooltip>\r\n              </button>\r\n              <button id=\"clr_4\" type=\"button\" className=\"btn btn-neo color_btn othercolors\" title=\"color 4\"\r\n                onClick={() => manager.setColor(4)}>\r\n                  <PenColorTooltip placement=\"top\" title={\r\n                        <React.Fragment>\r\n                            <Typography color=\"inherit\">Pen Color [BLACK]</Typography>\r\n                            <em>{\"표시되는 펜의 색상을 선택합니다\"}</em>\r\n                            <br></br>\r\n                            <b>{\"키보드 버튼 4로 선택 가능합니다\"}</b>\r\n                        </React.Fragment>\r\n                    }>\r\n                        <div className=\"color_icon color_4\">\r\n                        </div>\r\n                    </PenColorTooltip>\r\n              </button>\r\n              <button id=\"clr_5\" type=\"button\" className=\"btn btn-neo  color_btn othercolors\" title=\"color 5\"\r\n                onClick={() => manager.setColor(5)}>\r\n                  <PenColorTooltip placement=\"top\" title={\r\n                        <React.Fragment>\r\n                            <Typography color=\"inherit\">Pen Color [LIGHT_GRAY]</Typography>\r\n                            <em>{\"표시되는 펜의 색상을 선택합니다\"}</em>\r\n                            <br></br>\r\n                            <b>{\"키보드 버튼 5로 선택 가능합니다\"}</b>\r\n                        </React.Fragment>\r\n                    }>\r\n                        <div className=\"color_icon color_5\">\r\n                        </div>\r\n                    </PenColorTooltip>\r\n              </button>\r\n              <button id=\"clr_6\" type=\"button\" className=\"btn btn-neo  color_btn othercolors\" title=\"color 6\"\r\n                onClick={() => manager.setColor(6)}>\r\n                  <PenColorTooltip placement=\"top\" title={\r\n                        <React.Fragment>\r\n                            <Typography color=\"inherit\">Pen Color [ORANGE]</Typography>\r\n                            <em>{\"표시되는 펜의 색상을 선택합니다\"}</em>\r\n                            <br></br>\r\n                            <b>{\"키보드 버튼 6로 선택 가능합니다\"}</b>\r\n                        </React.Fragment>\r\n                    }>\r\n                        <div className=\"color_icon color_6\">\r\n                        </div>\r\n                    </PenColorTooltip>\r\n              </button>\r\n              <button id=\"clr_7\" type=\"button\" className=\"btn btn-neo  color_btn othercolors\" title=\"color 7\"\r\n                onClick={() => manager.setColor(7)}>\r\n                  <PenColorTooltip placement=\"top\" title={\r\n                        <React.Fragment>\r\n                            <Typography color=\"inherit\">Pen Color [GREEN]</Typography>\r\n                            <em>{\"표시되는 펜의 색상을 선택합니다\"}</em>\r\n                            <br></br>\r\n                            <b>{\"키보드 버튼 7로 선택 가능합니다\"}</b>\r\n                        </React.Fragment>\r\n                    }>\r\n                        <div className=\"color_icon color_7\">\r\n                        </div>\r\n                    </PenColorTooltip>\r\n              </button>\r\n              <button id=\"clr_8\" type=\"button\" className=\"btn btn-neo  color_btn othercolors\" title=\"color 8\"\r\n                onClick={() => manager.setColor(8)}>\r\n                  <PenColorTooltip placement=\"top\" title={\r\n                        <React.Fragment>\r\n                            <Typography color=\"inherit\">Pen Color [BLUE]</Typography>\r\n                            <em>{\"표시되는 펜의 색상을 선택합니다\"}</em>\r\n                            <br></br>\r\n                            <b>{\"키보드 버튼 8로 선택 가능합니다\"}</b>\r\n                        </React.Fragment>\r\n                    }>\r\n                        <div className=\"color_icon color_8\">\r\n                        </div>\r\n                    </PenColorTooltip>\r\n              </button>\r\n              <button id=\"clr_9\" type=\"button\" className=\"btn btn-neo  color_btn othercolors\" title=\"color 9\"\r\n                onClick={() => manager.setColor(9)}>\r\n                  <PenColorTooltip placement=\"top\" title={\r\n                        <React.Fragment>\r\n                            <Typography color=\"inherit\">Pen Color [PURPLE]</Typography>\r\n                            <em>{\"표시되는 펜의 색상을 선택합니다\"}</em>\r\n                            <br></br>\r\n                            <b>{\"키보드 버튼 9로 선택 가능합니다\"}</b>\r\n                        </React.Fragment>\r\n                    }>\r\n                        <div className=\"color_icon color_9\">\r\n                        </div>\r\n                    </PenColorTooltip>\r\n              </button>\r\n              <button id=\"clr_0\" type=\"button\" className=\"btn btn-neo color_btn othercolors\" title=\"color 0\"\r\n                onClick={() => manager.setColor(0)}>\r\n                  <PenColorTooltip placement=\"top\" title={\r\n                        <React.Fragment>\r\n                            <Typography color=\"inherit\">Pen Color [DARK_GRAY]</Typography>\r\n                            <em>{\"표시되는 펜의 색상을 선택합니다\"}</em>\r\n                            <br></br>\r\n                            <b>{\"키보드 버튼 0로 선택 가능합니다\"}</b>\r\n                        </React.Fragment>\r\n                    }>\r\n                        <div className=\"color_icon color_0\">\r\n                        </div>\r\n                    </PenColorTooltip>\r\n              </button>\r\n          </div>\r\n      {/* </div> */}\r\n      </React.Fragment>\r\n    );\r\n  }\r\nexport default ColorButtons;","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\components\\navbar\\PageNumbering.tsx",["626","627"],"import React from 'react';\r\nimport '../../styles/main.css';\r\nimport Tooltip, { TooltipProps } from '@material-ui/core/Tooltip';\r\nimport { Theme, Typography, withStyles } from '@material-ui/core';\r\n\r\nconst PageTooltip = withStyles((theme: Theme) => ({\r\n  tooltip: {\r\n      backgroundColor: '#f5f5f9',\r\n      color: 'rgba(0, 0, 0, 0.87)',\r\n      maxWidth: 240,\r\n      fontSize: theme.typography.pxToRem(12),\r\n      border: '1px solid #dadde9',\r\n  },\r\n}))(Tooltip);\r\n\r\nclass pageNumbering extends React.Component {\r\n  render() {\r\n    return (\r\n      // <div className=\"navbar-menu d-flex justify-content-center align-items-center neo_shadow\">\r\n      <React.Fragment>\r\n        <button id=\"btn_prevpage\" type=\"button\" className=\"btn btn-neo \" title=\"Previous page\">\r\n          <PageTooltip placement=\"top\" title={\r\n            <React.Fragment>\r\n                <Typography color=\"inherit\">Pre Page</Typography>\r\n                <em>{\"현재 필기 중인 페이지를, 앞쪽 페이지로 이동시킵니다.\"}</em>\r\n                <br></br>\r\n                <b>{\"키보드 버튼 Page Up으로 이동 가능합니다\"}</b>\r\n            </React.Fragment>\r\n                }>\r\n            <div className=\"c2\">\r\n              <img src={require('../../icons/icon_prev_n.png')} className=\"normal-image\"></img>\r\n              <img src={require('../../icons/icon_prev_p.png')} className=\"hover-image\"></img>\r\n            </div>\r\n          </PageTooltip>\r\n        </button>\r\n        <input type=\"text\" className=\"form-control-plaintext form-control-sm neo-form-pdf-number\" placeholder=\".form-control-sm\"\r\n            value=\"Page:\" readOnly />\r\n        <input id=\"curr_page_num\" type=\"text\" className=\"form-control form-control-sm neo-form-pdf-number\"\r\n            placeholder=\".form-control-sm\" value=\" \" />\r\n        <input id=\"page_count\" type=\"text\" className=\"form-control-plaintext form-control-sm neo-form-pdf-number\"\r\n            placeholder=\".form-control-sm\" value=\"/\" readOnly />\r\n        <button id=\"btn_nextpage\" type=\"button\" className=\"btn btn-neo \" title=\"Next page\">\r\n        <PageTooltip placement=\"top\" title={\r\n          <React.Fragment>\r\n                <Typography color=\"inherit\">Next Page</Typography>\r\n                <em>{\"현재 필기 중인 페이지를, 뒤쪽 페이지로 이동시킵니다.\"}</em>\r\n                <br></br>\r\n                <b>{\"키보드 버튼 Page Down으로 이동 가능합니다\"}</b>\r\n            </React.Fragment>\r\n                }>\r\n            <div className=\"c2\">\r\n                <img src={require('../../icons/icon_next_n.png')} className=\"normal-image\"></img>\r\n                <img src={require('../../icons/icon_next_p.png')} className=\"hover-image\"></img>\r\n            </div>\r\n          </PageTooltip>\r\n        </button>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default pageNumbering;","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\components\\navbar\\FileLoad.tsx",["628","629"],"import React from 'react';\r\nimport '../../styles/main.css';\r\nimport Tooltip, { TooltipProps } from '@material-ui/core/Tooltip';\r\nimport { Theme, Typography, withStyles } from '@material-ui/core';\r\n\r\nconst PdfFileTooltip = withStyles((theme: Theme) => ({\r\n  tooltip: {\r\n      backgroundColor: '#f5f5f9',\r\n      color: 'rgba(0, 0, 0, 0.87)',\r\n      maxWidth: 240,\r\n      fontSize: theme.typography.pxToRem(12),\r\n      border: '1px solid #dadde9',\r\n  },\r\n}))(Tooltip);\r\n\r\nclass fileLoad extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <button id=\"btn_file_open\" type=\"button\" className=\"btn btn-neo \" title=\"Open a file\">\r\n          <PdfFileTooltip placement=\"top\" title={\r\n            <React.Fragment>\r\n                <Typography color=\"inherit\">PDF File Open</Typography>\r\n                <em>{\"배경으로 쓸 PDF 파일을 엽니다. 스마트 플레이트로 조작하거나, 인쇄하여 덧필기할 수 있습니다.\"}</em>\r\n                <br></br>\r\n                <b>{\"키보드 버튼 Ctrl + O으로 이동 가능합니다\"}</b>\r\n            </React.Fragment>\r\n                }>\r\n            <div className=\"c2\">\r\n                <img src={require('../../icons/icon_file_n.png')} className=\"normal-image\"></img>\r\n                <img src={require('../../icons/icon_file_p.png')} className=\"hover-image\"></img>\r\n            </div>\r\n          </PdfFileTooltip>\r\n        </button>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default fileLoad;","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\components\\navbar\\CalibrationMenual.tsx",["630"],"import React from 'react';\r\nimport '../../styles/main.css';\r\n\r\nconst style = {\r\n  width: '36px',\r\n  height: '36px',\r\n  padding: '4px'\r\n}\r\n\r\nclass calibrationMenual extends React.Component {\r\n  render() {\r\n    return (\r\n          <button id=\"btn_start_calibration\" disabled type=\"button\" className=\"btn btn-neo\" title=\"Pairing paper with PDF\">\r\n              <div className=\"c2 disabled\">\r\n                  <img style={style} src={require('../../icons/icon_calibration_n.png')} className=\"normal-image\"></img>\r\n                  <img style={style} src={require('../../icons/icon_calibration_p.png')} className=\"hover-image\"></img>\r\n              </div>\r\n          </button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default calibrationMenual;","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\components\\navbar\\PrintButton.tsx",["631"],"import React from 'react';\r\nimport '../../styles/main.css';\r\n\r\nclass printFunction extends React.Component {\r\n  render() {\r\n    return (\r\n      // <div className=\"navbar-menu d-flex justify-content-center align-items-center neo_shadow\">\r\n      <React.Fragment>\r\n        <button id=\"btn_print_pdf\" type=\"button\" disabled className=\"btn btn-neo \" title=\"Print PDF\">\r\n            <div className=\"c2 disabled\">\r\n                <img src={require('../../icons/icon_print_n.png')} className=\"normal-image\"></img>\r\n                <img src={require('../../icons/icon_print_p.png')} className=\"hover-image\"></img>\r\n            </div>\r\n        </button>\r\n        </React.Fragment>\r\n      // </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default printFunction;","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\components\\navbar\\UpperNav.tsx",["632"],"import React from 'react';\r\nimport '../../styles/main.css';\r\nimport Upload from './Upload';\r\n// import Get from './Get';\r\n\r\nclass upperNav extends React.Component {\r\n    render() {\r\n        return (\r\n            <nav id=\"uppernav\" className=\"navbar navbar-light bg-transparent\" style={{float: \"left\"}}>\r\n                <a id=\"grida_board\" className=\"navbar-brand\" href=\"#\">Grida board\r\n                    <small id=\"neo_smartpen\" className=\"text-muted\">\r\n                        <span data-l10n-id=\"by_neosmart_pen\"> by Neo smartpen</span>\r\n                    </small>\r\n                </a>\r\n                <Upload />\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default upperNav;","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\index.js",[],"C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\index.ts",[],"C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\penstorage\\EventSystem.ts",["633","634","635","636","637","638","639","640","641","642","643","644"],"export interface PenEventFilter {\r\n  mac: string[] | undefined;\r\n  allowAll: boolean;\r\n}\r\n\r\ninterface CallbackItem {\r\n  callback: Function;\r\n  filter: PenEventFilter;\r\n}\r\n\r\nclass DispatcherEvent {\r\n  eventName: string;\r\n  callbacks: CallbackItem[];\r\n\r\n  constructor(eventName) {\r\n    this.eventName = eventName;\r\n    this.callbacks = [];\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {function} callback\r\n   * @param {{mac:string}=} filter\r\n   */\r\n  registerCallback(callback: Function, filter?: PenEventFilter) {\r\n    if (!filter) {\r\n      filter = { mac: undefined, allowAll: true };\r\n    }\r\n\r\n    this.callbacks.push({ callback, filter });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {function} callback\r\n   * @return {boolean}\r\n   */\r\n  unregisterCallback(callback: Function): boolean {\r\n    // Get the index of the callback in the callbacks array\r\n    // const index = this.callbacks.indexOf(callback);\r\n    const index = this.callbacks.findIndex((item) => item.callback === callback);\r\n\r\n    // If the callback is in the array then remove it\r\n    if (index > -1) {\r\n      this.callbacks.splice(index, 1);\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {object} data - which can have \"mac\" property to filter\r\n   */\r\n  fire(data: any) {\r\n    // We loop over a cloned version of the callbacks array\r\n    // in case the original array is spliced while looping\r\n    const callbacks = this.callbacks.slice(0);\r\n\r\n    // loop through the callbacks and call each one\r\n    callbacks.forEach((item) => {\r\n      let filter = item.filter;\r\n      if (!data.mac || filter.allowAll || !filter.mac || filter.mac === data.mac || filter.mac.indexOf(data.mac) > -1) {\r\n        item.callback(data);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default class EventDispatcher {\r\n  events: { [key: string]: DispatcherEvent };\r\n\r\n  constructor() {\r\n    this.events = {};\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {string} eventName\r\n   * @param {any} data\r\n   */\r\n  dispatch(eventName: string, data: any) {\r\n    // First we grab the event\r\n    const event = this.events[eventName];\r\n    // If the event exists then we fire it!\r\n    if (event) {\r\n      event.fire(data);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {string} eventName\r\n   * @param {function} callback\r\n   * @param {{mac:string}=} filter\r\n   */\r\n  on(eventName: string, callback: Function, filter: PenEventFilter) {\r\n    // First we grab the event from this.events\r\n    let event = this.events[eventName];\r\n\r\n    // If the event does not exist then we should create it!\r\n    if (!event) {\r\n      event = new DispatcherEvent(eventName);\r\n      this.events[eventName] = event;\r\n    }\r\n    // Now we add the callback to the event\r\n    event.registerCallback(callback, filter);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {string} eventName\r\n   * @param {function} callback\r\n   */\r\n  off(eventName: string, callback: Function) {\r\n    const event = this.events[eventName];\r\n\r\n    // Check that the event exists and it has the callback registered\r\n    if (!event) return;\r\n\r\n    const flag = event.unregisterCallback(callback);\r\n    if ( flag ) {\r\n      // if the event has no callbacks left, delete the event\r\n      if (event.callbacks.length === 0) {\r\n        delete this.events[eventName];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\components\\navbar\\Upload.js",["645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664"],"import React from 'react';\r\nimport { gapi } from 'gapi-script';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport * as PdfJs from \"pdfjs-dist\";\r\n\r\nimport { resolve } from 'path';\r\n\r\nvar FOLDER_ID = \"root\";\r\n\r\nexport default class Upload extends React.Component {\r\n  \r\n  mappingInfoUploadProcess = async () => {\r\n    var self = this;\r\n    var folderId;\r\n    gapi.load('client', function () {\r\n      gapi.client.load('drive', 'v2', async function () {\r\n        const folderResponse = await gapi.client.drive.files.list({\r\n          q: \"mimeType = 'application/vnd.google-apps.folder'\" //폴더만 걸러주는 filter\r\n        })\r\n\r\n        var folders = folderResponse.result.items;\r\n        var isGridaFolderExist = false;\r\n\r\n        if (folders && folders.length > 0) {\r\n          for (var i = 0; i < folders.length; i++) {\r\n            var folder = folders[i];\r\n            if (folder.title === 'Grida') {\r\n              isGridaFolderExist = true;\r\n              folderId = folderId;\r\n            }\r\n          }\r\n        }\r\n\r\n        if (isGridaFolderExist) {\r\n          //mappingInfo.json 있는지 확인 후 없으면\r\n          const fileResponse = await gapi.client.drive.files.list();\r\n          var files = fileResponse.result.items;\r\n          var isMappingFileExist = false;\r\n          if (files && files.length > 0) {\r\n            for (var i = 0; i < files.length; i++) {\r\n              var file = files[i];\r\n              if (file.title === 'mappingInfo.json') {\r\n                var fileId = file.id;\r\n                var getFileRequest = gapi.client.drive.files.get({\r\n                  fileId: fileId,\r\n                  alt: 'media'\r\n                })\r\n                var content = `\r\n                  {\"sobp\" : {\"s\":3,\"o\":281,\"b\":123,\"p\":2},\r\n                   \"pdf_info\" : {\"file_name\" : \"filename\",\"fp\" : \"finger print\"}\r\n                  }\r\n                `; //여기에다가 새로운 content 내용을 받을거야\r\n                getFileRequest.then(await function(response) {\r\n\r\n                  var currentMappingObj = JSON.parse(response.body);\r\n                  var newMappingObj = JSON.parse(content);\r\n\r\n                  currentMappingObj.mapping_info.push(newMappingObj);\r\n                  \r\n                  content = JSON.stringify(currentMappingObj);\r\n                  \r\n                  var contentBlob = new Blob([content], {'type': 'application/json'});\r\n                  self.updateMappingInfo(fileId, contentBlob, function(resp) {\r\n                  });\r\n                }, function(error) {\r\n                  console.error(error)\r\n                })\r\n                isMappingFileExist = true;\r\n                break;\r\n              } \r\n              if (!isMappingFileExist) {\r\n                self.createNewMappingInfo(folderId);\r\n              }\r\n            }\r\n          }\r\n        }\r\n        else if (!isGridaFolderExist) {\r\n          await self.createGridaFolder();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  updateMappingInfo = (fileId, contentBlob, callback) => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.responseType = 'json';\r\n    xhr.onreadystatechange = function() {\r\n      if (xhr.readyState != XMLHttpRequest.DONE) {\r\n        return;\r\n      }\r\n      callback(xhr.response);\r\n    };\r\n    xhr.open('PATCH', 'https://www.googleapis.com/upload/drive/v3/files/' + fileId + '?uploadType=media');\r\n    xhr.setRequestHeader('Authorization', 'Bearer ' + gapi.auth.getToken().access_token);\r\n    xhr.send(contentBlob);\r\n  }\r\n\r\n  createNewMappingInfo = async (folderId) => {\r\n    var fileContent = `\r\n    {\"mapping_info\":[\r\n      {\"sobp\" : {\"s\":3,\"o\":281,\"b\":123,\"p\":1},\r\n       \"pdf_info\" : {\"file_name\" : \"filename\",\"fp\" : \"finger print\"}\r\n      }\r\n    ]}`; //sobp object와 pdf info를 object로 받아서 stringfy해준 뒤 fileContent에 삽입\r\n    var file = new Blob([fileContent], {type: 'text/plain'});\r\n    var metadata = {\r\n        'name': 'mappingInfo.json', // Filename at Google Drive\r\n        'mimeType': 'application/json', // mimeType at Google Drive\r\n        'parents': [folderId], // Folder ID at Google Drive\r\n    };\r\n    \r\n    var accessToken = gapi.auth.getToken().access_token; // Here gapi is used for retrieving the access token.\r\n\r\n    var form = new FormData();\r\n    form.append('metadata', new Blob([JSON.stringify(metadata)], {type: 'application/json'}));\r\n    form.append('file', file);\r\n    \r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open('post', 'https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart&fields=id');\r\n    xhr.setRequestHeader('Authorization', 'Bearer ' + accessToken);\r\n    xhr.responseType = 'json';\r\n    xhr.onload = () => {\r\n        console.log('mapping info file id : ');\r\n        console.log(xhr.response.id); // Retrieve uploaded file ID.\r\n    };\r\n    xhr.send(form);\r\n  }\r\n\r\n  createGridaFolder = async () => {\r\n    var self = this;\r\n    var access_token = gapi.auth.getToken().access_token;\r\n\r\n    var request = gapi.client.request({\r\n        'path': '/drive/v2/files/',\r\n        'method': 'POST',\r\n        'headers': {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + access_token,             \r\n        },\r\n        'body':{\r\n            \"title\" : \"Grida\",\r\n            \"mimeType\" : \"application/vnd.google-apps.folder\",\r\n        }\r\n    });\r\n\r\n    request.execute(await function(resp) { \r\n      self.createNewMappingInfo(resp.id);\r\n    });\r\n  }\r\n\r\n  listFiles = () => {\r\n    gapi.load('client', function () {\r\n      gapi.client.load('drive', 'v2', function () {\r\n\r\n        var fileId = \"\";\r\n\r\n        gapi.client.drive.files.list({\r\n          'pageSize': 10,\r\n          'fields': \"*\"\r\n        }).then(function(response) {\r\n          console.log(response);\r\n          var files = response.result.items;\r\n          console.log(response.result.items);\r\n    \r\n          if (files && files.length > 0) {\r\n            for (var i = 0; i < files.length; i++) {\r\n              var file = files[i];\r\n              if (file.title === 'hi.pdf') {\r\n                console.log('file : ');\r\n                console.log(file);\r\n                fileId = file.id;\r\n              }\r\n            }\r\n          }\r\n\r\n          var request = gapi.client.drive.files.get({\r\n            fileId: fileId,\r\n            alt: 'media'\r\n          })\r\n          request.then(function(response) {\r\n            console.log(response);\r\n          }, function(error) {\r\n            console.error(error)\r\n          })\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  readMappingInfo = () => {\r\n\r\n    gapi.load('client', function () {\r\n      gapi.client.load('drive', 'v2', async function () {\r\n        const fileResponse = await gapi.client.drive.files.list();\r\n        var files = fileResponse.result.items;\r\n\r\n        if (files && files.length > 0) {\r\n          for (var i = 0; i < files.length; i++) {\r\n            var file = files[i];\r\n            if (file.title === 'mappingInfo.json') {\r\n              var fileId = file.id;\r\n              var getFileRequest = gapi.client.drive.files.get({\r\n                fileId: fileId,\r\n                alt: 'media'\r\n              })\r\n\r\n              getFileRequest.then(await function(response) {\r\n                var currentMappingObj = JSON.parse(response.body);\r\n                var content = JSON.stringify(currentMappingObj);\r\n                console.log(content);\r\n              }, function(error) {\r\n                console.error(error)\r\n              })\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  readPDF = () => {\r\n    gapi.load('client', function () {\r\n      gapi.client.load('drive', 'v2', async function () {\r\n        const fileResponse = await gapi.client.drive.files.list();\r\n        var files = fileResponse.result.items;\r\n\r\n        if (files && files.length > 0) {\r\n          for (var i = 0; i < files.length; i++) {\r\n            var file = files[i];\r\n            var fileId = file.id;\r\n            var getFileRequest = gapi.client.drive.files.get({\r\n              fileId: fileId,\r\n              alt: 'media',\r\n            });\r\n\r\n            if (file.mimeType === 'application/pdf') {\r\n              console.log(getFileRequest);\r\n              console.log(file.mimeType);\r\n\r\n              getFileRequest.then(await function(response) {\r\n                var docInitParams = { data: response.body };\r\n                PdfJs.getDocument(docInitParams).promise.then(function(pdf) {\r\n                  console.log('finger : ');\r\n                  console.log(pdf.fingerprint);\r\n                });\r\n              }, function(error) {\r\n                console.error(error)\r\n              })\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n      return (\r\n        <div>\r\n        <button id=\"mapping_info_process\" onClick={this.mappingInfoUploadProcess}>\r\n          Upload Mapping Info\r\n        </button>\r\n        <button id=\"read_mapping_info\" onClick={this.readMappingInfo}>\r\n          Read Mapping Info\r\n        </button>\r\n        <button id=\"read_mapping_info\" onClick={this.readPDF}>\r\n          Read PDF\r\n        </button>\r\n          <GoogleLogin \r\n            clientId=\"169738066451-5u100n2i6rko17jhmtpvq0bnjuedj7g4.apps.googleusercontent.com\"\r\n            buttonText=\"Login\"\r\n            onSuccess={this.responseGoogle}\r\n            onFailure={this.responseGoogle}\r\n            cookiePolicy={'single_host_origin'}\r\n          />\r\n        </div>\r\n      )\r\n  }\r\n}","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\styles\\ThemeManager.ts",["665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693"],"\r\nimport PenManager from '../neosmartpen/pencomm/PenManager';\r\nimport jQuery from \"jquery\";\r\n\r\nlet $ = jQuery;\r\nlet _thememanager_instance = null;\r\n\r\nexport default class ThemeManager {\r\n  penManager = PenManager.getInstance();\r\n  constructor() {\r\n    if (_thememanager_instance) return _thememanager_instance;\r\n  }\r\n\r\n  /**\r\n   * @return {ThemeManager}\r\n   */\r\n  static getInstance() {\r\n    if (_thememanager_instance) return _thememanager_instance;\r\n\r\n    _thememanager_instance = new ThemeManager();\r\n    return _thememanager_instance;\r\n  }\r\n  \r\n  public setFitToZoomIcon(icon_name) {\r\n      if (!icon_name) {\r\n          icon_name = \"icon_ratio\";\r\n      }\r\n\r\n      var norm_img = \"icons/\" + icon_name + \"_n.png\";\r\n      var hover_img = \"icons/\" + icon_name + \"_p.png\";\r\n\r\n      var $elem = $(\"#btn_fit\");\r\n      var $c2 = $elem.children(\".c2\");\r\n      $c2.children(\".normal-image\").attr(\"src\", norm_img);\r\n      $c2.children(\".hover-image\").attr(\"src\", hover_img);\r\n  }\r\n\r\n  public setUITextColor(c) {\r\n      document.getElementById(\"grida_board\").style.color = c;\r\n  }\r\n\r\n  public setUITextColorNormal() {\r\n      this.setUITextColor(\"#000000\");\r\n  }\r\n\r\n  public setUiTextColorInverse() {\r\n      this.setUITextColor(\"#ffffff\");\r\n  }\r\n\r\n  // white board 등\r\n  private setPenColorNormal() {\r\n      var c = this.penManager.defaultColorNum;\r\n      if (c === 1) {\r\n          // 흰색 펜이면\r\n          c = 2;\r\n      }\r\n      this.penManager.setColor(c);\r\n  }\r\n\r\n  // blackboard 등\r\n  private setPenColorInverse() {\r\n      var c = this.penManager.defaultColorNum;\r\n      if (c === 2) {\r\n          // 검은색 펜이면\r\n          c = 1;\r\n      }\r\n\r\n      this.penManager.setColor(c);\r\n  }\r\n\r\n  private setThemeDark(val) {\r\n      if (val) {\r\n          this.setPenColorInverse();\r\n          this.setUiTextColorInverse();\r\n      } else {\r\n          this.setPenColorNormal();\r\n          this.setUITextColorNormal();\r\n      }\r\n  }\r\n\r\n  // Theme 1: Gurodong\r\n  public setT1() {\r\n      document.body.style.backgroundColor = \"rgb(255,229,237)\";\r\n      document.body.style.backgroundImage = \"-o-linear-gradient(bottom, rgb(255,229,237) 0%, rgb(224,255,233) 100%)\";\r\n      document.body.style.backgroundImage = \"-moz-linear-gradient(bottom, rgb(255,229,237) 0%, rgb(224,255,233) 100%)\";\r\n      document.body.style.backgroundImage = \"-webkit-linear-gradient(bottom, rgb(255,229,237) 0%, rgb(224,255,233) 100%)\";\r\n      document.body.style.backgroundImage = \"-ms-linear-gradient(bottom, rgb(255,229,237) 0%, rgb(224,255,233) 100%)\";\r\n      document.body.style.backgroundImage = \"linear-gradient(bottom, rgb(255,229,237) 0%, rgb(224,255,233) 100%)\";\r\n      this.setThemeDark(false);\r\n  }\r\n\r\n  // Theme 2: Aubergine\r\n  public setT2() {\r\n      document.body.style.backgroundColor = \"#cc2b5e\";\r\n      document.body.style.backgroundImage = \"-webkit-linear-gradient(bottom, #cc2b5e 0%, #753a88 100%)\";\r\n      this.setThemeDark(false);\r\n  }\r\n\r\n  // Theme 3: Grid\r\n  public setT3() {\r\n      document.body.style.backgroundColor = \"rgb(255, 255, 255)\";\r\n      document.body.style.backgroundImage = \"-webkit-linear-gradient(bottom, rgb(255, 255, 255) 0%, rgb(230, 230, 230) 100%)\";\r\n      this.setThemeDark(false);\r\n\r\n      console.log(\"theme3\");\r\n  }\r\n\r\n  // Theme 4: Whiteboard\r\n  public setT4() {\r\n      document.body.style.backgroundColor = \"rgb(255, 255, 255)\";\r\n      document.body.style.backgroundImage = \"-webkit-linear-gradient(bottom, rgb(255, 255, 255) 0%, rgb(230, 230, 230) 100%)\";\r\n      this.setThemeDark(false);\r\n\r\n      console.log(\"theme4\");\r\n  }\r\n\r\n  // Theme 5: Blackboard\r\n  public setT5() {\r\n      document.body.style.backgroundColor = \"rgb(33, 33, 33)\";\r\n      document.body.style.backgroundImage = \"-webkit-linear-gradient(bottom, rgb(33, 33, 33) 0%, rgb(0, 0, 0) 100%)\";\r\n      this.setThemeDark(true);\r\n\r\n      console.log(\"theme5\");\r\n  }\r\n\r\n  public toggleFullScreen() {\r\n      var document:any = window.document;\r\n\r\n      var isInFullScreen =\r\n          (document.fullscreenElement && document.fullscreenElement !== null) ||\r\n          (document.webkitFullscreenElement && document.webkitFullscreenElement !== null) ||\r\n          (document.mozFullScreenElement && document.mozFullScreenElement !== null) ||\r\n          (document.msFullscreenElement && document.msFullscreenElement !== null);\r\n\r\n      var docElm = document.documentElement;\r\n      if (!isInFullScreen) {\r\n          if (docElm.requestFullscreen) {\r\n              docElm.requestFullscreen();\r\n          } else if (docElm.mozRequestFullScreen) {\r\n              docElm.mozRequestFullScreen();\r\n          } else if (docElm.webkitRequestFullScreen) {\r\n              docElm.webkitRequestFullScreen();\r\n          } else if (docElm.msRequestFullscreen) {\r\n              docElm.msRequestFullscreen();\r\n          }\r\n      } else {\r\n          if (document.exitFullscreen) {\r\n              document.exitFullscreen();\r\n          } else if (document.webkitExitFullscreen) {\r\n              document.webkitExitFullscreen();\r\n          } else if (document.mozCancelFullScreen) {\r\n              document.mozCancelFullScreen();\r\n          } else if (document.msExitFullscreen) {\r\n              document.msExitFullscreen();\r\n          }\r\n      }\r\n  }\r\n\r\n  private addDisabledAttr(elem_name, sw) {\r\n      var $elem = $(`#${elem_name}`);\r\n      if (sw) {\r\n          $elem.prop(\"disabled\", false);\r\n          $elem.children(\".c2\").removeClass(\"disabled\");\r\n      } else {\r\n          $elem.prop(\"disabled\", true);\r\n          $elem.children(\".c2\").addClass(\"disabled\");\r\n      }\r\n  }\r\n  public enablePenRelatedButtons(sw) {\r\n    //   this.addDisabledAttr(\"pen_info_btn\", sw);\r\n      this.addDisabledAttr(\"btn_brush\", sw);\r\n  }\r\n\r\n  public enablePdfRelatedButtons(sw) {\r\n      this.addDisabledAttr(\"btn_clear_pdf\", sw);\r\n      this.addDisabledAttr(\"btn_print_pdf\", sw);\r\n      this.addDisabledAttr(\"btn_start_calibration\", sw);\r\n  }\r\n}","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\pencomm\\PenManager.ts",["694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718","719","720","721","722","723","724","725","726"],"import { NeoSmartpen } from \"./neosmartpen\";\r\nimport { IPenEvent } from \"../DataStructure/Structures\";\r\nimport { IBrushType } from \"../DataStructure/Enums\"\r\nimport PenBasedRenderer from \"../renderer/pageviewer/PenBasedRenderer\";\r\nimport ThemeManager from \"../../styles/ThemeManager\"\r\nimport jQuery from \"jquery\";\r\n\r\nlet $ = jQuery;\r\nlet _penmanager_instance = null;\r\nvar _active_pen:NeoSmartpen = null;\r\n\r\nexport const DEFAULT_PEN_COLOR_NUM: number = 2;\r\nexport const DEFAULT_PEN_THICKNESS: number = 2;\r\nexport const DEFAULT_PEN_RENDERER_TYPE: IBrushType = IBrushType.PEN;\r\n\r\nexport default class PenManager {\r\n  /** @type {Array.<{id:string, mac:string, pen:NeoSmartpen, connected:boolean}>} */\r\n  penArray = new Array(0);\r\n\r\n  /** @type {Array.<StorageRenderer>} */\r\n  render = [];\r\n  \r\n  pen_colors: string[] = [\r\n    \"rgb(169, 169, 169)\", // 0 DARK_GARY #FFAAAAAA #A9A9A9\r\n    \"rgb(255, 0, 0)\", // 1 RED #FFFF0200 #FF0000  rgb(255, 0, 0, 0)\r\n    \"rgb(255, 255, 2)\", // 2 YELLOW #FFFFD001 #FFFF02\r\n    \"rgb(0, 0, 128)\", // 3 NAVY #FF012EE2 #000080\r\n\r\n    \"rgb(0, 0, 0)\", // 4 BLACK #FF000000 #000000\r\n\r\n    \"rgb(211, 211, 211)\", // 5 LIGHT_GRAY #FFE5E5E5 #D3D3D3\r\n    \"rgb(255, 165, 0)\", // 6 ORANGE #FFFF6500 #FFA500\r\n    \"rgb(0, 128, 0)\", // 7 GREEN #FF3CDD00 #008000\r\n\r\n    \"rgb(0, 0, 255)\", // 8 BLUE #FF00ABEB #0000FF\r\n    \"rgb(128, 0, 128)\", // 9 PURPLE #FF6C00E2 #800080\r\n    \"rgb(169, 169, 169)\" // 10 DARK_GARY #FFAAAAAA #A9A9A9\r\n  ];\r\n\r\n  marker_colors: string[] = [\r\n    \"rgb(217, 217, 224)\", // 0 \r\n    \"rgb(232, 155, 162)\", // 1 \r\n    \"rgb(244, 244, 175)\", // 2 \r\n    \"rgb(166, 166, 212)\", // 3 \r\n\r\n    \"rgb(167, 167, 174)\", // 4\r\n\r\n    \"rgb(231, 231, 238)\", // 5\r\n    \"rgb(241, 214, 171)\", // 6\r\n    \"rgb(166, 205, 173)\", // 7\r\n\r\n    \"rgb(167, 167, 251)\", // 8\r\n    \"rgb(205, 166, 212)\", // 9\r\n    \"rgb(217, 217, 224)\" // 10\r\n  ];\r\n\r\n  color: string = this.pen_colors[DEFAULT_PEN_COLOR_NUM];\r\n  thickness: number = DEFAULT_PEN_THICKNESS;\r\n  penRendererType: IBrushType = DEFAULT_PEN_RENDERER_TYPE;\r\n\r\n  init = () => {\r\n    this.setThickness(DEFAULT_PEN_THICKNESS);\r\n    this.setPenRendererType(DEFAULT_PEN_RENDERER_TYPE);\r\n    this.setColor(DEFAULT_PEN_COLOR_NUM);\r\n  }\r\n\r\n  constructor() {\r\n    if (_penmanager_instance) return _penmanager_instance;\r\n  }\r\n\r\n  /**\r\n   * @return {PenManager}\r\n   */\r\n  static getInstance() {\r\n    if (_penmanager_instance) return _penmanager_instance;\r\n\r\n    _penmanager_instance = new PenManager();\r\n    return _penmanager_instance;\r\n  }\r\n\r\n  /**\r\n   * \r\n   */\r\n  public createPen = (): NeoSmartpen => {\r\n    let pen = new NeoSmartpen();\r\n    return pen;\r\n  }\r\n\r\n\r\n  /**\r\n   * \r\n   * @param pen \r\n   * @param device \r\n   */\r\n  public add = (pen: NeoSmartpen, device: BluetoothDevice) => {\r\n    console.log(device);\r\n    this.penArray.push({\r\n      id: device.id,\r\n      mac: pen.getMac(),\r\n      pen,\r\n      connected: false\r\n    });\r\n\r\n    console.log(`PenManager: pen added, mac=${pen.getMac()}`);\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param device \r\n   */\r\n  public isAlreadyConnected = (device: BluetoothDevice): boolean => {\r\n    const index = this.penArray.findIndex(penInfo => penInfo.id === device.id);\r\n    if (index > -1) return true;\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param pen \r\n   */\r\n  private removePen = (pen: NeoSmartpen) => {\r\n    const btDeviceId = pen.getBtDevice().id;\r\n\r\n    const index = this.penArray.findIndex(penInfo => penInfo.id === btDeviceId);\r\n    if (index > -1) {\r\n      this.penArray.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  setActivePen = (penId: string) => {\r\n    _active_pen = this.penArray.find(penInfo => penInfo.pen.mac === penId).pen;\r\n  }\r\n\r\n  setColor(color_num: number) {\r\n    this.toggleColorRadioButton(color_num);\r\n    this.color = this.pen_colors[color_num];\r\n\r\n    if (_active_pen) {\r\n        _active_pen.setColor(this.color);\r\n    }\r\n  }\r\n\r\n  toggleColorRadioButton(color_num: number) {\r\n    var $elem = $(`.color_${color_num}`);\r\n    this.toggleColorRadioButton_inner(undefined, $elem);\r\n  }\r\n  \r\n  toggleColorRadioButton_inner(e, $elem) {\r\n    if ($elem === undefined) {\r\n        $elem = $(e.target);\r\n    }\r\n    if ($elem.hasClass(\"color_icon\")) {\r\n        $(\".color_icon\").each(function (item) {\r\n          $(item).removeClass(\"pressed\");\r\n        });\r\n        $elem.addClass(\"pressed\");\r\n    }\r\n  }\r\n  \r\n  setPenRendererType(type: IBrushType) {\r\n    var $elem = $(\"#btn_brush\").find(\".c2\");\r\n    this.setPenTypeStatus($elem, type);\r\n\r\n    if (type === IBrushType.MARKER) {\r\n      for(var i = 0; i < 11; i++) {\r\n        $('#clr_' + [i]).find(\".color_\" + [i]).css('background-color', this.marker_colors[i]);\r\n      }\r\n    }\r\n    else if (type === IBrushType.PEN) {\r\n      for(var i = 0; i < 11; i++) {\r\n        $('#clr_' + [i]).find(\".color_\" + [i]).css('background-color', this.pen_colors[i]);\r\n      }\r\n    }\r\n  \r\n    this.penRendererType = type;\r\n  \r\n    if (_active_pen) {\r\n        _active_pen.setPenRendererType(this.penRendererType);\r\n    }\r\n  }\r\n  \r\n  setPenTypeStatus($elem, type) {\r\n    if (type == IBrushType.MARKER) {\r\n        $elem.removeClass(\"state_0\");\r\n        $elem.removeClass(\"state_2\");\r\n  \r\n        $elem.addClass(\"state_1\");\r\n    } else if (type == IBrushType.ERASER) {\r\n        $elem.removeClass(\"state_0\");\r\n        $elem.removeClass(\"state_1\");\r\n  \r\n        $elem.addClass(\"state_2\");\r\n    } else if (type == IBrushType.PEN) {\r\n        $elem.removeClass(\"state_1\");\r\n        $elem.removeClass(\"state_2\");\r\n  \r\n        $elem.addClass(\"state_0\");\r\n    }\r\n  }\r\n  \r\n  setThickness(thickness: number) {\r\n    $(\"#thickness_num\").text(thickness);\r\n  \r\n    thickness = thickness * 2;\r\n    this.thickness = thickness;\r\n  \r\n    if (_active_pen) {\r\n        _active_pen.setThickness(this.thickness);\r\n    }\r\n  }\r\n  \r\n  registerRenderContainer = (renderContainer) => {\r\n    this.render.push(renderContainer);\r\n  }\r\n\r\n  unregisterRenderContainer = (renderContainer) => {\r\n    const sameRender = (item) => item === renderContainer;\r\n    const index = this.penArray.findIndex(sameRender);\r\n\r\n    if (index > -1) {\r\n      this.render.splice(index, 1);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * \r\n   * @param opt \r\n   */\r\n  public onConnected = (opt: { pen: NeoSmartpen, event: IPenEvent }) => {\r\n    const { pen } = opt;\r\n    const btDeviceId = pen.getBtDevice().id;\r\n\r\n    const index = this.penArray.findIndex(penInfo => penInfo.id === btDeviceId);\r\n\r\n    if (index > -1) {\r\n      this.penArray[index].connected = true;\r\n    }\r\n    else {\r\n      console.log(\"PenManager: something wrong, un-added pen connected\");\r\n      this.penArray.push({ id: pen.getBtDevice().id, mac: pen.getMac(), pen, connected: true });\r\n    }\r\n\r\n    const themeManager = ThemeManager.getInstance();\r\n    themeManager.enablePenRelatedButtons(true);\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param opt \r\n   */\r\n  public onDisconnected = (opt: { pen: NeoSmartpen, event: IPenEvent }) => {\r\n    const { pen } = opt;\r\n    const btDeviceId = pen.getBtDevice().id;\r\n\r\n    const index = this.penArray.findIndex(penInfo => penInfo.id === btDeviceId);\r\n    if (index > -1) {\r\n      this.penArray.splice(index, 1);\r\n    }\r\n    else {\r\n      console.log(\"PenManager: something wrong, un-added pen disconnected\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param opt \r\n   */\r\n  public onNcodeError = (opt: { pen: NeoSmartpen, event: IPenEvent }) => {\r\n    // const { pen, event } = opt;\r\n\r\n  }\r\n\r\n  /**\r\n   * \r\n   */\r\n  getConnectedPens = (): NeoSmartpen[] => {\r\n    /** @type {Array<NeoSmartpen>} */\r\n    let ret = new Array(0);\r\n\r\n    this.penArray.forEach(penInfo => {\r\n      if (penInfo.connected) {\r\n        ret.push(penInfo.pen);\r\n      }\r\n    });\r\n\r\n    return ret;\r\n  }\r\n\r\n}","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\constants.js",[],"C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\StorageRenderer.js",["727","728","729","730","731","732","733","734","735","736","737","738","739","740","741","742","743","744","745","746","747","748","749","750","751","752","753","754","755","756","757","758","759","760","761","762"],"import React from \"react\";\r\n// import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { InkStorage, PenEventName } from \"../..\";\r\n\r\nimport StorageRenderWorker, { ZoomFitEnum } from \"./StorageRenderWorker\";\r\n// import { Paper } from \"@material-ui/core\";\r\nimport {  PenManager } from \"../../index\";\r\nimport { uuidv4 } from \"../../utils/UtilsFunc\";\r\nimport { PLAYSTATE } from \"./RenderWorkerBase\";\r\n\r\nconst propTypes = {\r\n  scale: PropTypes.number,\r\n  width: PropTypes.number,\r\n  height: PropTypes.number,\r\n  // rect: PropTypes.object,\r\n  pageId: PropTypes.string,\r\n  inkStorage: PropTypes.instanceOf(InkStorage),\r\n\r\n  playTimeHandler: PropTypes.func,\r\n  playStateHandler: PropTypes.func,\r\n\r\n\r\n  isPlay: PropTypes.bool,\r\n  replaySpeed: PropTypes.number,\r\n  playTime: PropTypes.number,\r\n\r\n  playState: PropTypes.symbol,\r\n  // function (props, propName, componentName) {\r\n  //   if (propName === \"playState\" && !PLAYSTATE.hasOwnProperty(props.playState)) {\r\n  //     return new Error(\r\n  //       \"Invalid prop `playState` supplied to `StorageRenderer`. Validation failed.\"\r\n  //     );\r\n  //   }\r\n  // },\r\n};\r\n\r\n\r\nconst defaultProps = {\r\n  scale: 1,\r\n  pageId: \"0.0.0.0\",    // s.o.b.p\r\n  inkStorage: null,\r\n  playState: PLAYSTATE.live,\r\n};\r\n\r\n// const styles = (theme) => ({\r\n//   root: {\r\n//     overflow: \"hidden\",\r\n//     // overflowX: \"hidden\",\r\n//     display: \"flex\",\r\n//     position: \"relative\",\r\n//     paddingTop: 0,\r\n//     height: \"100%\",\r\n//     width: \"100%\",\r\n//   },\r\n//   paper: {\r\n//     // marginTop: 10,\r\n//     margin: \"auto\",\r\n//     // backgroundColor: \"white\"\r\n//   },\r\n// });\r\n\r\n/**\r\n * 스토리지와 자동으로 연결되는 renderer \r\n * TO DO: 2020/11/05\r\n *    1)  현재는 연결된 모든 펜들의 stroke가 나오게 되어 있는데, \r\n *        pen의 ID로 filtering할 수 있도록 property를 넣을 수 있게 할 것\r\n * \r\n *    2)  본 컴포는트는 Storage에서 Event를 받아 rendering하는 것이므로,\r\n *        Pen에서 realtime으로 event를 받아 rendering하는 별도의 component를 만들 것\r\n */\r\nclass StorageRenderer extends React.Component {\r\n  state = {\r\n    /** @type {StorageRenderWorker} */\r\n    renderer: null,\r\n    pageId: \"\",\r\n\r\n    // rect: {\r\n    //   x: 0,\r\n    //   y: 0,\r\n    //   width: 88.58 * 8 / 600 * 72,\r\n    //   height: 125.28 * 8 / 600 * 72,\r\n    // },\r\n    sizeUpdate: 0,\r\n\r\n    penEventCount: 0,\r\n    strokeCount: 0,\r\n    liveDotCount: 0,\r\n\r\n    pageInfo: {\r\n      section: -1,\r\n      owner: -1,\r\n      book: -1,\r\n      page: -1,\r\n    },\r\n\r\n    viewFit: ZoomFitEnum.WIDTH,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    // kitty\r\n    this.canvasRef = React.createRef();\r\n    this.myRef = React.createRef();\r\n\r\n    /** @type {{pageId:number, inkStorage:InkStorage, scale:number, playState:number }} */\r\n    let { pageId, inkStorage, scale, playState } = props;\r\n\r\n    if (!inkStorage) {\r\n      inkStorage = InkStorage.getInstance();\r\n    }\r\n\r\n    this.inkStorage = inkStorage;\r\n\r\n    this.state = {\r\n      pageId,\r\n      scale,\r\n      playState,\r\n      ...this.state\r\n    };\r\n\r\n    // // 실시간 데이터 전송을 위해, penStorage와 view를 연결한다.\r\n    if (this.inkStorage) {\r\n      let filter = { mac: null };\r\n      inkStorage.addEventListener(PenEventName.ON_PEN_DOWN, this.onLivePenDown.bind(this), filter);\r\n      inkStorage.addEventListener(PenEventName.ON_PEN_PAGEINFO, this.onLivePenPageInfo.bind(this), filter);\r\n      inkStorage.addEventListener(PenEventName.ON_PEN_MOVE, this.onLivePenMove.bind(this), filter);\r\n      inkStorage.addEventListener(PenEventName.ON_PEN_UP, this.onLivePenUp.bind(this), filter);\r\n    }\r\n\r\n    this.canvasId = uuidv4();\r\n  }\r\n\r\n\r\n  /**\r\n   * @public\r\n   * @param {NeoSmartpen} pen \r\n   */\r\n  listenPenEvent(pen) {\r\n    pen.addEventListener(PenEventName.ON_PEN_DOWN, this.onLivePenDown.bind(this));\r\n    pen.addEventListener(PenEventName.ON_PEN_PAGEINFO, this.onLivePenPageInfo.bind(this));\r\n    pen.addEventListener(PenEventName.ON_PEN_MOVE, this.onLivePenMove.bind(this));\r\n    pen.addEventListener(PenEventName.ON_PEN_UP, this.onLivePenUp.bind(this));\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @param {NeoSmartpen} pen \r\n   */\r\n  ignorePenEvent(pen) {\r\n    pen.removeEventListener(PenEventName.ON_PEN_DOWN, this.onLivePenDown.bind(this));\r\n    pen.removeEventListener(PenEventName.ON_PEN_PAGEINFO, this.onLivePenPageInfo.bind(this));\r\n    pen.removeEventListener(PenEventName.ON_PEN_MOVE, this.onLivePenMove.bind(this));\r\n    pen.removeEventListener(PenEventName.ON_PEN_UP, this.onLivePenUp.bind(this));\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {{strokeKey:string, mac:string, time:number, stroke:NeoStroke}} event \r\n   */\r\n  onLivePenDown = (event) => {\r\n    // console.log(event);\r\n    if (this.state.renderer) {\r\n      this.state.renderer.createLiveStroke(event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {{strokeKey:string, mac:string, stroke:NeoStroke, section:number, owner:number, book:number, page:number}} event \r\n   */\r\n  onLivePenPageInfo = (event) => {\r\n    const { penEventCount } = this.state;\r\n    const { section, owner, book, page } = event;\r\n\r\n    this.setState({\r\n      penEventCount: penEventCount + 1,\r\n      pageInfo: { section, owner, book, page }\r\n    });\r\n\r\n    const inkStorage = this.inkStorage;\r\n    if (inkStorage) {\r\n      let pageStrokesCount = inkStorage.getPageStrokes(event).length;\r\n      this.setState({ strokeCount: pageStrokesCount });\r\n    }\r\n\r\n    if (this.state.renderer) {\r\n      this.state.renderer.changePage(section, owner, book, page, false);\r\n    }\r\n    // console.log(event);\r\n  }\r\n\r\n\r\n  /**\r\n   * \r\n   * @param {{strokeKey:string, mac:string, stroke:NeoStroke, dot:NeoDot}} event \r\n   */\r\n\r\n  onLivePenMove = (event) => {\r\n    if (this.state.renderer) {\r\n      this.state.renderer.pushLiveDot(event);\r\n    }\r\n    // const { liveDotCount } = this.state;\r\n\r\n    // this.setState({ liveDotCount: liveDotCount + 1 });\r\n    // console.log(event);\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {{strokeKey:string, mac:string, stroke, section:number, owner:number, book:number, page:number}} event \r\n   */\r\n  onLivePenUp = (event) => {\r\n    if (this.state.renderer) {\r\n      this.state.renderer.closeLiveStroke(event);\r\n    }\r\n\r\n    // const { penEventCount, inkStorage } = this.state;\r\n    // this.setState({ penEventCount: penEventCount + 1 });\r\n    // if (inkStorage) {\r\n    //   let pageStrokesCount = inkStorage.getPageStrokes(event).length;\r\n    //   this.setState({ strokeCount: pageStrokesCount });\r\n    // }\r\n    // console.log(event);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * @return {{section:number, owner:number, book:number, page:number}}\r\n   */\r\n  getPageIdNumbers() {\r\n    /** @type {Array.<string>} */\r\n    const numbers = this.state.pageId.split(\".\");\r\n\r\n    const section = parseInt(numbers[0]);\r\n    const owner = parseInt(numbers[1]);\r\n    const book = parseInt(numbers[2]);\r\n    const page = parseInt(numbers[3]);\r\n\r\n    return {\r\n      section, owner, book, page\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    let ret_val = true;\r\n\r\n    if (nextState.penEventCount !== this.state.penEventCount) {\r\n      // re-rendering strokes\r\n      // console.log(`penEventCount: ${nextState.penEventCount}`);\r\n      // this.state.renderer.redrawPage();\r\n    }\r\n\r\n\r\n    if (nextProps.isPlay !== this.props.isPlay) {\r\n      if (nextProps.stopTrigger) {\r\n        this.state.renderer.replayStop();\r\n      }\r\n      if (nextProps.rewindTrigger) {\r\n        this.state.renderer.replayRewind();\r\n      }\r\n\r\n      if (nextProps.isPlay) {\r\n        this.state.renderer.replayStart();\r\n      } else {\r\n        this.state.renderer.replayPause();\r\n      }\r\n      ret_val = false;\r\n    }\r\n\r\n    // if (nextProps.isSaveTrigger !== this.props.isSaveTrigger) {\r\n    //   this.saveCanvas();\r\n    //   return false;\r\n    // }\r\n\r\n    if (nextProps.replaySpeed !== this.props.replaySpeed) {\r\n      this.state.renderer.setReplaySpeed(nextProps.replaySpeed);\r\n      ret_val = false;\r\n    }\r\n\r\n    // if (nextProps.pageId !== this.props.pageId) {\r\n    //   const { pageId, scale } = nextProps;\r\n    //   // let bgurl = window.location.origin + \"/img/3_27_1089_\" + pageId + \".jpg\";\r\n\r\n    //   // let bg_header = EXAM_FILE_RESOURCES[tab_value].bg_img_header;\r\n    //   // let bgurl = window.location.origin + bg_header + pageId + \".jpg\";\r\n\r\n    //   // this.props.playStateHandler(PLAYSTATE.stop);\r\n    //   // this.state.renderer.replayPause();\r\n    //   // this.state.renderer.replayStop();\r\n\r\n    //   // this.state.renderer.setCanvas(this.size, bgurl);\r\n\r\n    //   let page = this.props.pages.filter((p) => p.pageNumber === pageId)[0];\r\n    //   if (page) {\r\n    //     this.state.renderer.setPage(page);\r\n    //     this.state.renderer.preparePage(\r\n    //       page,\r\n    //       this.state.rect,\r\n    //       this.size,\r\n    //       scale\r\n    //     );\r\n    //   }\r\n\r\n    //   ret_val = false;\r\n    // }\r\n\r\n    if (nextProps.playTime !== this.props.playTime) {\r\n      this.state.renderer.setTimePoint(nextProps.playTime);\r\n      ret_val = false;\r\n    }\r\n\r\n    if (nextProps.autoStop !== this.props.autoStop) {\r\n      this.state.renderer.setAutoStop(nextProps.autoStop);\r\n      ret_val = false;\r\n    }\r\n\r\n    if (nextProps.caption !== this.props.caption) {\r\n      console.log(\" caption changed \");\r\n      ret_val = false;\r\n    }\r\n\r\n    if (nextProps.stopTrigger) {\r\n      this.state.renderer.replayStop();\r\n      ret_val = false;\r\n    }\r\n\r\n    if (nextProps.rewindTrigger) {\r\n      this.state.renderer.replayRewind();\r\n      ret_val = false;\r\n    }\r\n\r\n    return ret_val;\r\n  }\r\n\r\n  initRenderer(size) {\r\n    const {\r\n      // pages,\r\n      // pageId,\r\n      scale,\r\n      playTimeHandler,\r\n      playStateHandler,\r\n      // strokeStream,\r\n      autoStop,\r\n      width,\r\n      height\r\n    } = this.props;\r\n\r\n    const rect = { x: 0, y: 0, width, height };\r\n    // const { rect } = this.state;\r\n    // const page = pages.filter((p) => p.pageNumber === pageId)[0];\r\n\r\n    const inkStorage = this.inkStorage;\r\n    const options = {\r\n      canvasName: this.canvasId,\r\n      storage: inkStorage,\r\n      autoStop,\r\n      playTimeHandler,\r\n      playStateHandler,\r\n      viewFit: this.state.viewFit,\r\n    };\r\n\r\n    let renderer = new StorageRenderWorker(options);\r\n\r\n    // let bg_header = EXAM_FILE_RESOURCES[tab_value].bg_img_header;\r\n    // let bgurl = window.location.origin + bg_header + pageId + \".jpg\";\r\n    // // let bgurl = window.location.origin + \"/img/3_27_1089_\" + pageId + \".jpg\";\r\n\r\n    renderer.setCanvas(size, \"\");\r\n\r\n    // renderer.setPage(page);\r\n    renderer.preparePage(rect, size, scale);\r\n    // renderer.setSeekHandeler(this.props.seekHandler);\r\n    this.setState({ renderer: renderer });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const node = this.myRef.current;\r\n    if (node) {\r\n\r\n      let parentHeight = node.offsetHeight;\r\n      let parentWidth = node.offsetWidth;\r\n\r\n      console.log(`(width, height) = (${parentHeight}, ${parentWidth})`);\r\n    }\r\n\r\n    let size = this.size;\r\n    const { pageId, width, height } = this.props;\r\n\r\n    let rect = { x: 0, y: 0, width, height };\r\n\r\n    // const page = pages.filter((p) => p.pageNumber === pageId)[0];\r\n    console.log(\"Draw Stroke size\", pageId, \"canvas size\", size, \"rect\", rect);\r\n\r\n    this.initRenderer(this.size);\r\n    window.addEventListener(\"resize\", this.resizeListener);\r\n\r\n\r\n    // penManager에 연결 \r\n    let penManager = PenManager.getInstance();\r\n    penManager.registerRenderContainer(this);\r\n  }\r\n\r\n  resizeListener = () => {\r\n    this.setState({ sizeUpdate: this.state.sizeUpdate + 1 });\r\n\r\n    // const { classes, scaleType, scale } = this.props;\r\n    const { scale, width, height } = this.props;\r\n\r\n\r\n    const rect = { x: 0, y: 0, width, height };\r\n    // const { rect } = this.state;\r\n    // const { penEventCount } = this.state;\r\n    this.size = this.getSize(scale, rect);\r\n\r\n    if (this.state.renderer) {\r\n      // console.log(\"render resize\", this.size)\r\n      this.state.renderer.resize(this.size);\r\n    }\r\n  };\r\n\r\n  // getSize_old = (scale, rect) => {\r\n\r\n\r\n  //   const vertical_margin = 0;\r\n  //   const horizontal_margin = 0; // left 200, right 200\r\n\r\n  //   const pageHeight = window.innerHeight - vertical_margin;\r\n  //   let h = pageHeight - 20; // for divider\r\n  //   let w = window.innerWidth - horizontal_margin;\r\n\r\n  //   h = h * scale;\r\n  //   w = (h * rect.width) / rect.height;\r\n  //   // scale to width\r\n\r\n  //   console.log(\"!!!!!!!!!\", w, h, rect.height, rect.width);\r\n  //   console.log(this);\r\n\r\n  //   let size = {\r\n  //     w: w,\r\n  //     h: h,\r\n  //   };\r\n\r\n  //   return size;\r\n  // };\r\n\r\n  getSize = (scale, rect) => {\r\n    let size = {\r\n      width: rect.width,\r\n      height: rect.height,\r\n    };\r\n\r\n    return size;\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    // this.state.renderer.stopInterval();\r\n    window.removeEventListener(\"resize\", this.resizeListener);\r\n\r\n    // penManager에 연결 해제\r\n    let penManager = PenManager.getInstance();\r\n    penManager.unregisterRenderContainer(this);\r\n\r\n    // ink storage와 연결 해제\r\n        // // 실시간 데이터 전송을 위해, penStorage와 view를 연결한다.\r\n    if (this.inkStorage) {\r\n      let inkStorage = this.inkStorage;\r\n\r\n      inkStorage.removeEventListener(PenEventName.ON_PEN_DOWN, this.onLivePenDown.bind(this));\r\n      inkStorage.removeEventListener(PenEventName.ON_PEN_PAGEINFO, this.onLivePenPageInfo.bind(this));\r\n      inkStorage.removeEventListener(PenEventName.ON_PEN_MOVE, this.onLivePenMove.bind(this));\r\n      inkStorage.removeEventListener(PenEventName.ON_PEN_UP, this.onLivePenUp.bind(this));\r\n    }\r\n\r\n\r\n  }\r\n\r\n  render() {\r\n    // const { classes, scaleType, scale } = this.props;\r\n    const { scale, width, height } = this.props;\r\n    const { section, owner, book, page } = this.state.pageInfo;\r\n\r\n    const rect = { x: 0, y: 0, width, height };\r\n    // const { rect } = this.state;\r\n    const { penEventCount } = this.state;\r\n    this.size = this.getSize(scale, rect);\r\n\r\n    return (\r\n      <div id=\"replayContainer\" ref={this.myRef}>\r\n        <h1>StorageRenderer</h1><h2>{section}.{owner}.{book}.{page}:{penEventCount}</h2>\r\n          <canvas id={this.canvasId} ref={this.canvasRef} style={{ height: this.size.height, width: this.size.width }}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nStorageRenderer.propTypes = propTypes;\r\nStorageRenderer.defaultProps = defaultProps;\r\n\r\n// export default withStyles(styles)(StorageRenderer);\r\nexport default StorageRenderer;\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\pencomm\\neosmartpen.ts",["763","764","765","766","767","768","769","770","771","772","773","774","775","776","777","778","779","780","781","782","783","784","785","786","787","788","789","790","791","792","793","794","795","796","797","798","799","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817"],"import PenComm, { deviceSelectDlg } from \"./pencomm\";\r\nimport InkStorage, { IOpenStrokeArg } from \"../penstorage/InkStorage\";\r\nimport { paperInfo } from \"../noteserver/PaperInfo\";\r\nimport Dispatcher from \"../penstorage/EventSystem\";\r\nimport PenManager from \"./PenManager\";\r\nimport \"../types\";\r\nimport { IPenEvent, IBrushState } from \"../DataStructure/Structures\";\r\nimport { NeoStroke, PEN_STATE, PenEventName } from \"../DataStructure\";\r\nimport { IWritingSurfaceInfo } from \"../DataStructure/Structures\";\r\nimport NeoDot from \"../DataStructure/NeoDot\";\r\nimport { IBrushType } from \"../DataStructure/Enums\"\r\nimport { fabric } from \"fabric\";\r\n\r\ninterface IPenMovement {\r\n  downEvent: IPenEvent,\r\n  infoEvent: IPenEvent,\r\n  moveEvents: IPenEvent[],\r\n  upEvent: IPenEvent,\r\n  numMovement: number,\r\n  stroke: NeoStroke,\r\n\r\n}\r\n\r\nconst NUM_HOVER_POINTERS = 6;\r\n\r\nexport class NeoSmartpen {\r\n  currPenMovement: IPenMovement = {\r\n    downEvent: null,\r\n    infoEvent: null,\r\n    moveEvents: [],\r\n    upEvent: null,\r\n    numMovement: 0,\r\n    stroke: null,\r\n  };\r\n\r\n  /** 펜 종류 마다의 굵기와 색깔 */\r\n  penState: IBrushState[] = new Array(Object.keys(IBrushType).length);\r\n\r\n  /** 펜 종류 (렌더러 종류) */\r\n  penRendererType: IBrushType = IBrushType.PEN;\r\n\r\n  lastInfoEvent: IPenEvent = null;\r\n  protocolHandler: PenComm = new PenComm(this);\r\n  mac: string = null;\r\n  \r\n  lastState: PEN_STATE = PEN_STATE.NONE;\r\n\r\n  surfaceInfo: IWritingSurfaceInfo = {\r\n    section: 3,\r\n    owner: 27,\r\n    book: 168,\r\n    Xmin: 3.12,\r\n    Ymin: 3.12,\r\n    Xmax: 91.68,\r\n    Ymax: 128.36,\r\n    Mag: 1,\r\n  }\r\n\r\n  storage: InkStorage = InkStorage.getInstance();\r\n  manager: PenManager = PenManager.getInstance();\r\n  dispatcher: Dispatcher = new Dispatcher();\r\n\r\n  visibleHoverPoints = NUM_HOVER_POINTERS;\r\n  pathHoverPoints: Array<fabric.Circle> = new Array(0);\r\n  timeOut = null;\r\n  waitCount: number = 0;\r\n  eraserLastPoint:object = {};\r\n\r\n  pathPenTracker: fabric.Circle;\r\n  /**\r\n   *\r\n   * @param customStorage\r\n   */\r\n  constructor(customStorage: InkStorage = null) {\r\n    // this.appPen = appPenHandler;\r\n    if (customStorage) {\r\n      console.log(\"use custom Ink Storage\");\r\n      this.storage = customStorage;\r\n    }\r\n    else {\r\n      console.log(\"use default Ink Storage\");\r\n      this.storage = InkStorage.getInstance();\r\n    }\r\n\r\n    for (let i = 0; i < this.penState.length; i++) {\r\n      this.penState[i] = {\r\n        thickness: 0.1,\r\n        color: \"rgba(0,0,0,255)\",\r\n      };\r\n    }\r\n\r\n  }\r\n\r\n  initPenTracker() {\r\n    this.pathPenTracker = new fabric.Circle({\r\n      left : -30,\r\n      top : -30,\r\n      radius: 5,\r\n      opacity : 0.3,\r\n      fill: \"#7a7aff\",\r\n      stroke: \"#7a7aff\",\r\n      dirty: true,\r\n      name : 'penTracker',\r\n      data : 'pt'\r\n    });\r\n  }\r\n\r\n  initHoverCursor() {\r\n    for (var i = 0; i < 6; i++) {\r\n      var path = new fabric.Circle({\r\n          radius: (NUM_HOVER_POINTERS - i) ,\r\n          fill: \"#ff2222\",\r\n          stroke: \"#ff2222\",\r\n          opacity: (NUM_HOVER_POINTERS - i) / NUM_HOVER_POINTERS / 2,\r\n          left : -30,\r\n          top : -30,\r\n          hasControls : false,\r\n          dirty: true,\r\n          name : 'hoverPoint',\r\n          data : 'hp'\r\n      });\r\n      this.pathHoverPoints.push(path);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  getMac = (): string => {\r\n    return this.mac;\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   */\r\n  getBtDevice = (): BluetoothDevice => {\r\n    return this.protocolHandler.getBtDevice();\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   */\r\n  async connect(): Promise<boolean> {\r\n    let device = null;\r\n    try {\r\n      device = await deviceSelectDlg();\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n      return false;\r\n    }\r\n\r\n    if (this.manager.isAlreadyConnected(device)) {\r\n      console.error(`bluetooth device(id:${device.id}) already connectged or connecting process is being processed`);\r\n      return false;\r\n    }\r\n\r\n    if (device) {\r\n      this.protocolHandler.connect(device);\r\n      this.manager.add(this, device);\r\n    }\r\n    else {\r\n      console.error(\"Device NULL\");\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param device\r\n   */\r\n  async connectByWebBtDevice(device: BluetoothDevice) {\r\n    this.protocolHandler.connect(device);\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param mac\r\n   */\r\n  async connectByMacAddress(mac: string) {\r\n    throw new Error(`connectByMacAddress() not implemented yet.`);\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  resetPenStroke = () => {\r\n    // let { currPenMovement} = this;\r\n    let p = this.currPenMovement;\r\n\r\n    p.downEvent = null;\r\n    p.infoEvent = null;\r\n    p.numMovement = 0;\r\n    p.moveEvents = [];\r\n    p.upEvent = null;\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param event\r\n   */\r\n  onPenDown = (event: IPenEvent) => {\r\n    this.resetPenStroke();\r\n    this.currPenMovement.downEvent = event;\r\n    this.lastState = PEN_STATE.PEN_DOWN;\r\n\r\n    // console.log(event);\r\n\r\n    // storage에 저장\r\n    if (!this.storage) {\r\n      console.error(\"Ink Storage has not been initialized\");\r\n    }\r\n\r\n    let mac = this.mac;\r\n    let time = event.timeStamp;\r\n\r\n    const openStrokeArg: IOpenStrokeArg = {\r\n      mac,\r\n      time,\r\n      penTipMode: event.penTipMode,\r\n      brushType: this.penRendererType,\r\n      thickness: this.penState[this.penRendererType].thickness,\r\n      color: this.penState[this.penRendererType].color,\r\n    }\r\n\r\n    let stroke = this.storage.openStroke(openStrokeArg);\r\n    let strokeKey = stroke.key;\r\n    this.currPenMovement.stroke = stroke;\r\n\r\n    console.log(`NeoSmartpen dispatch event ON_PEN_DOWN`);\r\n    this.dispatcher.dispatch(PenEventName.ON_PEN_DOWN, { strokeKey, mac, time, stroke });\r\n\r\n    this.manager.setActivePen(event.penId);\r\n    // event 전달\r\n    // let ph = this.appPen;\r\n    // ph.onPenDown(event);\r\n  }\r\n\r\n  /**\r\n   * 펜의 움직임\r\n   *    1) down/up이 있는 경우: DOWN -> INFO -> MOVE -> MOVE -> ... -> UP -> INFO와 같이 나옴\r\n   *    2) hove의 경우: (페이지가 바뀌면) INFO -> HOVER_MOVE -> HOVER_MOVE...\r\n   *\r\n   * pen down 된 후의 page info, 실질적으로 pen_down과 같음\r\n   *\r\n   * @param event\r\n   * @param hover\r\n   */\r\n  onPageInfo = (event: IPenEvent, hover: boolean) => {\r\n    // console.log(event);\r\n    this.lastInfoEvent = event;\r\n\r\n\r\n    // margin 값을 가져오기 위해서\r\n    let info = paperInfo.getPaperInfo({ section: event.section, book: event.book, owner: event.owner, page: event.page });\r\n    if (info) this.surfaceInfo = info;\r\n\r\n    // 이전에 펜 down이 있었으면\r\n    if (this.lastState === PEN_STATE.PEN_DOWN) {\r\n      this.currPenMovement.infoEvent = event;\r\n      // this.currPenMovement.infoEvent = {\r\n      //   section: event.section,\r\n      //   owner: event.owner,\r\n      //   book: event.book,\r\n      //   page: event.page,\r\n\r\n      //   ...event,\r\n      // };\r\n\r\n      if (!this.storage) {\r\n        console.error(\"Ink Storage has not been initialized\");\r\n      }\r\n      else {\r\n        const { section, owner, book, page, timeStamp } = event;\r\n        let mac = this.mac;\r\n        if (!mac) {\r\n          throw new Error(\"mac address was not registered\");\r\n        }\r\n\r\n        if (!hover) {\r\n          // storage에 저장\r\n          let stroke = this.currPenMovement.stroke;\r\n          let strokeKey = stroke.key;\r\n          this.storage.setStrokeInfo(strokeKey, section, owner, book, page, timeStamp);\r\n\r\n          // hand pen page the event\r\n          this.dispatcher.dispatch(PenEventName.ON_PEN_PAGEINFO, {\r\n            strokeKey, mac, stroke, section, owner, book, page,\r\n            time: event.timeStamp\r\n          });\r\n        }\r\n        else {\r\n          // hand hover page the event\r\n          this.dispatcher.dispatch(PenEventName.ON_PEN_HOVER_PAGEINFO, {\r\n            mac, section, owner, book, page, time: event.timeStamp\r\n          });\r\n\r\n        }\r\n      }\r\n      \r\n      // let ph = this.appPen;\r\n      // ph.onPageInfo(event);\r\n    }\r\n    \r\n    if (hover) {\r\n      const { section, owner, book, page, timeStamp } = event;\r\n      let mac = this.mac;\r\n\r\n      this.dispatcher.dispatch(PenEventName.ON_PEN_HOVER_PAGEINFO, {\r\n        mac, section, owner, book, page, time: event.timeStamp, pen:this\r\n      });\r\n    }\r\n    \r\n    // event 전달\r\n    // let ph = this.appPen;\r\n    // if (hover) ph.onHoverPageInfo(event);\r\n\r\n    return;\r\n  }\r\n\r\n\r\n\r\n  private adjustPaperXminYmin = (event: IPenEvent) => {\r\n    event.x -= this.surfaceInfo.Xmin;\r\n    event.y -= this.surfaceInfo.Ymin;\r\n\r\n    return event;\r\n  }\r\n\r\n  /**\r\n   * pen down 상태에서 움직임\r\n   * @param event\r\n   */\r\n  onPenMove = (event: IPenEvent) => {\r\n    this.lastState = PEN_STATE.PEN_MOVE;\r\n\r\n    // margin을 paperInfo의 Xmin, Ymin 값에 따라 조정\r\n    // event = this.adjustPaperXminYmin(event);\r\n\r\n    // 기존의 방식에서는 처리하지 않았던 것, redundant할 수 있다.\r\n    if (this.currPenMovement.infoEvent) {\r\n      event.owner = this.currPenMovement.infoEvent.owner;\r\n      event.book = this.currPenMovement.infoEvent.book;\r\n      event.page = this.currPenMovement.infoEvent.page;\r\n    } else {\r\n      /**\r\n       * 종이에 터치되지 않고 들어오는 호버 이벤트\r\n       *\r\n       */\r\n      event.owner = -1;\r\n      event.book = -1;\r\n      event.page = -1;\r\n      // let srcLine = getFunctionName();\r\n      // console.error(`Get PEN_MOVE without PEN_INFO ${srcLine}`);\r\n      // throw new Error( `Get PEN_MOVE without PEN_INFO`);\r\n    }\r\n\r\n    this.currPenMovement.numMovement++;\r\n    event.isFirstDot = (this.currPenMovement.numMovement === 1);\r\n\r\n    // storage에 저장\r\n    if (!this.storage) {\r\n      console.error(\"Ink Storage has not been initialized\");\r\n    }\r\n\r\n    const dot = new NeoDot({\r\n      dotType: 2,   // moving\r\n      deltaTime: event.timediff,\r\n      time: event.timeStamp,\r\n      f: event.force,\r\n      x: event.x,\r\n      y: event.y,\r\n    });\r\n\r\n    let stroke = this.currPenMovement.stroke;\r\n    let strokeKey = stroke.key;\r\n    this.storage.appendDot(strokeKey, dot);\r\n    let pen = this;\r\n\r\n    // hand the event\r\n    this.dispatcher.dispatch(PenEventName.ON_PEN_MOVE, { strokeKey, mac: stroke.mac, stroke, dot, pen });\r\n\r\n    // 이벤트 전달\r\n    // console.log(\"    -> onPenMove\" + event);\r\n    // let ph = this.appPen;\r\n    // ph.onPenMove(event);\r\n  }\r\n\r\n  /**\r\n   * hover 상태에서 움직임\r\n   * @param event\r\n   */\r\n  onHoverMove = (event: IPenEvent) => {\r\n    this.lastState = PEN_STATE.HOVER_MOVE;\r\n\r\n    // margin을 paperInfo의 Xmin, Ymin 값에 따라 조정\r\n    // event = this.adjustPaperXminYmin(event);\r\n\r\n\r\n    // console.log(\"    -> onHoverMove\" + event);\r\n    // let ph = this.appPen;\r\n    // ph.onHoverMove(event);\r\n    let mac = this.mac;\r\n    if (!mac) {\r\n      throw new Error(\"mac address was not registered\");\r\n    }\r\n    this.dispatcher.dispatch(PenEventName.ON_HOVER_MOVE, { pen: this, mac, event });\r\n  }\r\n\r\n    /**\r\n   * hover 상태에서 움직임\r\n   * @param event\r\n   */\r\n  onHoverPageInfo = (event: IPenEvent) => {\r\n    this.lastState = PEN_STATE.HOVER_MOVE;\r\n;\r\n    let mac = this.mac;\r\n    if (!mac) {\r\n      throw new Error(\"mac address was not registered\");\r\n    }\r\n\r\n    this.dispatcher.dispatch(PenEventName.ON_PEN_HOVER_PAGEINFO, { pen: this, mac, event });\r\n  }\r\n\r\n  /**\r\n   * pen up\r\n   * @param event\r\n   */\r\n  onPenUp = (event: IPenEvent) => {\r\n    this.lastState = PEN_STATE.PEN_UP;\r\n\r\n    this.currPenMovement.upEvent = event;\r\n\r\n    // storage에 저장\r\n    if (!this.storage) {\r\n      console.error(\"Ink Storage has not been initialized\");\r\n    }\r\n\r\n    if (this.penRendererType !== IBrushType.ERASER) {\r\n      let stroke = this.currPenMovement.stroke;\r\n      let strokeKey = stroke.key;\r\n      this.storage.closeStroke(strokeKey);\r\n\r\n      const { mac, section, owner, book, page } = stroke;\r\n      this.dispatcher.dispatch(PenEventName.ON_PEN_UP, { strokeKey, mac, pen: this, stroke, section, owner, book, page });\r\n\r\n      this.resetPenStroke();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ncode error\r\n   * @param event\r\n   */\r\n  onNcodeError = (event: IPenEvent) => {\r\n    // console.log(event);\r\n\r\n    // let ph = this.appPen;\r\n    // ph.onNcodeError(event);\r\n    let mac = this.mac;\r\n    if (!mac) {\r\n      throw new Error(\"mac address was not registered\");\r\n    }\r\n\r\n    this.manager.onNcodeError({ pen: this, event });\r\n    this.dispatcher.dispatch(PenEventName.ON_NCODE_ERROR, { pen: this, mac, event });\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   *\r\n   * @param event\r\n   */\r\n  onPasscodeRequired = (event: IPenEvent) => {\r\n    console.log(\"onPasscodeRequired\" + event);\r\n    let passcode = prompt(\"please enter passcode \" + (9 - event.retryCount));\r\n    this.protocolHandler.sendPasscode(passcode);\r\n\r\n    let mac = this.protocolHandler.getMac();\r\n    if (!mac) {\r\n      throw new Error(\"mac address was not registered\");\r\n    }\r\n    this.dispatcher.dispatch(PenEventName.ON_PW_REQUIRED, { pen: this, mac, event });\r\n    // throw new Error(\"Not implemented: onPasscodeRequired\");\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   *\r\n   * @param event\r\n   */\r\n  onConnected = (event: IPenEvent) => {\r\n    // let ph = this.appPen;\r\n    // ph.onConnected(event);\r\n\r\n    console.log(\"CONNECTED\");\r\n    let mac = this.protocolHandler.getMac();\r\n    this.mac = mac;\r\n    console.log(`Connected: ${mac}`);\r\n\r\n    this.manager.onConnected({ pen: this, event });\r\n    this.dispatcher.dispatch(PenEventName.ON_CONNECTED, { pen: this, mac, event });\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param event\r\n   */\r\n  onFirmwareUpgradeNeeded = (event: IPenEvent) => {\r\n    // let ph = this.appPen;\r\n    // ph.onFirmwareUpgradeNeeded(event);\r\n\r\n    let mac = this.mac;\r\n    if (!mac) {\r\n      throw new Error(\"mac address was not registered\");\r\n    }\r\n    this.dispatcher.dispatch(PenEventName.ON_UPGRADE_NEEDED, { pen: this, mac, event });\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param event\r\n   */\r\n  onDisconnected = (event: IPenEvent) => {\r\n    // let event = makePenEvent(DeviceTypeEnum.PEN, PenEventEnum.ON_DISCONNECTED);\r\n    // let ph = this.appPen;\r\n    // ph.onDisconnected(event);\r\n    let mac = this.mac;\r\n    if (!mac) {\r\n      console.error(`mac address was not registered`);\r\n      console.error(event);\r\n    }\r\n    else {\r\n      this.manager.onDisconnected({ pen: this, event });\r\n      this.dispatcher.dispatch(PenEventName.ON_DISCONNECTED, { pen: this, mac, event });\r\n    }\r\n  }\r\n\r\n  setColor(color: string) {\r\n    this.penState[this.penRendererType].color = color;\r\n  }\r\n\r\n  setThickness(thickness: number) {\r\n    this.penState[this.penRendererType].thickness = thickness;\r\n  }\r\n  \r\n  setPenRendererType(type) {\r\n    this.penRendererType = type;\r\n  }\r\n  \r\n  /**\r\n   *\r\n   * @param eventName\r\n   * @param listener\r\n   */\r\n  public addEventListener(eventName: PenEventName, listener: Function) {\r\n    if (eventName === PenEventName.ON_PEN_DOWN) {\r\n      console.log(`NeoSmartpen: addEventListener ${eventName}`);\r\n    }\r\n\r\n    this.dispatcher.on(eventName, listener, null);\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param eventName\r\n   * @param listener\r\n   */\r\n  public removeEventListener(eventName: PenEventName, listener: Function) {\r\n    this.dispatcher.off(eventName, listener);\r\n  }\r\n}\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\noteserver\\NoteserverClient.ts",["818","819","820","821","822","823","824","825","826","827","828","829","830","831","832","833","834","835","836","837","838","839","840","841","842","843","844","845","846","847","848","849","850","851","852","853","854","855","856","857","858"],"import jQuery from \"jquery\";\r\nimport JSZip from \"jszip\";\r\n\r\nlet $ = jQuery;\r\n// window.$ = window.jQuery = jQuery;\r\n\r\nconst NCODE_SIZE_IN_INCH = 8 * 7 / 600;\r\nconst POINT_72DPI_SIZE_IN_INCH = 1 / 72;\r\n\r\nconst point72ToNcode = (p) => {\r\n  const ratio = NCODE_SIZE_IN_INCH / POINT_72DPI_SIZE_IN_INCH;\r\n  return p / ratio;\r\n}\r\n\r\n\r\n/**\r\n *\r\n * @param {string} xml\r\n * @param {{filename:string, section:number, owner:number, book:number}} option\r\n */\r\nfunction extractMarginInfo(xml, option) {\r\n  const { filename, section, owner, book } = option;\r\n\r\n\r\n\r\n  let $bookXml = $(xml).find(\"book\");\r\n  let title = $bookXml.find(\"title\").text();\r\n  let author = $bookXml.find(\"author\").text();\r\n\r\n  let name = `${author}_${title}_${section}_${owner}_${book}`;\r\n\r\n  let Xmin_old = -1;\r\n  let Ymin_old = -1;\r\n  let Xmax_old = -1;\r\n  let Ymax_old = -1;\r\n\r\n  let result = [];\r\n\r\n  let xmlData = $(xml).find(\"page_item\");\r\n\r\n  // $(xmlData).each(function () {\r\n  xmlData.forEach(function (item) {\r\n    // let ccc = $(this);\r\n    let ccc = $(item);\r\n\r\n    let x1 = parseFloat(ccc.attr(\"x1\"));\r\n    let x2 = parseFloat(ccc.attr(\"x2\"));\r\n    let y1 = parseFloat(ccc.attr(\"y1\"));\r\n    let y2 = parseFloat(ccc.attr(\"y2\"));\r\n\r\n    let crop_margin = ccc.attr(\"crop_margin\");\r\n    let margins = crop_margin.split(\",\");\r\n    let l = parseFloat(margins[0]);\r\n    let t = parseFloat(margins[1]);\r\n    let r = parseFloat(margins[2]);\r\n    let b = parseFloat(margins[3]);\r\n\r\n    let page_no = parseInt(ccc.attr(\"number\"));\r\n\r\n    let Xmin = point72ToNcode(x1) + point72ToNcode(l);\r\n    let Ymin = point72ToNcode(y1) + point72ToNcode(t);\r\n    let Xmax = point72ToNcode(x2) - point72ToNcode(r);\r\n    let Ymax = point72ToNcode(y2) - point72ToNcode(b);\r\n\r\n    if (Xmin !== Xmin_old || Xmax !== Xmax_old || Ymin !== Ymin_old || Ymax !== Ymax_old) {\r\n      // console.log(ccc.html());\r\n      let obj = {\r\n        name,\r\n        section,\r\n        owner,\r\n        book,\r\n        Xmin,\r\n        Ymin,\r\n        Xmax,\r\n        Ymax,\r\n        Mag: 1,\r\n      }\r\n      console.log(obj);\r\n      result.push(obj);\r\n      Xmin_old = Xmin;\r\n      Xmax_old = Xmax;\r\n\r\n      Ymin_old = Ymin;\r\n      Ymax_old = Ymax;\r\n      console.log(`${section}.${owner}.${book} ==> ${filename}/${page_no} ==> ${crop_margin}`);\r\n    }\r\n  });\r\n\r\n  // ${xml}.find(\"\")\r\n  console.log(xml);\r\n\r\n}\r\n\r\n\r\n/**\r\n *\r\n * @param {string} zipurl\r\n * @param {{section:number, owner:number, book:number}} bookInfo\r\n */\r\nfunction getZippedResouce(zipurl, bookInfo) {\r\n  const { section, owner, book } = bookInfo;\r\n\r\n  fetch(zipurl).then((response) => {\r\n    if (response.ok) {\r\n      response.blob().then((data) => {\r\n\r\n        let zip = new JSZip();\r\n        zip.loadAsync(data).then(function (contents) {\r\n          // console.log( contents.files);\r\n          Object.keys(contents.files).forEach(function (filename) {\r\n            zip.file(filename).async('nodebuffer').then(function (content) {\r\n              let n = filename.search(\".nproj\");\r\n              if (n > 0) {\r\n                let xml = new TextDecoder(\"utf-8\").decode(content);\r\n                extractMarginInfo(xml, { filename, section, owner, book });\r\n              }\r\n              // let dest = path + filename;\r\n              // fs.writeFileSync(dest, content);\r\n            });\r\n          });\r\n        });\r\n        // console.log(data);\r\n      });\r\n    }\r\n\r\n  });\r\n}\r\n\r\nexport default class NoteserverClient {\r\n  // constructor() {\r\n\r\n  // }\r\n\r\n  /**\r\n   *\r\n   * @param {{section:number, owner:number, book:number, page:number}} pageInfo\r\n   */\r\n  async getNoteInfo(pageInfo) {\r\n    // const { section, owner, book } = pageInfo;\r\n\r\n    let url = \"http://nbs.neolab.net/v1/notebooks/attributes?device=android\";\r\n    let el: any = document.getElementById('str')\r\n    let s = encodeURIComponent(el.value);\r\n\r\n\r\n\r\n    // $.getJSON(url + \"?callback=?\", data, (data) => { console.log(data); } );\r\n\r\n    $.ajax({\r\n      type: \"GET\",\r\n      dataType: \"json\",\r\n      url: url,\r\n      data: { 's': s },\r\n      jsonpCallback: \"myCallback\",\r\n      // jsonpCallback: \"callback\",\r\n      success: function (data) {\r\n        // console.log(data);\r\n        let arr = data.attributes;\r\n        for (let i = 0; i < arr.length; i++) {\r\n          // for (let i = 0; i < 2; i++) {\r\n          let item = arr[i];\r\n\r\n          let section = item.section_id;\r\n          let owner = item.owner_id;\r\n          let book = item.note_id;\r\n\r\n          if (owner === 27 && book === 168) {\r\n            let zipurl = item.resource.zipimage;\r\n            getZippedResouce(zipurl, { section, owner, book });\r\n          }\r\n\r\n        }\r\n        // page 정보\r\n      },\r\n      error: function (error) {\r\n        console.log(error);\r\n      },\r\n      complete: function () {\r\n\r\n      },\r\n    });\r\n\r\n\r\n    //   let response;\r\n    //   try {\r\n    //     let origin = window.location.origin;\r\n    //     const headers = { authorization: `Bearer` };\r\n\r\n    //     response = await fetch(\"http://nbs.neolab.net/v1/notebooks/attributes?device=android\", { headers });\r\n    //   } catch (err) {\r\n    //     console.error(err);\r\n    //     return;\r\n    //   }\r\n\r\n    //   console.log(\"test 1 response.status : \", response.status);\r\n\r\n    //   if (response.ok) {\r\n    //     let jsonData = await response.json();\r\n\r\n    //     for (let i = 0; i < jsonData.resultElements.length; i++) {\r\n    //       let resultElement = jsonData.resultElements[i];\r\n    //       console.log(resultElement);\r\n    //     }\r\n    //   }\r\n    // }\r\n  }\r\n}","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\utils\\UtilsFunc.ts",["859","860","861","862","863","864"],"import { backingStoreRatio } from \"./JsUtils\";\r\nimport * as CONST from \"../constants\";\r\nimport { IPageSOBP } from \"../DataStructure/Structures\";\r\nexport { backingStoreRatio };\r\n\r\n\r\n/**\r\n * @return {string} - uuid\r\n */\r\nexport function uuidv4(): string {\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n    // let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n    let r = Math.random() * 16 | 0, v = c === 'x' ? r : ((r & 0x3) | 0x8);\r\n    return v.toString(16);\r\n  });\r\n}\r\n\r\nexport function getDisplayRatio(): number {\r\n  let dpr = window.devicePixelRatio || 1;\r\n  return dpr;\r\n}\r\n\r\nexport function scaleCanvas(canvas: HTMLCanvasElement) {\r\n  const context = canvas.getContext('2d');\r\n\r\n  // Get the device pixel ratio, falling back to 1.\r\n  let dpr = window.devicePixelRatio || 1;\r\n  // Get the size of the canvas in CSS pixels.\r\n  let rect = canvas.getBoundingClientRect();\r\n  const { width, height } = rect;\r\n\r\n  // determine the actual ratio we want to draw at\r\n  const ratio = dpr / backingStoreRatio(context);\r\n\r\n  // Give the canvas pixel dimensions of their CSS\r\n  // size * the device pixel ratio.\r\n  canvas.width = rect.width * ratio;\r\n  canvas.height = rect.height * ratio;\r\n  // Scale all drawing operations by the dpr, so you\r\n  // don't have to worry about the difference.\r\n\r\n\r\n  if (devicePixelRatio !== backingStoreRatio(context)) {\r\n    // set the 'real' canvas size to the higher width/height\r\n    canvas.width = width * ratio;\r\n    canvas.height = height * ratio;\r\n\r\n    // ...then scale it back down with CSS\r\n    canvas.style.width = width + 'px';\r\n    canvas.style.height = height + 'px';\r\n  }\r\n  else {\r\n    // this is a normal 1:1 device; just scale it simply\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    canvas.style.width = '';\r\n    canvas.style.height = '';\r\n  }\r\n\r\n  // scale the drawing context so everything will work at the higher ratio\r\n  context.scale(ratio, ratio);\r\n}\r\n\r\n\r\nexport function ncodeToInch(n: number): number {\r\n  return n * CONST.NCODE_TO_INCH_SCALE;\r\n}\r\n\r\nexport function ncodeToDisplayPixel(n: number): number {\r\n  return n * CONST.NCODE_TO_INCH_SCALE * CONST.DISPLAY_DEFAULT_DPI * getDisplayRatio();\r\n}\r\n\r\n\r\n\r\nexport function pdfSizeUnitToInch(n: number): number {\r\n  // 72 DPI\r\n  return n * CONST.PDF_SCALE_TO_INCH;\r\n}\r\n\r\nexport function pdfSizeUnitToDIsplayPixel(n: number): number {\r\n  return n * CONST.PDF_SCALE_TO_INCH * CONST.DISPLAY_DEFAULT_DPI * getDisplayRatio();\r\n}\r\n\r\n\r\nexport function pdfSizeToDIsplayPixel(sz: { width: number, height: number }): { width: number, height: number } {\r\n  return {\r\n    width: pdfSizeUnitToDIsplayPixel(sz.width),\r\n    height: pdfSizeUnitToDIsplayPixel(sz.height),\r\n  };\r\n}\r\n\r\n\r\nexport function isSamePage(page1: IPageSOBP, page2: IPageSOBP): boolean {\r\n  if (page1.page !== page2.page || page1.book !== page2.book || page1.owner !== page2.owner || page1.section !== page2.section) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\noteserver\\PaperInfo.ts",["865","866","867","868","869","870","871","872"],"import {\r\n  // SINGLE_CODE_SIZE_PER_INCH,\r\n  // NCODE_TO_MM_SCALE,\r\n  NCODE_TO_INCH_SCALE,\r\n  // NCODE_TO_SCREEN_SCALE,\r\n  // INCH_TO_MM,\r\n\r\n  DEFAULT_SECTION,\r\n  DEFAULT_OWNER,\r\n  DEFAULT_BOOK,\r\n\r\n  // PDF_DEFAULT_DPI,\r\n  // DISPLAY_DEFAULT_DPI,\r\n} from \"../constants\";\r\n\r\nimport { IPageSOBP, INcodeSOBPxy, ISize, INoteServerSizeInfo } from \"../DataStructure/Structures\";\r\n\r\nconst PaperType = {\r\n  paperA4_dummy: {\r\n    name: \"paperA4_dummy\",\r\n    section: 3,\r\n    owner: 27,\r\n    books: [0],\r\n    Xmin: 0,\r\n    Ymin: 0,\r\n    Xmax: 88.56,\r\n    Ymax: 125.24,\r\n    Mag: 1,\r\n  },\r\n\r\n  paperSCKP: {\r\n    section: 3,\r\n    owner: 1013,\r\n    books: [1],\r\n    Xmin: 4.91,\r\n    Ymin: 4.91,\r\n    Xmax: 113.28,\r\n    Ymax: 81.66,\r\n    Mag: 1,\r\n  },\r\n  paperSCKPad: {\r\n    section: 3,\r\n    owner: 1013,\r\n    books: [2],\r\n    Xmin: 0,\r\n    Ymin: 0,\r\n    Xmax: 88.55,\r\n    Ymax: 49.76,\r\n    Mag: 2,\r\n  },\r\n\r\n  paperA4300: {\r\n    section: 3,\r\n    owner: 27,\r\n    books: [168],\r\n    Xmin: 3.12,\r\n    Ymin: 3.12,\r\n    Xmax: 91.68,\r\n    Ymax: 128.36,\r\n    Mag: 1,\r\n  },\r\n\r\n  paperResearch: {\r\n    section: 3,\r\n    owner: 27,\r\n    books: [205],\r\n    Xmin: 5.48,\r\n    Ymin: 5.48,\r\n    Xmax: 102.47,\r\n    Ymax: 131.99,\r\n    Mag: 1,\r\n  },\r\n\r\n  paperDnote: {\r\n    section: 3,\r\n    owner: 27,\r\n    books: [232, 233, 234, 235, 236],\r\n    Xmin: 5.48,\r\n    Ymin: 5.48,\r\n    Xmax: 84.76,\r\n    Ymax: 113.85,\r\n    Mag: 1,\r\n  },\r\n\r\n  paperA450: {\r\n    section: 3,\r\n    owner: 27,\r\n    book: 517,\r\n    Xmin: 5.48,\r\n    Ymin: 5.48,\r\n    Xmax: 94.04,\r\n    Ymax: 130.72,\r\n    Mag: 1,\r\n  },\r\n\r\n  paperNring: {\r\n    section: 3,\r\n    owner: 27,\r\n    book: 603,\r\n    Xmin: 5.48,\r\n    Ymin: 5.48,\r\n    Xmax: 68.73,\r\n    Ymax: 94.04,\r\n    Mag: 1,\r\n  },\r\n\r\n  paperIdeaPad: {\r\n    section: 3,\r\n    owner: 27,\r\n    book: 609,\r\n    Xmin: 5.48,\r\n    Ymin: 16.02,\r\n    Xmax: 94.04,\r\n    Ymax: 130.72,\r\n    Mag: 1,\r\n  },\r\n\r\n  paperNpro: {\r\n    section: 3,\r\n    owner: 27,\r\n    book: 615,\r\n    Xmin: 5.48,\r\n    Ymin: 5.48,\r\n    Xmax: 64.52,\r\n    Ymax: 83.07,\r\n    Mag: 1,\r\n  },\r\n\r\n  paperCollege: {\r\n    section: 3,\r\n    owner: 27,\r\n    books: [619, 655, 656, 657],\r\n    Xmin: 5.48,\r\n    Ymin: 5.48,\r\n    Xmax: 96.57,\r\n    Ymax: 123.55,\r\n    Mag: 1,\r\n  },\r\n\r\n  paperMskin: {\r\n    section: 3,\r\n    owner: 27,\r\n    books: [700],\r\n    Xmin: 1.26,\r\n    Ymin: 1.67,\r\n    Xmax: 55.91,\r\n    Ymax: 89.21,\r\n    Mag: 1,\r\n  },\r\n  paperMSK701: {\r\n    section: 3,\r\n    owner: 27,\r\n    books: [701],\r\n    Xmin: 4.22,\r\n    Ymin: 4.22,\r\n    Xmax: 59.53,\r\n    Ymax: 92.85,\r\n    Mag: 1,\r\n  },\r\n\r\n  paperMSK703: {\r\n    section: 3,\r\n    owner: 27,\r\n    books: [703, 704],\r\n    Xmin: 4.61,\r\n    Ymin: 4.61,\r\n    Xmax: 59.43,\r\n    Ymax: 93.17,\r\n    Mag: 1,\r\n  },\r\n\r\n  paperMSK705: {\r\n    section: 3,\r\n    owner: 27,\r\n    book: 705,\r\n    Xmin: 3.12,\r\n    Ymin: 3.12,\r\n    Xmax: 57.94,\r\n    Ymax: 91.68,\r\n    Mag: 1,\r\n  },\r\n\r\n  paperMSK708: {\r\n    section: 3,\r\n    owner: 27,\r\n    book: 708,\r\n    Xmin: 3.12,\r\n    Ymin: 3.12,\r\n    Xmax: 83.24,\r\n    Ymax: 108.54,\r\n    Mag: 1,\r\n  },\r\n\r\n  paperA4_POD: {\r\n    section: 3,\r\n    owner: 27,\r\n    book: 1068,\r\n    Xmin: 5,\r\n    Ymin: 5,\r\n    Xmax: 93.46,\r\n    Ymax: 130.24,\r\n    Mag: 1,\r\n  },\r\n};\r\n\r\n\r\n\r\nclass PaperInfo {\r\n  CODE_DEFAULT: IPageSOBP;\r\n\r\n  constructor() {\r\n    this.CODE_DEFAULT = {\r\n      section: DEFAULT_SECTION,\r\n      owner: DEFAULT_OWNER,\r\n      book: DEFAULT_BOOK,\r\n      page: 1,\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param pageInfo\r\n   */\r\n  isPlatePaper = (pageInfo: IPageSOBP): boolean => {\r\n    const { owner, book } = pageInfo;\r\n    if (owner === 1013 && book === 2) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param coordInfo\r\n   */\r\n  isPUI = (coordInfo: INcodeSOBPxy): boolean => {\r\n    const { owner, book, page, } = coordInfo;\r\n    // console.log( `isPUI: ${owner}.${book}.${page}`);\r\n    if (owner === 27 && book === 161 && page === 1) {\r\n      return true;\r\n    }\r\n\r\n    if (owner === 1013 && book === 1) {\r\n      // page === 4, Smart plate\r\n      // page === 1, Plate paper\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param pageInfo\r\n   */\r\n  getPaperSize = (pageInfo: IPageSOBP): ISize => {\r\n    // const { section, owner, book, page } = pageInfo;\r\n    let size: ISize = { width: 0, height: 0 };\r\n    let paper_info = this.getPaperInfo(pageInfo);\r\n\r\n    size.width = paper_info.Xmax - paper_info.Xmin;\r\n    size.height = paper_info.Ymax - paper_info.Ymin;\r\n\r\n    // console.log(\"width=\" + size.width + \"  height=\" + size.height);\r\n    return size;\r\n  }\r\n\r\n  /**\r\n   * paper size를 해당 DPI의 pixel 단위로 돌려 준다.\r\n   * @param pageInfo\r\n   * @param dpi\r\n   */\r\n  getPaperSize_px = (pageInfo: IPageSOBP, dpi: number): ISize => {\r\n    // const { section, owner, book, page } = pageInfo;\r\n    let size = this.getPaperSize(pageInfo);\r\n    size.width = size.width * NCODE_TO_INCH_SCALE * dpi;\r\n    size.height = size.height * NCODE_TO_INCH_SCALE * dpi;\r\n\r\n    return size;\r\n  }\r\n\r\n  /**\r\n   * paper size를 해당 inch 단위로 돌려 준다.\r\n   * @param pageInfo\r\n   */\r\n  getPaperSize_inch = (pageInfo: IPageSOBP): ISize => {\r\n    // const { section, owner, book, page, } = pageInfo;\r\n\r\n    let size = this.getPaperSize(pageInfo);\r\n    size.width = size.width * NCODE_TO_INCH_SCALE;\r\n    size.height = size.height * NCODE_TO_INCH_SCALE;\r\n\r\n    return size;\r\n  };\r\n\r\n  /**\r\n   * paper size를 해당 inch 단위로 돌려 준다.\r\n   * @public\r\n   * @param {{section?:number, owner:number, book:number, page?:number}} pageInfo\r\n   */\r\n  getPaperInfo = (pageInfo: IPageSOBP): INoteServerSizeInfo => {\r\n    const { owner, book } = pageInfo;\r\n\r\n    let info = PaperType.paperA4_dummy;\r\n    // let found = false;\r\n\r\n    let keys = Object.keys(PaperType);\r\n    for (let j = 0; j < keys.length; j++) {\r\n      let key = keys[j];\r\n      let value = PaperType[key];\r\n\r\n      if (Array.isArray(value.book)) {\r\n        let idx = value.book.findIndex((elem) => elem === book);\r\n        if (value.owner === owner && idx > -1) {\r\n          info = value;\r\n          info.name = key;\r\n          // found = true;\r\n          break;\r\n        }\r\n      } else {\r\n        // array가 아니면 숫자\r\n        if (value.owner === owner && value.book === book) {\r\n          info = value;\r\n          info.name = key;\r\n          // found = true;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return info;\r\n  }\r\n}\r\n\r\nexport const paperInfo = (function () {\r\n  return new PaperInfo();\r\n})();","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\types\\index.js",[],"C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\renderer\\MixedPageView.tsx",["873","874","875","876","877","878","879","880","881"],"import React, { CSSProperties } from \"react\";\r\nimport PenBasedRenderer, { PLAYSTATE } from \"./pageviewer/PenBasedRenderer\";\r\nimport NeoPdfViewer from \"./pdf/NeoPdfViewer\";\r\nimport { IPageSOBP } from \"../DataStructure/Structures\";\r\nimport { NeoSmartpen } from \"../pencomm/neosmartpen\";\r\nimport * as PdfJs from \"pdfjs-dist\";\r\n\r\ninterface Props {\r\n  pageInfo?: IPageSOBP;\r\n  pdfUrl: string;\r\n  pageNo: number;\r\n  pens: NeoSmartpen[];\r\n\r\n  scale: number,\r\n  playState: PLAYSTATE;\r\n}\r\n\r\ninterface State {\r\n  pageInfo: IPageSOBP;\r\n  pdfUrl: string;\r\n\r\n  /** NOTE: pageNo라고 씌어 있는 것은, 항상 PDF의 페이지번호(1부터 시작)를 나타내기로 한다.  */\r\n  pageNo: number;\r\n  canvasPosition: { offsetX: number, offsetY: number, zoom: number },\r\n\r\n  renderCount: number;\r\n}\r\n\r\nconst tempStyle: CSSProperties = {\r\n  position: \"absolute\",\r\n  // height: \"100%\",\r\n  // width: \"100%\",\r\n  left: \"0px\",\r\n  top: \"0px\",\r\n  overflow: \"hidden\",\r\n}\r\n\r\nexport default class MixedPageView extends React.Component<Props, State> {\r\n  waitingForFirstStroke: boolean = true;\r\n  pdf: PdfJs.PDFDocumentProxy;\r\n  rendererRef: React.RefObject<PenBasedRenderer> = React.createRef();\r\n\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    let { pageInfo, pdfUrl, pageNo } = props;\r\n\r\n    if (!pageInfo) {\r\n      pageInfo = { section: -1, owner: -1, book: -1, page: -1, }\r\n    }\r\n\r\n    const canvasPosition = { offsetX: 0, offsetY: 0, zoom: 1 };\r\n    this.state = { pageInfo, pdfUrl, pageNo, canvasPosition, renderCount: 0 };\r\n  }\r\n\r\n  onReportPdfInfo = (pdf: PdfJs.PDFDocumentProxy) => {\r\n    this.pdf = pdf;\r\n  }\r\n\r\n  onNcodePageChanged = (pageInfo: IPageSOBP) => {\r\n    if (this.pdf) {\r\n      const numPages = this.pdf.numPages;\r\n\r\n      let pageDelta = 0;\r\n      if (this.waitingForFirstStroke) {\r\n        pageDelta = 0;\r\n        this.waitingForFirstStroke = false;\r\n        this.setState({ pageInfo });\r\n      }\r\n      else {\r\n        pageDelta = pageInfo.page - this.state.pageInfo.page;\r\n        pageDelta += numPages;\r\n        pageDelta = pageDelta % numPages;\r\n      }\r\n      this.setState({ pageNo: pageDelta + 1 });\r\n\r\n    }\r\n    /** 여기까지 임시 내용 */\r\n  }\r\n\r\n  onCanvasShapeChanged = (arg: { offsetX: number, offsetY: number, zoom: number }) => {\r\n    console.log(arg);\r\n    this.setState({ canvasPosition: arg });\r\n\r\n    const r = this.state.renderCount;\r\n    this.setState({ renderCount: r + 1 });\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps: Props, nextState: State) {\r\n    if (nextProps.pdfUrl !== this.props.pdfUrl) {\r\n      this.setState({ pdfUrl: nextProps.pdfUrl });\r\n      return false;\r\n    }\r\n    // console.log(\"update requested\");\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    const pdfCanvas: CSSProperties = {\r\n      position: \"absolute\",\r\n      // height: \"100%\",\r\n      // width: \"100%\",\r\n      left: this.state.canvasPosition.offsetX + \"px\",\r\n      top: this.state.canvasPosition.offsetY + \"px\",\r\n      // zoom: this.state.canvasPosition.zoom,\r\n      overflow: \"hidden\",\r\n    }\r\n\r\n    // console.log(this.state.canvasPosition);\r\n    return (\r\n      <div id={\"mixed_view\"} style={{\r\n        // position: \"absolute\",\r\n        left: \"0px\", top: \"0px\",\r\n        flexDirection: \"row-reverse\", display: \"flex\",\r\n        width: \"100%\", height: \"100%\",\r\n        alignItems: \"center\",\r\n        zIndex: 1,\r\n      }}>\r\n        <div id={\"pdf_layer\"} style={pdfCanvas}>\r\n          <NeoPdfViewer\r\n            url={this.state.pdfUrl} pageNo={this.state.pageNo} onReportPdfInfo={this.onReportPdfInfo}\r\n            position={this.state.canvasPosition}\r\n          />\r\n        </div>\r\n        <div id={\"ink_layer\"} style={tempStyle}>\r\n          <PenBasedRenderer\r\n            scale={1}\r\n            pageInfo={{ section: 0, owner: 0, book: 0, page: 0 }}\r\n            playState={PLAYSTATE.live} pens={this.props.pens}\r\n            onNcodePageChanged={this.onNcodePageChanged}\r\n            onCanvasShapeChanged={this.onCanvasShapeChanged}\r\n            ref={this.rendererRef}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\RenderWorkerBase.tsx",["882","883","884","885","886","887","888","889","890","891","892","893","894","895","896","897","898","899","900","901","902","903","904","905","906","907","908","909","910","911","912","913","914","915","916","917","918","919","920","921","922","923","924","925","926","927","928","929","930","931","932","933","934","935","936","937","938","939","940","941","942","943","944","945","946","947","948","949","950","951","952","953","954","955","956","957","958","959","960","961","962","963","964","965","966","967","968","969"],"import \"../../types\";\r\nimport { fabric } from \"fabric\";\r\nimport { InkStorage } from \"../..\";\r\nimport { PATH_THICKNESS_SCALE } from \"./DrawCurves\";\r\n// import { NCODE_TO_SCREEN_SCALE } from \"../../constants\";\r\nimport { IWritingSurfaceInfo, ISize } from \"../../DataStructure/Structures\";\r\nimport { ncodeToDisplayPixel } from \"../../utils/UtilsFunc\";\r\n// import { paperInfo } from \"../../noteserver/PaperInfo\";\r\n// import { plugToRequest } from \"react-cookies\";\r\n// import { scaleCanvas } from \"../../utils/UtilsFunc\";\r\n// import { IRectOptions } from \"fabric/fabric-impl\";\r\n\r\n// const timeTickDuration = 20; // ms\r\n// const DISABLED_STROKE_COLOR = \"rgba(0, 0, 0, 0.1)\";\r\n// const INVISIBLE_STROKE_COLOR = \"rgba(255, 255, 255, 0)\";\r\n// const INCOMPLETE_STROKE_COLOR = \"rgba(255, 0, 255, 0.4)\";\r\n// const CURRENT_POINT_STROKE_COLOR = \"rgba(255, 255, 255, 1)\";\r\n\r\n\r\nexport enum PLAYSTATE {\r\n  live,\r\n  play,\r\n  stop,\r\n  pause,\r\n  rewind,\r\n  trackRewind,\r\n  setAutoStop,\r\n  unsetAutoStop,\r\n};\r\n\r\nexport enum ZoomFitEnum {\r\n  ACTUAL,\r\n  WIDTH,\r\n  HEIGHT,\r\n  FULL,\r\n}\r\n\r\n\r\nexport type IRenderWorkerOption = {\r\n  canvasId: string,\r\n\r\n  canvasRef: React.RefObject<HTMLCanvasElement>,\r\n  width: number,\r\n  height: number,\r\n  viewFit: ZoomFitEnum,\r\n  bgColor?: string,\r\n  mouseAction?: boolean,\r\n  shouldDisplayGrid?: boolean,\r\n  storage?: InkStorage,\r\n\r\n  onCanvasShapeChanged: Function,\r\n}\r\n\r\n/**\r\n * @enum {string}\r\n */\r\n\r\n// const STROKE_OBJECT_ID = \"ns\";\r\nconst GRID_OBJECT_ID = \"g\";\r\n\r\n/**\r\n * @typedef {Object} RenderWorkerOption\r\n * @property {string} canvasId\r\n * @property {number} width\r\n * @property {number} height\r\n * @property {string} [bgColor]\r\n * @property {boolean} [mouseAction]\r\n * @property {ZoomFitEnum} [viewFit]\r\n * @property {boolean} [shouldDisplayGrid]\r\n * @property {InkStorage} [storage]\r\n *\r\n */\r\n\r\nexport default class RenderWorkerBase {\r\n\r\n  name: string;\r\n  /** canvas element ID */\r\n  canvasId: string = \"\";\r\n\r\n  canvasRef: React.RefObject<HTMLCanvasElement>;\r\n\r\n  /** background color */\r\n  bgColor: string = \"rgba(255,255,255,0)\";\r\n\r\n  /** the size when first initied */\r\n  initialSize: { width: number, height: number } = { width: 0, height: 0 };\r\n\r\n  /** the size after resize */\r\n  currSize: { width: number, height: number } = { width: 0, height: 0 };\r\n\r\n  /** FabricJs canvas */\r\n  canvasFb: fabric.Canvas = null;\r\n\r\n  /** mouse에 따라 pan, zoom이 가능한지에 대한 여부 */\r\n  mouseAction: boolean = true;\r\n\r\n  /**  mouse에 따라 pan, zoom이 가능한지에 대한 여부 */\r\n  zoomCtrlKey: boolean = false;\r\n\r\n  /** mouse drag & panning 을 위해 */\r\n  pan: { isDragging: boolean, lastPosX: number, lastPosY: number } = {\r\n    isDragging: false,\r\n    lastPosX: 0,\r\n    lastPosY: 0,\r\n  };\r\n\r\n  /** pen stroke에 따라 자동 focus를 맞추도록 */\r\n  autoFocus: boolean = true;\r\n\r\n  /** <canvas>내의 drawing canvas(fabric canvas)의 offset, 현재는 안 씀 - 2020/11/08*/\r\n  offset: { x: number, y: number } = { x: 0, y: 0 };\r\n\r\n  /** 종이 정보 */\r\n  surfaceInfo: IWritingSurfaceInfo = {\r\n    section: 3,\r\n    owner: 27,\r\n    book: 168,\r\n    page: 1,\r\n\r\n    Xmin: 3.12,   // code unit\r\n    Ymin: 3.12,\r\n    Xmax: 91.68,\r\n    Ymax: 128.36,\r\n    Mag: 1,\r\n  };\r\n\r\n  /** Ncode to Screen scale */\r\n  base_scale: number;\r\n\r\n  /** logical zoom in/out */\r\n  scale: number = 1;\r\n\r\n  /** zoom fit */\r\n  viewFit: ZoomFitEnum = ZoomFitEnum.ACTUAL;\r\n\r\n  /** determine whether border and grid lines displayed or not */\r\n  shouldDisplayGrid: boolean = true;\r\n\r\n  /** animation timer */\r\n  scrollAnimateTimer: number = null;\r\n  options: IRenderWorkerOption;\r\n\r\n\r\n\r\n  /**\r\n   *\r\n   * @param {RenderWorkerOption} options\r\n   */\r\n  constructor(options: IRenderWorkerOption) {\r\n    const { canvasId, canvasRef, width, height, bgColor, mouseAction, viewFit, shouldDisplayGrid } = options;\r\n\r\n    this.name = \"RenderWorkerBase\";\r\n\r\n    if (typeof canvasId !== \"string\") {\r\n      throw new Error(\"canvasId should be a string\");\r\n    }\r\n\r\n    this.canvasId = canvasId;\r\n    this.canvasRef = canvasRef;\r\n\r\n    this.initialSize = { width, height };\r\n    this.currSize = { width, height };\r\n\r\n    this.base_scale = ncodeToDisplayPixel(1);\r\n    this.scale = 1;\r\n\r\n    this.canvasFb = null;\r\n\r\n    if (bgColor !== undefined) this.bgColor = bgColor;\r\n    if (typeof (mouseAction) === \"boolean\") this.mouseAction = mouseAction;\r\n\r\n    if (viewFit) {\r\n      this.viewFit = viewFit;\r\n    }\r\n    else {\r\n      this.viewFit = ZoomFitEnum.ACTUAL;\r\n    }\r\n\r\n    if (typeof (shouldDisplayGrid) === \"boolean\") this.shouldDisplayGrid = shouldDisplayGrid;\r\n\r\n    this.options = options;\r\n    this.init();\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  init = () => {\r\n    const size = this.currSize;\r\n\r\n    // let HtmlCanvas = this.canvasRef.current;\r\n    // const dpr = getDisplayRatio();\r\n    // scaleCanvas(HtmlCanvas);\r\n    const dpr = 1;\r\n\r\n    console.log(`Fabric canvas inited: size(${size.width}, ${size.height})`);\r\n\r\n    this.canvasFb = new fabric.Canvas(this.canvasId, {\r\n\r\n      backgroundColor: this.bgColor ? this.bgColor : \"rgba(255,255,0,0.5)\",\r\n      selection: false,\r\n      controlsAboveOverlay: false,\r\n      selectionLineWidth: 4,\r\n      width: size.width * dpr,\r\n      height: size.height * dpr,\r\n\r\n    });\r\n\r\n    let canvasFb = this.canvasFb;\r\n\r\n    if (this.mouseAction) {\r\n      canvasFb.on('mouse:down', this.onCanvasMouseDown);\r\n      canvasFb.on('mouse:move', this.onCanvasMouseMove);\r\n      canvasFb.on('mouse:up', this.onCanvasMousUp);\r\n      canvasFb.on('mouse:wheel', this.onCanvasMouseWheel);\r\n    }\r\n\r\n    this.drawPageLayout();\r\n  }\r\n\r\n  getSurfaceSize_CSS = (): ISize => {\r\n    const { Xmin, Xmax, Ymin, Ymax } = this.surfaceInfo;\r\n    const ncode_width = Xmax - Xmin;\r\n    const ncode_height = Ymax - Ymin;\r\n\r\n    const actual_width = ncodeToDisplayPixel(ncode_width);\r\n    const actual_height = ncodeToDisplayPixel(ncode_height);\r\n    let s: ISize = {\r\n      width: actual_width * this.scale,\r\n      height: actual_height * this.scale,\r\n    };\r\n\r\n    return s;\r\n  }\r\n\r\n  drawPageLayout = () => {\r\n    if (!this.shouldDisplayGrid) return;\r\n    const canvasFb = this.canvasFb;\r\n\r\n    // 지우기\r\n    if (this.canvasFb) {\r\n      let objects = this.canvasFb.getObjects();\r\n      let strokes = objects.filter(obj => obj.data === GRID_OBJECT_ID);\r\n\r\n      strokes.forEach((obj) => {\r\n        this.canvasFb.remove(obj);\r\n      });\r\n    }\r\n\r\n    // 그리기\r\n    const size = this.getSurfaceSize_CSS();\r\n    console.log(`drawPageLayout: ${size.width}, ${size.height}`);\r\n\r\n    // console.log(`Grid: scale=${this.base_scale} (width, height)=(${size.width}, ${size.height})`);\r\n\r\n    const ratio = 1;\r\n\r\n    let rect = new fabric.Rect({\r\n      width: size.width * ratio - 5,\r\n      height: size.height * ratio - 5,\r\n      strokeWidth: 5,\r\n      stroke: 'rgba(0,0,0,1)',\r\n      fill: 'rgb(100,100,200, 0.1)',\r\n      left: size.width * (1 - ratio) * 0.5,\r\n      top: size.height * (1 - ratio) * 0.5,\r\n      // lockMovementX: true,\r\n      // lockMovementY: true,\r\n      selectable: false,\r\n      data: GRID_OBJECT_ID,\r\n\r\n    });\r\n    canvasFb.add(rect);\r\n\r\n    for (let x = 0; x < size.width; x += 10) {\r\n      let line = new fabric.Line([x, 0, x, size.height], {\r\n        strokeWidth: 0.5,\r\n        stroke: \"rgba(0,0,0,0.1)\",\r\n        hasControls: false,\r\n        hasBorders: false,\r\n        lockMovementX: true,\r\n        lockMovementY: true,\r\n        data: GRID_OBJECT_ID,\r\n      });\r\n\r\n      canvasFb.add(line);\r\n    }\r\n\r\n\r\n    for (let y = 0; y < size.height; y += 10) {\r\n      let line = new fabric.Line([0, y, size.width, y], {\r\n        strokeWidth: 0.5,\r\n        stroke: \"rgba(0,0,0,0.1)\",\r\n        hasControls: false,\r\n        hasBorders: false,\r\n        lockMovementX: true,\r\n        lockMovementY: true,\r\n        data: GRID_OBJECT_ID,\r\n      });\r\n\r\n      canvasFb.add(line);\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * enable/disable mouse drag panning and zoom in/out\r\n   * default: true\r\n   *\r\n   * @public\r\n   * @param {boolean} sw\r\n   */\r\n  enableMouseAction = (sw: boolean) => {\r\n    if (this.mouseAction !== sw) {\r\n      let canvasFb = this.canvasFb;\r\n\r\n      if (sw === false) {\r\n\r\n        this.onCanvasMousUp();\r\n\r\n        canvasFb.off('mouse:down', this.onCanvasMouseDown);\r\n        canvasFb.off('mouse:move', this.onCanvasMouseMove);\r\n        canvasFb.off('mouse:up', this.onCanvasMousUp);\r\n        canvasFb.off('mouse:wheel', this.onCanvasMouseWheel);\r\n      }\r\n      else {\r\n        canvasFb.on('mouse:down', this.onCanvasMouseDown);\r\n        canvasFb.on('mouse:move', this.onCanvasMouseMove);\r\n        canvasFb.on('mouse:up', this.onCanvasMousUp);\r\n        canvasFb.on('mouse:wheel', this.onCanvasMouseWheel);\r\n      }\r\n    }\r\n    this.mouseAction = sw;\r\n  }\r\n\r\n  /**\r\n   * enable/disable auto set focus at current stroke point\r\n   * default: true\r\n   *\r\n   * @public\r\n   * @param {boolean} sw\r\n   */\r\n  enableAutoFocus = (sw: boolean) => {\r\n    this.autoFocus = sw;\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * @param {Object} opt\r\n   */\r\n  onCanvasMouseDown = (opt: any) => {\r\n    let canvasFb = this.canvasFb;\r\n\r\n    let evt: MouseEvent = opt.e;\r\n\r\n    this.pan.isDragging = true;\r\n    this.pan.lastPosX = evt.clientX;\r\n    this.pan.lastPosY = evt.clientY;\r\n\r\n    canvasFb.selection = false;\r\n\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * @param {Object} opt\r\n   */\r\n  onCanvasMouseMove = (opt: any) => {\r\n    let canvasFb = this.canvasFb;\r\n\r\n    if (this.pan.isDragging) {\r\n      let e: MouseEvent = opt.e;\r\n      // console.log(`Point ${e.clientX}, ${e.clientY}`);\r\n      let vpt = canvasFb.viewportTransform;\r\n      vpt[4] += e.clientX - this.pan.lastPosX;\r\n      vpt[5] += e.clientY - this.pan.lastPosY;\r\n\r\n      this.scrollBoundaryCheck();\r\n\r\n      // event 전달\r\n      this.reportCanvasChanged();\r\n      // canvas.setViewportTransform(vpt);\r\n      canvasFb.requestRenderAll();\r\n\r\n      this.pan.lastPosX = e.clientX;\r\n      this.pan.lastPosY = e.clientY;\r\n\r\n\r\n\r\n      // this.canvasBoundaryCheck();\r\n    }\r\n  }\r\n\r\n  reportCanvasChanged = () => {\r\n    let canvasFb = this.canvasFb;\r\n    let vpt = canvasFb.viewportTransform;\r\n    const offsetX = vpt[4];\r\n    const offsetY = vpt[5];\r\n\r\n    const zoom = canvasFb.getZoom();\r\n\r\n    this.options.onCanvasShapeChanged({ offsetX, offsetY, zoom });\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * @param {Object} opt\r\n   */\r\n  onCanvasMousUp = (opt: any = undefined) => {\r\n    let canvasFb = this.canvasFb;\r\n\r\n\r\n    // on mouse up we want to recalculate new interaction\r\n    // for all objects, so we call setViewportTransform\r\n    canvasFb.setViewportTransform(canvasFb.viewportTransform);\r\n    this.pan.isDragging = false;\r\n    canvasFb.selection = false;\r\n\r\n\r\n    // let vpt = canvas.viewportTransform;\r\n    // console.log(vpt);\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * @param {Object} opt\r\n   */\r\n  onCanvasMouseWheel = (opt: any) => {\r\n    let evt: MouseEvent = opt.e;\r\n    if ((!this.zoomCtrlKey) || (this.zoomCtrlKey === true && evt.ctrlKey === true)) {\r\n      let canvasFb = this.canvasFb;\r\n\r\n      let delta = opt.e.deltaY;\r\n      let zoom = canvasFb.getZoom();\r\n      zoom *= 0.999 ** delta;\r\n\r\n      this.setCanvasZoom(zoom, opt);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  scrollBoundaryCheck = () => {\r\n\r\n    // const canvasFb = this.canvasFb;\r\n    // const zoom = canvasFb.getZoom();\r\n\r\n    // // http://fabricjs.com/fabric-intro-part-5#pan_zoom\r\n    // let vpt = canvasFb.viewportTransform;\r\n\r\n    // if (vpt[4] >= 0) {\r\n    //   vpt[4] = 0;\r\n    // }\r\n    // else if (vpt[4] < canvasFb.getWidth() - this.currSize.width * zoom) {\r\n    //   vpt[4] = canvasFb.getWidth() - this.currSize.width * zoom;\r\n    // }\r\n\r\n    // if (vpt[5] >= 0) {\r\n    //   vpt[5] = 0;\r\n    // }\r\n    // else if (vpt[5] < canvasFb.getHeight() - this.currSize.height * zoom) {\r\n    //   vpt[5] = canvasFb.getHeight() - this.currSize.height * zoom;\r\n    // }\r\n\r\n    // if (zoom < 1) {\r\n    //   vpt[4] = (this.currSize.width - this.currSize.width * zoom) / 2;\r\n    //   vpt[5] = (this.currSize.height - this.currSize.height * zoom) / 2;\r\n    // }\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * @param {number} zoom\r\n   * @param {Object} opt\r\n   */\r\n  setCanvasZoom = (zoom: number, opt: any) => {\r\n    let canvas = this.canvasFb;\r\n\r\n    if (zoom > 20) zoom = 20;\r\n    if (zoom < 0.01) zoom = 0.01;\r\n\r\n    /** @type {fabric.Point} */\r\n    const evt: MouseEvent = opt.e;\r\n    const pt = new fabric.Point(evt.offsetX, evt.offsetY);\r\n    if (opt) canvas.zoomToPoint(pt, zoom);\r\n    else canvas.setZoom(zoom);\r\n\r\n\r\n    opt.e.preventDefault();\r\n    opt.e.stopPropagation();\r\n\r\n    this.scrollBoundaryCheck();\r\n\r\n    // event 전달\r\n    this.reportCanvasChanged();\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * @param {{x:number, y:number, f?:number}} ncodeXY\r\n   */\r\n  protected getCanvasXY = (ncodeXY: { x: number, y: number, f?: number }) => {\r\n    const { x, y, f } = ncodeXY;\r\n    const { Xmin, Ymin } = this.surfaceInfo;\r\n\r\n    let scale = this.base_scale;\r\n\r\n    let cx = (x - Xmin) * scale + this.offset.x;\r\n    let cy = (y - Ymin) * scale + this.offset.y;\r\n\r\n    return { x: cx, y: cy, f };\r\n  }\r\n\r\n\r\n  /**\r\n   * @protected\r\n   * @param {{x:number, y:number, f?:number}} ncodeXY\r\n   */\r\n  protected getCanvasXY_scaled = (ncodeXY: { x: number, y: number, f?: number }) => {\r\n    const { x, y, f } = ncodeXY;\r\n    const { Xmin, Ymin } = this.surfaceInfo;\r\n\r\n    let scale = this.base_scale;\r\n\r\n    let cx = (x - Xmin) * scale + this.offset.x;\r\n    let cy = (y - Ymin) * scale + this.offset.y;\r\n\r\n    cx *= PATH_THICKNESS_SCALE;\r\n    cy *= PATH_THICKNESS_SCALE;\r\n\r\n    return { x: cx, y: cy, f };\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * @param {{x:number, y:number}} canvasXY\r\n   */\r\n  protected getScreenXY = (canvasXY: { x: number, y: number }) => {\r\n    const { x, y } = canvasXY;\r\n\r\n    let canvasFb = this.canvasFb;\r\n    let vpt = canvasFb.viewportTransform;\r\n\r\n    let zoom = this.canvasFb.getZoom();\r\n    let offset_x = vpt[4];\r\n    let offset_y = vpt[5];\r\n\r\n\r\n    let sx = x * zoom + offset_x;\r\n    let sy = y * zoom + offset_y;\r\n\r\n    return { x: sx, y: sy };\r\n  }\r\n\r\n\r\n  /**\r\n   * @protected\r\n   * @param {{x:number, y:number}} screenXY\r\n   */\r\n  protected getNcodeXY = (screenXY: { x: number, y: number }) => {\r\n    const { x, y } = screenXY;\r\n\r\n    let scale_det = 1 / this.base_scale;\r\n\r\n    let nx = (x - this.offset.x) * scale_det;\r\n    let ny = (y - this.offset.y) * scale_det;\r\n\r\n    return { x: nx, y: ny };\r\n  }\r\n\r\n\r\n  /**\r\n   * \r\n   * @param mode \r\n   * @param szPaper \r\n   * @param currScale \r\n   */\r\n  protected calcScaleFactor(mode: ZoomFitEnum, szPaper: { width: number, height: number }, currScale: number): number {\r\n\r\n    const actual_width = szPaper.width * this.base_scale;\r\n    const actual_height = szPaper.height * this.base_scale;\r\n\r\n    const szCanvas = this.currSize;\r\n    let scale = 1;\r\n    switch (mode) {\r\n      case ZoomFitEnum.WIDTH:\r\n        scale = szCanvas.width / actual_width;\r\n\r\n        break;\r\n\r\n      case ZoomFitEnum.HEIGHT:\r\n        scale = szCanvas.height / actual_height;\r\n        break;\r\n\r\n      case ZoomFitEnum.FULL:\r\n        scale = Math.min(szCanvas.width / actual_width, szCanvas.height / actual_height);\r\n        break;\r\n\r\n      case ZoomFitEnum.ACTUAL:\r\n        scale = 1;\r\n        break;\r\n\r\n      default:\r\n        scale = currScale;\r\n\r\n        break;\r\n\r\n    }\r\n    return scale;\r\n  }\r\n\r\n\r\n\r\n\r\n  /**\r\n   * @protected\r\n   * @param {{x:number, y:number}} dot\r\n   */\r\n  protected focusToDot = (dot: { x: number, y: number }) => {\r\n    if (!this.autoFocus) return;\r\n    const margin_to_go_ratio = 0.25;\r\n    const canvas_xy = this.getCanvasXY(dot);\r\n    const screen_xy = this.getScreenXY(canvas_xy);\r\n\r\n    let dx = 0, dy = 0;\r\n    let shouldScroll = false;\r\n\r\n    let canvasFb = this.canvasFb;\r\n    let vpt = canvasFb.viewportTransform;\r\n    let offset_x = vpt[4];\r\n    let offset_y = vpt[5];\r\n\r\n    if (screen_xy.x < 0) {\r\n      // scroll to left\r\n      let target = this.currSize.width * margin_to_go_ratio;\r\n      dx = target - screen_xy.x;\r\n      shouldScroll = true;\r\n    }\r\n\r\n    if (screen_xy.y < 0) {\r\n      // scroll to top\r\n      let target = this.currSize.height * margin_to_go_ratio;\r\n      dy = target - screen_xy.y;\r\n      shouldScroll = true;\r\n    }\r\n\r\n    if (screen_xy.x > this.currSize.width) {\r\n      // scroll to right\r\n      let target = this.currSize.width * (1 - margin_to_go_ratio);\r\n      dx = target - screen_xy.x;\r\n      shouldScroll = true;\r\n    }\r\n\r\n    if (screen_xy.y > this.currSize.height) {\r\n      // scroll to bottom\r\n      let target = this.currSize.height * (1 - margin_to_go_ratio);\r\n      dy = target - screen_xy.y;\r\n      shouldScroll = true;\r\n    }\r\n\r\n    if (shouldScroll) {\r\n\r\n      let new_offset_x = offset_x + dx;\r\n      let new_offset_y = offset_y + dy;\r\n\r\n      this.scrollCanvasToPoint({ x: new_offset_x, y: new_offset_y }, true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {{x:number, y:number}} point\r\n   * @param {boolean} animate\r\n   */\r\n  protected scrollCanvasToPoint = (point: { x: number, y: number }, animate: boolean) => {\r\n    let canvasFb = this.canvasFb;\r\n    let vpt = canvasFb.viewportTransform;\r\n\r\n    if (animate) {\r\n      if (this.scrollAnimateTimer) {\r\n        window.clearInterval(this.scrollAnimateTimer);\r\n        this.scrollAnimateTimer = null;\r\n      }\r\n      let x0 = vpt[4];\r\n      let y0 = vpt[5];\r\n      let x1 = point.x;\r\n      let y1 = point.y;\r\n\r\n      const div = 10;\r\n      let step_x = (x1 - x0) / div;\r\n      let step_y = (y1 - y0) / div;\r\n      let count = 0;\r\n\r\n      this.scrollAnimateTimer = window.setInterval(() => {\r\n        x0 += step_x;\r\n        y0 += step_y;\r\n        vpt[4] = x0;\r\n        vpt[5] = y0;\r\n        canvasFb.requestRenderAll();\r\n\r\n        count++;\r\n        if (count === div) {\r\n          window.clearInterval(this.scrollAnimateTimer);\r\n          this.scrollAnimateTimer = null;\r\n          canvasFb.setViewportTransform(canvasFb.viewportTransform);\r\n        }\r\n      }, 20);\r\n    }\r\n    else {\r\n      vpt[4] = point.x;\r\n      vpt[5] = point.y;\r\n      this.scrollBoundaryCheck();\r\n      canvasFb.requestRenderAll();\r\n      canvasFb.setViewportTransform(canvasFb.viewportTransform);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * @public\r\n   * @param {{width:number, height:number}} size\r\n   */\r\n  resize = (size: { width: number, height: number }) => {\r\n    console.log(`RenderWorkerBase: resized window ${size.width}, ${size.height}`);\r\n\r\n    let zoom = size.width / this.initialSize.width;\r\n    this.currSize = { ...size };\r\n\r\n    this.canvasFb.setHeight(size.height);\r\n    this.canvasFb.setWidth(size.width);\r\n\r\n    this.canvasFb.setZoom(zoom);\r\n  };\r\n}\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\PenBasedRenderer.tsx",["970","971","972","973","974","975","976","977","978","979","980","981","982","983","984","985","986","987","988","989","990","991","992","993","994","995","996","997","998","999","1000","1001","1002","1003","1004","1005","1006","1007","1008","1009"],"import React from \"react\";\r\n// import React, { Component } from 'react';\r\n// import PropTypes from \"prop-types\";\r\nimport { InkStorage, PenEventName } from \"../..\";\r\n\r\nimport { ZoomFitEnum, PLAYSTATE, IRenderWorkerOption } from \"./RenderWorkerBase\";\r\nimport PenBasedRenderWorker from \"./PenBasedRenderWorker\";\r\n// import { Paper } from \"@material-ui/core\";\r\nimport { NeoSmartpen, PenManager } from \"../../index\";\r\nimport * as UTIL from \"../../utils/UtilsFunc\";\r\n\r\n\r\nimport { IPageSOBP, ISize } from \"../../DataStructure/Structures\";\r\n// import { Util } from \"pdfjs-dist\";\r\n\r\nexport { PLAYSTATE };\r\n\r\n\r\n/**\r\n * Properties\r\n */\r\ntype IPenBasedRendererProps = {\r\n  pageInfo: IPageSOBP,\r\n  inkStorage?: InkStorage,\r\n  playState?: PLAYSTATE,\r\n  pens?: NeoSmartpen[],\r\n\r\n  scale?: number,\r\n  width?: number;\r\n  height?: number;\r\n\r\n  viewFit?: ZoomFitEnum;\r\n\r\n  onNcodePageChanged: Function;\r\n  onCanvasShapeChanged: Function;\r\n}\r\n\r\n\r\n/**\r\n * State\r\n */\r\ninterface IPenBasedRendererState {\r\n  renderer: PenBasedRenderWorker | null,\r\n\r\n  sizeUpdate: number,\r\n  penEventCount: number,\r\n  strokeCount: number,\r\n  liveDotCount: number,\r\n\r\n  pageInfo: {\r\n    section: number,\r\n    owner: number,\r\n    book: number,\r\n    page: number\r\n  },\r\n\r\n  viewFit: ZoomFitEnum,\r\n  pens: NeoSmartpen[],\r\n\r\n  scale: number,\r\n  playState: PLAYSTATE,\r\n\r\n  renderCount: number,\r\n\r\n}\r\n\r\n/**\r\n * TO DO: 2020/11/05\r\n *    1)  Pen에서 Event를 받아 실시간 rendering만 하는 component로 만들것\r\n *\r\n */\r\nexport default class PenBasedRenderer extends React.Component<IPenBasedRendererProps, IPenBasedRendererState> {\r\n  state: IPenBasedRendererState = {\r\n    renderer: null,\r\n    sizeUpdate: 0,\r\n    penEventCount: 0,\r\n    strokeCount: 0,\r\n    liveDotCount: 0,\r\n\r\n    pageInfo: {\r\n      section: -1,\r\n      owner: -1,\r\n      book: -1,\r\n      page: -1,\r\n    },\r\n\r\n    viewFit: ZoomFitEnum.ACTUAL,\r\n\r\n    /** @type {Array.<NeoSmartpen>} */\r\n    pens: [],\r\n    scale: 1,\r\n\r\n    playState: PLAYSTATE.live,\r\n\r\n    renderCount: 0,\r\n  };\r\n\r\n  propsSize: { scale: number, width: number, height: number } = { scale: 1, width: 0, height: 0 };\r\n  size: ISize = { width: 0, height: 0 };\r\n\r\n  canvasId: string = \"\";\r\n  canvasRef: React.RefObject<HTMLCanvasElement> = null;\r\n  myRef: React.RefObject<HTMLDivElement> = null;\r\n\r\n  inkStorage: InkStorage = null;\r\n  curr_pens: NeoSmartpen[] = new Array(0);\r\n\r\n  constructor(props: IPenBasedRendererProps) {\r\n    super(props);\r\n    // kitty\r\n    this.canvasRef = React.createRef();\r\n    this.myRef = React.createRef();\r\n\r\n    let { pageInfo, inkStorage, scale, playState, width, height, pens, viewFit } = props;\r\n    this.inkStorage = inkStorage ? inkStorage : InkStorage.getInstance();\r\n\r\n    this.state.pageInfo = pageInfo ? pageInfo : this.state.pageInfo;\r\n    this.state.scale = scale ? scale : this.state.scale;\r\n    this.state.playState = playState ? playState : this.state.playState;\r\n    this.state.viewFit = viewFit ? viewFit : this.state.viewFit;\r\n\r\n    this.canvasId = UTIL.uuidv4();\r\n\r\n    this.curr_pens = pens;\r\n    this.propsSize = { scale, width, height };\r\n  }\r\n\r\n\r\n  /**\r\n   * @private\r\n   * @param {NeoSmartpen} pen\r\n   */\r\n  private subscribePenEvent = (pen: NeoSmartpen) => {\r\n    pen.addEventListener(PenEventName.ON_PEN_DOWN, this.onLivePenDown);\r\n    pen.addEventListener(PenEventName.ON_PEN_PAGEINFO, this.onLivePenPageInfo);\r\n    pen.addEventListener(PenEventName.ON_PEN_MOVE, this.onLivePenMove);\r\n    pen.addEventListener(PenEventName.ON_PEN_UP, this.onLivePenUp);\r\n    pen.addEventListener(PenEventName.ON_HOVER_MOVE, this.onLiveHoverMove);\r\n    pen.addEventListener(PenEventName.ON_PEN_HOVER_PAGEINFO, this.onLiveHoverPageInfo);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {NeoSmartpen} pen\r\n   */\r\n  private unsubscribePenEvent = (pen: NeoSmartpen) => {\r\n    pen.removeEventListener(PenEventName.ON_PEN_DOWN, this.onLivePenDown);\r\n    pen.removeEventListener(PenEventName.ON_PEN_PAGEINFO, this.onLivePenPageInfo);\r\n    pen.removeEventListener(PenEventName.ON_PEN_MOVE, this.onLivePenMove);\r\n    pen.removeEventListener(PenEventName.ON_PEN_UP, this.onLivePenUp);\r\n    pen.removeEventListener(PenEventName.ON_HOVER_MOVE, this.onLiveHoverMove);\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * @override\r\n   * @public\r\n   */\r\n  componentDidMount() {\r\n    let { pens } = this.props;\r\n    let { width, height } = this.propsSize;\r\n\r\n    const node = this.myRef.current;\r\n    if (node) {\r\n      let parentHeight = node.offsetHeight;\r\n      let parentWidth = node.offsetWidth;\r\n\r\n      console.log(`Parent window (width, height) = (${parentWidth}, ${parentHeight})`);\r\n\r\n      if (!width || !height) {\r\n        width = parentWidth;\r\n        height = parentHeight;\r\n        this.propsSize = { width, height, scale: this.propsSize.scale };\r\n\r\n        const renderCount = this.state.renderCount;\r\n        this.setState({ renderCount: renderCount + 1 });\r\n      }\r\n    }\r\n\r\n    // let size = this.size;\r\n\r\n    /** @type {{pageId:number, width:number, height:number, pens:Array.<NeoSmartpen> }} */\r\n\r\n    // let rect = { x: 0, y: 0, width, height };\r\n\r\n    // const page = pages.filter((p) => p.pageNumber === pageId)[0];\r\n    // console.log(\"Draw Stroke size\", pageId, \"canvas size\", size, \"rect\", rect);\r\n\r\n    console.log(`PenBasedRenderer: size ${this.propsSize.width}, ${this.propsSize.height}`);\r\n\r\n    console.log(\"Renderer Inited\");\r\n    this.initRenderer(this.propsSize);\r\n    window.addEventListener(\"resize\", this.resizeListener);\r\n\r\n    // subscribe all event from pen\r\n    pens.forEach(pen => {\r\n      console.log(`PenBasedRenderer: componentDidMount, EventSubscribing`);\r\n      this.subscribePenEvent(pen)\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * @override\r\n   * @public\r\n   */\r\n  shouldComponentUpdate(nextProps: IPenBasedRendererProps, nextState: IPenBasedRendererState) {\r\n    let ret_val = true;\r\n\r\n    if (nextProps.pens !== this.curr_pens) {\r\n      /** @type {Array<NeoSmartpen>} */\r\n      const new_pens = nextProps.pens;\r\n\r\n      /** @type {Array<NeoSmartpen>} */\r\n      const curr_pens = this.curr_pens;\r\n\r\n      // subscribe all event from pen\r\n      new_pens.forEach(pen => {\r\n        console.log(`PenBasedRenderer: shouldComponentUpdate, EventSubscribing`);\r\n        const index = curr_pens.indexOf(pen);\r\n        if (index < 0) {\r\n          this.subscribePenEvent(pen)\r\n        }\r\n      });\r\n\r\n      this.curr_pens = nextProps.pens;\r\n\r\n      ret_val = true;\r\n    }\r\n\r\n    return ret_val;\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   * @public\r\n   */\r\n  componentWillUnmount() {\r\n    /** @type {Array.<NeoSmartpen>} */\r\n    const pens = this.props.pens;\r\n    pens.forEach(pen => this.unsubscribePenEvent(pen));\r\n\r\n    // this.state.renderer.stopInterval();\r\n    window.removeEventListener(\"resize\", this.resizeListener);\r\n\r\n    // penManager에 연결 해제\r\n    let penManager = PenManager.getInstance();\r\n    penManager.unregisterRenderContainer(this);\r\n  }\r\n\r\n\r\n  resizeListener = () => {\r\n    this.setState({ sizeUpdate: this.state.sizeUpdate + 1 });\r\n\r\n    // const { classes, scaleType, scale } = this.props;\r\n\r\n    const { scale, width, height } = this.propsSize;\r\n\r\n\r\n    const rect = { x: 0, y: 0, width, height };\r\n    // const { rect } = this.state;\r\n    // const { penEventCount } = this.state;\r\n    this.size = this.getSize(scale, rect);\r\n\r\n    if (this.state.renderer) {\r\n      // console.log(\"render resize\", this.size)\r\n      this.state.renderer.resize(this.size);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  initRenderer(size: { width: number, height: number }) {\r\n    /** @type {{width:number, height:number}} */\r\n    const { width, height } = size;\r\n\r\n    // const rect = { x: 0, y: 0, width, height };\r\n    // const { rect } = this.state;\r\n    // const page = pages.filter((p) => p.pageNumber === pageId)[0];\r\n\r\n    // const inkStorage = this.inkStorage;\r\n    const options: IRenderWorkerOption = {\r\n      canvasId: this.canvasId,\r\n      canvasRef: this.canvasRef,\r\n      width,\r\n      height,\r\n      viewFit: this.state.viewFit,\r\n      onCanvasShapeChanged: this.props.onCanvasShapeChanged,\r\n    };\r\n\r\n    let renderer = new PenBasedRenderWorker(options);\r\n    this.setState({ renderer: renderer });\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   *\r\n   * @param {{strokeKey:string, mac:string, time:number, stroke:NeoStroke}} event\r\n   */\r\n  onLivePenDown = (event) => {\r\n    // console.log(event);\r\n    if (this.state.renderer) {\r\n      this.state.renderer.createLiveStroke(event);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param {{strokeKey:string, mac:string, stroke:NeoStroke, section:number, owner:number, book:number, page:number}} event\r\n   */\r\n  onLivePenPageInfo = (event) => {\r\n    const { penEventCount } = this.state;\r\n    const { section, owner, book, page } = event;\r\n\r\n    const prevPageInfo = this.state.pageInfo;\r\n    if (UTIL.isSamePage(prevPageInfo, event)) {\r\n      return;\r\n    }\r\n\r\n    /** 내부 상태를 바꾼다. */\r\n    this.setState({\r\n      penEventCount: penEventCount + 1,\r\n      pageInfo: { section, owner, book, page }\r\n    });\r\n\r\n    /** 테스트용 */\r\n    const inkStorage = this.inkStorage;\r\n    if (inkStorage) {\r\n      let pageStrokesCount = inkStorage.getPageStrokes(event).length;\r\n      this.setState({ strokeCount: pageStrokesCount });\r\n    }\r\n\r\n    /** 잉크 렌더러의 페이지를 바꾼다 */\r\n    if (this.state.renderer) {\r\n      this.state.renderer.changePage(section, owner, book, page, false);\r\n    }\r\n\r\n    /** pdf pageNo를 바꿀 수 있게, container에게 전달한다. */\r\n    this.props.onNcodePageChanged({ section, owner, book, page });\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param {{strokeKey:string, mac:string, stroke:NeoStroke, dot:NeoDot}} event\r\n   */\r\n\r\n  onLivePenMove = (event) => {\r\n    if (this.state.renderer) {\r\n      this.state.renderer.pushLiveDot(event);\r\n    }\r\n    // const { liveDotCount } = this.state;\r\n\r\n    // this.setState({ liveDotCount: liveDotCount + 1 });\r\n    // console.log(event);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {{strokeKey:string, mac:string, stroke, section:number, owner:number, book:number, page:number}} event\r\n   */\r\n  onLivePenUp = (event) => {\r\n    console.log(\"Pen Up\");\r\n    if (this.state.renderer) {\r\n      this.state.renderer.closeLiveStroke(event);\r\n    }\r\n\r\n    // const { penEventCount, inkStorage } = this.state;\r\n    // this.setState({ penEventCount: penEventCount + 1 });\r\n    // if (inkStorage) {\r\n    //   let pageStrokesCount = inkStorage.getPageStrokes(event).length;\r\n    //   this.setState({ strokeCount: pageStrokesCount });\r\n    // }\r\n    // console.log(event);\r\n  }\r\n\r\n  onLiveHoverPageInfo = (event) => {\r\n    if (this.state.renderer) {\r\n      this.state.renderer.addHoverPoints(event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {{strokeKey:string, mac:string, stroke:NeoStroke, dot:NeoDot}} event\r\n   */\r\n\r\n  onLiveHoverMove = (event) => {\r\n    if (this.state.renderer) {\r\n      this.state.renderer.moveHoverPoint(event);\r\n    }\r\n    // const { liveDotCount } = this.state;\r\n\r\n    // this.setState({ liveDotCount: liveDotCount + 1 });\r\n    // console.log(event);\r\n  }\r\n\r\n  getSize = (scale, rect) => {\r\n    let size = {\r\n      width: rect.width,\r\n      height: rect.height,\r\n    };\r\n\r\n    return size;\r\n  };\r\n\r\n  render() {\r\n    // const { classes, scaleType, scale } = this.props;\r\n    const { pens } = this.props;\r\n    const { scale, width, height } = this.propsSize;\r\n    const { section, owner, book, page } = this.state.pageInfo;\r\n\r\n    const rect = { x: 0, y: 0, width, height };\r\n    // const { rect } = this.state;\r\n    const { penEventCount } = this.state;\r\n    this.size = this.getSize(scale, rect);\r\n\r\n    // const manager = PenManager.getInstance();\r\n    // let connected_pens = manager.getConnectedPens();\r\n\r\n    const dpr = UTIL.getDisplayRatio();\r\n    // const windowWidth = window.innerWidth / dpr;\r\n    const windowHeight = window.innerHeight / dpr;\r\n    const aWidth = document.body.clientWidth;\r\n    // const aWidth2 = document.body.scrollWidth;\r\n    const aHeight = windowHeight;\r\n\r\n    const statusBarHeight = 400;\r\n\r\n    return (\r\n      <div id=\"replayContainer\" ref={this.myRef} style={{ position: \"relative\" }}>\r\n        <div style={{\r\n          zIndex: 99,\r\n          display: \"flex\", flexDirection: \"column\",\r\n        }}>\r\n\r\n          <div style={{\r\n            height: statusBarHeight + \"px\",\r\n            display: \"flex\", flexDirection: \"column\",\r\n            justifyContent: \"flex-start\",\r\n            alignItems: \"flex-start\",\r\n          }}>\r\n            <div>\r\n              <ul>\r\n                {pens.map((pen, i) => (\r\n                  <li key={i}>{pen.mac}</li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n            <div style={{ fontSize: \"20px\", fontWeight: \"bold\", color: \"rgba(255,0,0,255)\" }}>\r\n              PenBasedRenderer{section}.{owner}.{book}.{page}:{penEventCount}\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n\r\n        <div style={{\r\n          zIndex: 5,\r\n          position: \"relative\",\r\n          left: \"0px\",\r\n          top: -statusBarHeight + \"px\",\r\n        }}>\r\n          {/* <Paper style={{ height: this.size.height, width: this.size.width }}> */}\r\n          <canvas id={this.canvasId} ref={this.canvasRef}\r\n            style={{\r\n              width: width ? width : aWidth,\r\n              height: height ? height : aHeight\r\n            }} />\r\n          {/* </Paper> */}\r\n        </div>\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PrintDataTypes.ts",["1010"],"/// <reference types=\"pdfjs-dist\"/>\r\n/// <reference types=\"@types/pdfjs-dist\" />\r\n\r\nimport { IPageSOBP } from \"../DataStructure/Structures\";\r\nimport { IPaperSize } from \"../NcodeSurface/SurfaceDataTypes\";\r\nimport { ColorConvertMethod } from \"../NcodeSurface/CanvasColorConverter\";\r\n\r\n\r\n\r\n\r\nexport interface  IFileBrowserReturn {\r\n  result: \"success\" | \"canceled\" | \"failed\",\r\n  url: string,\r\n  file: any,\r\n}\r\n\r\n\r\nexport interface IPrintOption {\r\n  codeDensity: number;      // 1 dot, 2dots, 3dots\r\n  printDpi: number;         // 600 DPI, 300 DPI\r\n  pdfRenderingDpi: number,    // 200DPI 또는 300DPI가 적당\r\n  putCalibrationMark: boolean;\r\n  printNcode: boolean;\r\n\r\n  dotsInACell: number;   // 7, 바꾸지 말것!\r\n  mediaSize: IPaperSize;\r\n\r\n  /** 문서 전체의 방향, 실제 출력되는 방향은 pages per sheet에 의해 달라짐 (2, 8, 18, 32 등) */\r\n  direction?: \"auto\" | \"portrait\" | \"landscape\";\r\n\r\n  colorMode: ColorConvertMethod;\r\n\r\n  /** 출력할 종이보다 작은 경우에는 확대할 것 */\r\n  scaleUpToMedia: boolean,\r\n\r\n  /* 출력할 종이보다 큰 경우에는 축소할 것 */\r\n  scaleDownToMedia: boolean,\r\n\r\n  targetPages: number[],\r\n  pagesPerSheet: 1 | 2 | 4 | 8 | 9 | 16 | 18 | 25 | 32,\r\n\r\n  /** 첫 페이지에 발행된 ncode, Ncode는 pageInfo ~ pageInfo.page + (numPages-1) */\r\n  pageInfo: IPageSOBP;\r\n  assignNewCode: boolean;\r\n\r\n  /** 그리다보드와의 호환성을 위해 */\r\n  magnification: number,\r\n  marginLeft_nu: number,\r\n  marginTop_nu: number,\r\n\r\n\r\n  /** 0: no debug mode, 1: draw lines, 2: draw Ncode debugging info, 3: canvas 색상 값 점검 */\r\n  debugMode: 0 | 1 | 2 | 3,\r\n\r\n  hasToPutNcode: boolean,\r\n\r\n}\r\n\r\n/**\r\n * Page.js\r\n * Component rendering page of PDF\r\n **/\r\nexport const CSS_DPI = 96.0;\r\n\r\n/**\r\n * width: mm unit\r\n *\r\n * height: mm unit\r\n */\r\nexport const MediaSize: { [key: string]: IPaperSize } = {\r\n  A4: { unit: \"mm\", width: 210, height: 297 },\r\n  A3: { unit: \"mm\", width: 297, height: 420 },\r\n  B4: { unit: \"mm\", width: 250, height: 353 },\r\n  B5: { unit: \"mm\", width: 176, height: 250 },\r\n  Letter: { unit: \"mm\", width: 216, height: 280 },\r\n};\r\n\r\n\r\n\r\nexport interface IPrintingProgress {\r\n  preparedPages: number[],\r\n  numSheetsPrepared: number,\r\n  completion: number,   // 100 = 100%\r\n}\r\n\r\nexport const PageInfo: { [key: string]: IPageSOBP } = {\r\n  first_page: { section: 3, owner: 27, book: 1068, page: 1 },\r\n  second_page: { section: 3, owner: 27, book: 1069, page: 1 },\r\n  third_page: { section: 3, owner: 27, book: 1070, page: 1 }\r\n}","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\DefaultOption.ts",[],"C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\Locales\\i18n.ts",["1011"],"// import i18n from 'i18next';\r\n// import { initReactI18next } from 'react-i18next';\r\n\r\nimport tranEn from './Files/en.json';\r\nimport tranKo from './Files/ko.json';\r\nimport tranJa from './Files/ja.json';\r\n\r\nconst resources = {\r\n  en: { translation: tranEn },\r\n  ja: { translation: tranJa },\r\n  ko: { translation: tranKo },\r\n}\r\n\r\n// // const userLanguage = window.navigator.language || window.navigator.userLanguage;\r\nconst userLanguage = window.navigator.language;\r\n\r\n// i18n.use(initReactI18next).init({\r\n//   resources,\r\n//   lng: localStorage.getItem('language') || userLanguage || 'en',\r\n//   fallbackLng: 'en',\r\n//   keySeparator: false,\r\n//   interpolation: {\r\n//     escapeValue: false\r\n//   }\r\n// })\r\n\r\n// export default i18n;\r\n// export const languages = ['en', 'ko', 'ja'] as const;\r\n// export type Languages = typeof languages[number]; // 'en' | 'ko' | 'ja'\r\n\r\n\r\nconsole.log(`[i18n] LANG=${userLanguage}`);\r\n\r\nexport function t(msgId: string) {\r\n  const langId = userLanguage.substring(0, 2);\r\n  const resource = resources[langId];\r\n\r\n  if (!resource) return msgId;\r\n  const translation = resource.translation;\r\n  const msg = translation[msgId];\r\n  if (!msg) return msgId;\r\n  return msg;\r\n}","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\CanvasColorConverter.ts",[],"C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\DataStructure\\index.ts",[],"C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PdfPrintButton.tsx",["1012","1013","1014","1015","1016","1017","1018","1019","1020","1021","1022","1023","1024","1025"],"import React from \"react\";\r\nimport { Button, } from \"@material-ui/core\";\r\n\r\nimport { PrintPdfMain } from \"./PrintPdfMain\";\r\nimport { IPrintingProgress, IPrintOption, } from \"./PrintDataTypes\";\r\n\r\nimport NeoPdfDocument from \"../NeoPdf/NeoPdfDocument\";\r\nimport NeoPdfManager from \"../NeoPdf/NeoPdfManager\";\r\nimport { PDF_VIEWPORT_DESC } from \"../NeoPdf/NeoPdfPage\";\r\nimport { IPageOverview } from \"./PagesForPrint\";\r\n\r\n// PdfJs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${PdfJs.version}/pdf.worker.js`;\r\n// var CMAP_URL = \"./cmaps/\";\r\n// var CMAP_PACKED = true;\r\n\r\ntype Props = {\r\n  url: string,\r\n  reportProgress: Function,\r\n  printOption: IPrintOption,\r\n\r\n  children?: React.ReactNode;\r\n  color?: any;\r\n  disabled?: boolean;\r\n  disableElevation?: boolean;\r\n  disableFocusRipple?: boolean;\r\n  endIcon?: React.ReactNode;\r\n  fullWidth?: boolean;\r\n  href?: string;\r\n  size?: 'small' | 'medium' | 'large';\r\n  startIcon?: React.ReactNode;\r\n  variant?: 'text' | 'outlined' | 'contained';\r\n}\r\n\r\ninterface State {\r\n\r\n  /** PDF를 인쇄하기 위해 필요한 것 */\r\n  pdf: NeoPdfDocument,\r\n  printTrigger: number,\r\n  /** 여기까지 */\r\n\r\n  /** Sample 코드를 위한 것 */\r\n  numTotalPages: number,\r\n  /**\r\n   * printingStatus\r\n   */\r\n  /** 인쇄 준비된 페이지 수 */\r\n  numPagesPrepared: number,\r\n  /** 인쇄 준비된 종이 장 수 */\r\n  numSheetsPrepared: number,\r\n\r\n  /** 세부 단계 */\r\n  completion: number,\r\n\r\n  /** 인쇄되는 종이 장 수 */\r\n  numSheets: number,\r\n  /** 인쇄 대상 페이지 수 */\r\n  numPages: number,\r\n\r\n  status: string,\r\n}\r\n\r\n/**\r\n * Class\r\n */\r\nexport default class PdfPrintButton extends React.Component<Props, State> {\r\n  // static displayName = \"WholePageViewer\";\r\n\r\n  // static defaultProps = {\r\n  //   initialScrollOffset: 0\r\n  // };\r\n\r\n  state: State = {\r\n    /** PDF를 인쇄하기 위해 필요한 것 */\r\n    pdf: null,\r\n    // scale: 1.0,\r\n    printTrigger: 0,\r\n\r\n    /** Sample 코드를 위한 것 */\r\n    numTotalPages: 0,\r\n\r\n    numPagesPrepared: 0,\r\n    numSheetsPrepared: 0,\r\n    completion: 0,\r\n    numSheets: 0,\r\n    numPages: 0,\r\n\r\n    status: \"ready\",\r\n  };\r\n\r\n  // numPages: number = 0;\r\n\r\n  printOption: IPrintOption = null;\r\n\r\n\r\n  pagesOverview: IPageOverview[];\r\n\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    const { printOption } = props;\r\n    if (printOption) this.printOption = { ...printOption };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadPdf(this.props.url);\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps: Props) {\r\n    if (this.props.url !== nextProps.url) {\r\n      this.loadPdf(nextProps.url);\r\n      return true;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n\r\n  /**\r\n   * NeoPdfDocument에 있는 setPageOverview의 결과를 쓰도록 하자\r\n   * 2020/12/06\r\n   */\r\n  setPageOverview = async (pdf) => {\r\n    // const pdf = this.props.pdf;\r\n    this.pagesOverview = new Array(pdf.numPages + 1);\r\n    // const { pagesPerSheet } = this.printOption;\r\n\r\n    let numPortraitPages = 0;\r\n    let numLandscapePages = 0;\r\n\r\n    for (let i = 0; i < pdf.numPages; i++) {\r\n      const page = await pdf.getPageAsync(i + 1);\r\n      const vpt: PDF_VIEWPORT_DESC = page.getViewport({ scale: 1, rotation: 0 });\r\n      const { width, height } = vpt;\r\n\r\n      const landscape = width > height;\r\n      landscape ? numLandscapePages++ : numPortraitPages++;\r\n\r\n      const pageOverview = {\r\n        rotation: vpt.rotation,\r\n        landscape,\r\n        sizePu: { width, height },\r\n      }\r\n      this.pagesOverview[i] = pageOverview;\r\n    }\r\n\r\n    const printOption = this.printOption;\r\n\r\n    if (numPortraitPages >= numLandscapePages) {\r\n      printOption.direction = \"portrait\";\r\n    } else {\r\n      printOption.direction = \"landscape\";\r\n    }\r\n\r\n    console.log(`[yyy] setPageOverview - ${printOption.direction}`);\r\n  }\r\n\r\n  loadPdf = (url) => {\r\n\r\n    let loadingPromise = NeoPdfManager.getDocument({ url });\r\n    // console.log(`[yyy] `);\r\n    // console.log(`[yyy] LOAIND: ${url}`);\r\n    loadingPromise.then(\r\n      async (pdf) => {\r\n        // console.log(`[yyy] setPageOverview called`);\r\n\r\n        await this.setPageOverview(pdf);\r\n\r\n        // 디버깅용 화면 디스플레이를 위해\r\n        const numTotalPages = pdf.numPages;\r\n        console.log(`[NumPage] PDF page: ${url} - ${numTotalPages}`)\r\n        this.printOption.targetPages = Array.from({ length: numTotalPages }, (_, i) => i + 1);\r\n        // 여기까지\r\n\r\n        this.setState({ pdf, numTotalPages });\r\n      });\r\n\r\n  }\r\n\r\n  /**\r\n   * 이 함수를 dialog로 수정함으로써 프린터 옵션을 바꿀 수 있다.\r\n   */\r\n  setPrintOption = (pdf: NeoPdfDocument) => {\r\n    const numPages = pdf.numPages;\r\n\r\n    // kitty, 2020/11/24\r\n    if (this.props.url === \"./Portrait, 초등학교 4학년 4P.pdf\") {\r\n      /** 그리다 보드와 맞추기 위한 것, for 초등학교 4학년 4P.pdf */\r\n      this.printOption.magnification = 0.9158249158249159;\r\n      this.printOption.marginLeft_nu = 1.3;\r\n      this.printOption.marginTop_nu = -0.5;\r\n    }\r\n\r\n    // 모든 페이지를 인쇄\r\n    this.printOption.targetPages = Array.from({ length: numPages }, (_, i) => i + 1);\r\n\r\n    // 1,2 페이지만 인쇄\r\n    // this.printOption.targetPages = Array.from({ length: 2 }, (_, i) => i + 1);\r\n\r\n    this.printOption.debugMode = 0;\r\n  }\r\n\r\n  startPrint = () => {\r\n    if (!this.state.pdf) return;\r\n    if (this.state.status === \"printing\") return;\r\n\r\n    /** PrintPdfMain의 printTrigger를 +1 해 주면, 인쇄가 시작된다.*/\r\n    const { printTrigger } = this.state;\r\n\r\n    this.setPrintOption(this.state.pdf);\r\n    const { targetPages, pagesPerSheet } = this.printOption;\r\n\r\n    const numSheets = Math.ceil(targetPages.length / pagesPerSheet);\r\n    const numPages = targetPages.length;\r\n\r\n    this.setState({\r\n      printTrigger: printTrigger + 1,\r\n\r\n      numPagesPrepared: 0,\r\n      numSheetsPrepared: 0,\r\n      completion: 0,\r\n      numSheets,\r\n      numPages,\r\n      status: \"printing\",\r\n    });\r\n  }\r\n\r\n  updatePrintProgress = (event: IPrintingProgress) => {\r\n    const { preparedPages, numSheetsPrepared, completion } = event;\r\n    const numPagesPrepared = preparedPages.length;\r\n\r\n    this.setState({\r\n      numPagesPrepared,\r\n      numSheetsPrepared,\r\n      completion,\r\n    });\r\n\r\n    if (this.props.reportProgress) {\r\n      this.props.reportProgress({\r\n        status: \"progress\",\r\n        numPagesPrepared,\r\n        numSheetsPrepared,\r\n        completion,\r\n      })\r\n    }\r\n  }\r\n\r\n  onAfterPrint = () => {\r\n    console.log(\"END OF PRINT\");\r\n\r\n    this.setState({\r\n      status: \"completed\",\r\n    });\r\n\r\n    if (this.props.reportProgress) {\r\n      this.props.reportProgress({\r\n        status: \"completed\",\r\n        completion: 100,\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const { pdf, printTrigger } = this.state;\r\n    const printOption = this.printOption;\r\n\r\n    // const { numPagesPrepared, numSheetsPrepared, completion, numSheets, numPages } = this.state;\r\n\r\n    // // let msg = `sheets(${numSheetsPrepared}:${completion}% / ${numSheets}), pages(${numPagesPrepared}:${completion}% / ${numPages})`;\r\n    // // if (status === \"printing\") {\r\n    // //   msg = \"Printing... \" + msg;\r\n    // // }\r\n    // // else if (status === \"completed\") {\r\n    // //   msg = \"Print completed... \" + msg;\r\n    // // }\r\n\r\n    return (\r\n      <div className=\"pdf-context\">\r\n        <Button {...this.props} onClick={this.startPrint}>\r\n          {this.props.children}\r\n        </Button>\r\n\r\n        { pdf ?\r\n          <PrintPdfMain\r\n            pdf={pdf}\r\n            pagesOverview={this.pagesOverview}\r\n            printTrigger={printTrigger}\r\n            printOption={printOption}\r\n            onAfterPrint={this.onAfterPrint}\r\n            updatePrintProgress={this.updatePrintProgress} />\r\n          : \"\"}\r\n        <hr />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\Modal\\PrintOptionDialog.tsx",["1026","1027","1028","1029","1030","1031","1032"],"import React, {useState} from \"react\";\r\n// import { Container, Modal, Row, Col, Button } from \"react-bootstrap\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { Button, Box, Input } from \"@material-ui/core\";\r\n\r\nimport { IPrintingProgress, IPrintOption, MediaSize, PageInfo } from '../PrintDataTypes';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport $ from 'jquery';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: 'auto',\r\n    width: 'fit-content',\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    minWidth: 120,\r\n  },\r\n  formControlLabel: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\nexport default function PrintOptionDialog () {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [IPrintOption, setIPrintOption] = useState({\r\n    codeDensity: 2,\r\n    printDpi: 600,\r\n    pdfRenderingDpi: 300,\r\n    putCalibrationMark: true,\r\n    printNcode: true,\r\n    dotsInACell: 7,\r\n    mediaSize: MediaSize.A4,\r\n    direction: \"auto\",\r\n    colorMode: 1,\r\n    scaleUpToMedia: true,\r\n    scaleDownToMedia: true,\r\n    targetPages: \"\",\r\n    pagesPerSheet: 1,\r\n    pageInfo: PageInfo.first_page,\r\n    debugMode: 0,\r\n    hasToPutNcode: true\r\n  })\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleClose = (e) => {\r\n    setIPrintOption({\r\n      ...IPrintOption,\r\n      codeDensity: 2,\r\n      printDpi: 600,\r\n      pdfRenderingDpi: 300,\r\n      putCalibrationMark: true,\r\n      printNcode: true,\r\n      dotsInACell: 7,\r\n      mediaSize: MediaSize.A4,\r\n      direction: \"auto\",\r\n      colorMode: 1,\r\n      scaleUpToMedia: true,\r\n      scaleDownToMedia: true,\r\n      targetPages: \"\",\r\n      pagesPerSheet: 1,\r\n      pageInfo: PageInfo.first_page,\r\n      debugMode: 0,\r\n      hasToPutNcode: true\r\n    })\r\n    setOpen(false);\r\n  }\r\n\r\n  const handleSave = (e) => {\r\n    //저장 로직 추가\r\n    setIPrintOption({\r\n      ...IPrintOption,\r\n      targetPages : $('#targetPages').val(),\r\n      [e.target.name] : e.target.value\r\n    });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setIPrintOption({\r\n      ...IPrintOption,\r\n      [e.target.name] : e.target.value\r\n    });\r\n\r\n    console.log(e.target.value);\r\n    // console.log(MediaSize);\r\n    // console.log(MediaSize.A4);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        <Box fontSize={16} fontWeight=\"fontWeightBold\" >\r\n          인쇄 옵션 설정\r\n        </Box>\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">인쇄 설정</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Dialog의 Body\r\n          </DialogContentText>\r\n\r\n          {/* 코드의 농도 Dialog */}\r\n          <form className={classes.form} noValidate>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"codeDensity\">코드 농도</InputLabel>\r\n              <Select\r\n                autoFocus\r\n                value={IPrintOption.codeDensity}\r\n                onChange={onChange}\r\n                inputProps={{\r\n                  name: 'codeDensity',\r\n                  id: 'codeDensity',\r\n                }}\r\n              >\r\n                <MenuItem value=\"1\">연하게</MenuItem>\r\n                <MenuItem value=\"2\">보통</MenuItem>\r\n                <MenuItem value=\"3\">진하게</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </form>\r\n\r\n          {/* 인쇄의 품질 Dialog */}\r\n          <form className={classes.form} noValidate style={{float:\"left\"}}>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel htmlFor=\"printDpi\">인쇄 품질</InputLabel>\r\n                <Select\r\n                  value={IPrintOption.printDpi}\r\n                  onChange={onChange}\r\n                  inputProps={{\r\n                    name: 'printDpi',\r\n                    id: 'printDpi',\r\n                  }}\r\n                >\r\n                  <MenuItem value=\"600\">품질 우선</MenuItem>\r\n                  <MenuItem value=\"300\">보통 품질</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n          </form>\r\n\r\n          {/* PDF의 Rendering DPI Dialog */}\r\n          <form className={classes.form} noValidate>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"pdfRenderingDpi\">PDFRendering</InputLabel>\r\n              <Select\r\n                value={IPrintOption.pdfRenderingDpi}\r\n                onChange={onChange}\r\n                inputProps={{\r\n                  name: 'pdfRenderingDpi',\r\n                  id: 'pdfRenderingDpi'\r\n                }}\r\n              >\r\n                <MenuItem value=\"150\">150DPI</MenuItem>\r\n                <MenuItem value=\"200\">200DPI</MenuItem>\r\n                <MenuItem value=\"300\">300DPI</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </form>\r\n\r\n          {/* Calibration 유무 체크 Dialog */}\r\n          <form className={classes.form} noValidate style={{clear:\"both\", float:\"left\"}}>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"putCalibrationMark\">CalibrationMark</InputLabel>\r\n              <Select\r\n                value={IPrintOption.putCalibrationMark}\r\n                onChange={onChange}\r\n                inputProps={{\r\n                  name: 'putCalibrationMark',\r\n                  if: 'putCalibrationMark',\r\n                }}\r\n              >\r\n                <MenuItem value=\"true\">true</MenuItem>\r\n                <MenuItem value=\"false\">false</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </form>\r\n\r\n          {/* Print시 Ncode 유무 Dialog */}\r\n          <form className={classes.form} noValidate>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"printNcode\">PrintNcode</InputLabel>\r\n              <Select\r\n                value={IPrintOption.printNcode}\r\n                onChange={onChange}\r\n                inputProps={{\r\n                  name: 'printNcode',\r\n                  id: 'printNcode'\r\n                }}\r\n              >\r\n                <MenuItem value=\"true\">true</MenuItem>\r\n                <MenuItem value=\"false\">false</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </form>\r\n\r\n          {/* DotsInACell의 Dialog - 보이지는 않는다 */}\r\n          <form className={classes.form} noValidate style={{display:\"none\"}}>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"dotsInACell\" disabled>DotsInACell</InputLabel>\r\n                <Input value=\"7\" id=\"dotsInACell\" name=\"dotsInACell\" />\r\n            </FormControl>\r\n          </form>\r\n\r\n          {/* MediaSize의 Dialog */}\r\n          <form className={classes.form} noValidate>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"mediaSize\">MediaSize</InputLabel>\r\n              <Select\r\n                value={IPrintOption.mediaSize}\r\n                onChange={onChange}\r\n                inputProps={{\r\n                  name: 'mediaSize',\r\n                  id: 'mediaSize'\r\n                }}\r\n              >\r\n                <MenuItem value={\"A4\"}>A4</MenuItem>\r\n                <MenuItem value={\"A3\"}>A3</MenuItem>\r\n                <MenuItem value={\"B4\"}>B4</MenuItem>\r\n                <MenuItem value={\"B5\"}>B5</MenuItem>\r\n                <MenuItem value={\"Letter\"}>Letter</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </form>\r\n\r\n          {/* ColorMode에 대한 Dialog */}\r\n          <form className={classes.form} noValidate>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"colorMode\">ColorMode</InputLabel>\r\n              <Select\r\n                value={IPrintOption.colorMode}\r\n                onChange={onChange}\r\n                inputProps={{\r\n                  name: 'colorMode',\r\n                  id: 'colorMode'\r\n                }}\r\n              >\r\n                <MenuItem value=\"0\">BLUEPRINT</MenuItem>\r\n                <MenuItem value=\"1\">ANDROID_STYLE</MenuItem>\r\n                <MenuItem value=\"2\">IPHONE_STYLE</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </form>\r\n\r\n          {/* Direction에 대한 Dialog */}\r\n          <form className={classes.form} noValidate>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"direction\">Direction</InputLabel>\r\n              <Select\r\n                value={IPrintOption.direction}\r\n                onChange={onChange}\r\n                inputProps={{\r\n                  name: 'direction',\r\n                  id: 'direction'\r\n                }}\r\n              >\r\n                <MenuItem value=\"auto\">auto</MenuItem>\r\n                <MenuItem value=\"protrait\">protrait</MenuItem>\r\n                <MenuItem value=\"landscape\">landscape</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </form>\r\n\r\n          {/* ScaleUp에 대한 Dialog */}\r\n          <form className={classes.form} noValidate style={{clear:\"both\", float:\"left\"}}>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"scaleUpToMedia\">ScaleUpToMedia</InputLabel>\r\n              <Select\r\n                value={IPrintOption.scaleUpToMedia}\r\n                onChange={onChange}\r\n                inputProps={{\r\n                  name: 'scaleUpToMedia',\r\n                  id: 'scaleUpToMedia'\r\n                }}\r\n              >\r\n                <MenuItem value=\"true\">true</MenuItem>\r\n                <MenuItem value=\"false\">false</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </form>\r\n\r\n          {/* ScaleDown에 대한 Dialog */}\r\n          <form className={classes.form} noValidate>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"scaleDownToMedia\">ScaleDownToMedia</InputLabel>\r\n              <Select\r\n                value={IPrintOption.scaleDownToMedia}\r\n                onChange={onChange}\r\n                inputProps={{\r\n                  name: 'scaleDownToMedia',\r\n                  id: 'scaleDownToMedia'\r\n                }}\r\n              >\r\n                <MenuItem value=\"true\">true</MenuItem>\r\n                <MenuItem value=\"false\">false</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </form>\r\n\r\n          {/* TargetPage에 대한 Dialog */}\r\n          <form className={classes.form} noValidate>\r\n            <FormControl className={classes.formControl}>\r\n              {/* <TextField id=\"targetPages\" margin=\"dense\" label=\"TargetPages\" type=\"text\" /> */}\r\n              {/* <InputLabel htmlFor=\"targetPages\">TargetPages</InputLabel> */}\r\n              <TextField id=\"targetPages\" name=\"targetPages\" margin=\"dense\" label=\"TargetPages\"\r\n                     type=\"text\" onSubmit={(e) => handleSave}/>\r\n            </FormControl>\r\n          </form>\r\n\r\n          {/* PagePerSheet에 대한 Dialog */}\r\n          <form className={classes.form} noValidate style={{float:\"left\"}}>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"pagesPerSheet\">PagesPerSheet</InputLabel>\r\n              <Select\r\n                value={IPrintOption.pagesPerSheet}\r\n                onChange={onChange}\r\n                inputProps={{\r\n                  name: 'pagesPerSheet',\r\n                  id: 'pagesPerSheet'\r\n                }}\r\n              >\r\n                <MenuItem value=\"1\">1</MenuItem>\r\n                <MenuItem value=\"2\">2</MenuItem>\r\n                <MenuItem value=\"4\">4</MenuItem>\r\n                <MenuItem value=\"8\">8</MenuItem>\r\n                <MenuItem value=\"9\">9</MenuItem>\r\n                <MenuItem value=\"16\">16</MenuItem>\r\n                <MenuItem value=\"18\">18</MenuItem>\r\n                <MenuItem value=\"25\">25</MenuItem>\r\n                <MenuItem value=\"32\">32</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </form>\r\n\r\n          {/* PageInfo에 대한 Dialog */}\r\n          <form className={classes.form} noValidate>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"pageInfo\">PageInfo</InputLabel>\r\n              <Select\r\n                value={IPrintOption.pageInfo}\r\n                onChange={onChange}\r\n                inputProps={{\r\n                  name: 'pageInfo',\r\n                  id: 'pageInfo'\r\n                }}\r\n              >\r\n                <MenuItem value={1}>3, 27, 1068, 1</MenuItem>\r\n                <MenuItem value={2}>3, 27, 1069, 1</MenuItem>\r\n                <MenuItem value={3}>3, 27, 1070, 1</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </form>\r\n\r\n          {/* DebugMode에 대한 Dialog */}\r\n          <form className={classes.form} noValidate style={{float:\"left\"}}>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"debugMode\">DebugMode</InputLabel>\r\n              <Select\r\n                value={IPrintOption.debugMode}\r\n                onChange={onChange}\r\n                inputProps={{\r\n                  name: 'debugMode',\r\n                  id: 'debugMode'\r\n                }}\r\n              >\r\n                <MenuItem value=\"0\">0</MenuItem>\r\n                <MenuItem value=\"1\">1</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </form>\r\n\r\n          {/* HasToPutNcode에 대한 Dialog */}\r\n          <form className={classes.form} noValidate>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"debugMode\">HasToPutNcode</InputLabel>\r\n              <Select\r\n                value={IPrintOption.hasToPutNcode}\r\n                onChange={onChange}\r\n                inputProps={{\r\n                  name: 'hasToPutNcode',\r\n                  id: 'hasToPutNcode'\r\n                }}\r\n              >\r\n                <MenuItem value=\"true\">true</MenuItem>\r\n                <MenuItem value=\"false\">false</MenuItem>\r\n\r\n              </Select>\r\n            </FormControl>\r\n          </form>\r\n\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleSave} color=\"primary\">\r\n            Save\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NeoPdf\\FileBrowserButton.tsx",["1033","1034","1035"],"import { Button } from '@material-ui/core';\r\nimport React, { useRef } from 'react';\r\nimport { onSuccess, _uuid, onOpenClicked, openFileBrowser } from \"./FileBrowser\";\r\n\r\n\r\ntype Props = {\r\n  onFileOpen: Function,\r\n\r\n  children?: React.ReactNode;\r\n  color?: any;\r\n  disabled?: boolean;\r\n  disableElevation?: boolean;\r\n  disableFocusRipple?: boolean;\r\n  endIcon?: React.ReactNode;\r\n  fullWidth?: boolean;\r\n  href?: string;\r\n  size?: 'small' | 'medium' | 'large';\r\n  startIcon?: React.ReactNode;\r\n  variant?: 'text' | 'outlined' | 'contained';\r\n}\r\n\r\n\r\nconst FileBrowserButton = (props: Props) => {\r\n  const { onFileOpen } = props;\r\n  const _fileInput = useRef();\r\n\r\n  async function fileOpen() {\r\n\r\n    const result = await openFileBrowser();\r\n    console.log(result.result);\r\n\r\n    if (result.result === \"success\") {\r\n      const url = result.url;\r\n      console.log(url);\r\n\r\n      if (onFileOpen) {\r\n        onFileOpen({ result: \"success\", url, file: result.file });\r\n      }\r\n    } else {\r\n      alert(\"파일 열기를 취소 했습니다\");\r\n      onFileOpen({ result: \"canceled\", url: null });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button {...props} onClick={fileOpen}>\r\n        {props.children}\r\n      </Button>\r\n\r\n      <input type=\"file\" id={_uuid}\r\n        onChange={onSuccess}\r\n        onClick={onOpenClicked}\r\n        ref={_fileInput}\r\n        style={{ display: \"none\" }} name=\"pdf\" accept=\"application/pdf\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FileBrowserButton;\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\Save\\SavePdf.tsx",["1036","1037"],"import { saveAs } from \"file-saver\";\r\nimport { degrees, PDFDocument, rgb, StandardFonts } from 'pdf-lib';\r\n\r\n// https://pdf-lib.js.org/\r\n\r\nexport async function addGraphicAndSavePdf(url: string, saveName: string) {\r\n\r\n  const existingPdfBytes = await fetch(url).then(res => res.arrayBuffer())\r\n\r\n  const pdfDoc = await PDFDocument.load(existingPdfBytes)\r\n  const helveticaFont = await pdfDoc.embedFont(StandardFonts.Helvetica)\r\n\r\n  const pages = pdfDoc.getPages()\r\n  const firstPage = pages[0]\r\n  const { height } = firstPage.getSize()\r\n  firstPage.drawText('This text was added with JavaScript!', {\r\n    x: 5,\r\n    y: height / 2 + 300,\r\n    size: 50,\r\n    font: helveticaFont,\r\n    color: rgb(0.95, 0.1, 0.1),\r\n    rotate: degrees(-45),\r\n  })\r\n\r\n\r\n  const svgPath =\r\n    'M 0,20 L 100,160 Q 130,200 150,120 C 190,-40 200,200 300,150 L 400,90'\r\n\r\n  firstPage.moveTo(100, firstPage.getHeight() - 5)\r\n\r\n  firstPage.moveDown(25)\r\n  firstPage.drawSvgPath(svgPath)\r\n\r\n  firstPage.moveDown(200)\r\n  firstPage.drawSvgPath(svgPath, { borderColor: rgb(0, 1, 0), borderWidth: 5 })\r\n\r\n  firstPage.moveDown(200)\r\n  firstPage.drawSvgPath(svgPath, { color: rgb(1, 0, 0) })\r\n\r\n  firstPage.moveDown(200)\r\n  firstPage.drawSvgPath(svgPath, { scale: 0.5 })\r\n\r\n\r\n  const pdfBytes = await pdfDoc.save();\r\n  console.log(pdfBytes);\r\n\r\n  var blob = new Blob([pdfBytes]);\r\n  saveAs(blob, saveName);\r\n\r\n  console.log(firstPage);\r\n\r\n}\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\SurfaceMapper\\Calibration\\CalibrationButton.tsx",["1038","1039","1040","1041","1042","1043","1044","1045","1046"],"import React, { useState } from \"react\";\r\n// import { Container, Modal, Row, Col, Button } from \"react-bootstrap\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Box } from \"@material-ui/core\";\r\nimport CalibrationDialog from \"./CalibrationDialog\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: 'auto',\r\n    width: 'fit-content',\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    minWidth: 120,\r\n  },\r\n  formControlLabel: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function CalibrationButton(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [pageNo, setPageNo] = useState(1);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleClose = (e: {}, reason: \"backdropClick\" | \"escapeKeyDown\") => {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button {...props} onClick={handleClickOpen}>\r\n        {props.children}\r\n      </Button>\r\n\r\n      <CalibrationDialog open={open} handleClose={handleClose} pageNo={pageNo} />\r\n    </div>\r\n  );\r\n}","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\DataStructure\\Enums.ts",["1047","1048","1049","1050"],"/** @enum {string} */\r\nexport enum DeviceTypeEnum {\r\n  PEN = \"pen\",\r\n  ERASER = \"eraser\",\r\n  PLAYER = \"player\",\r\n  STYLUS = \"stylus\",\r\n  FSIR = \"fsir\",\r\n  NONE = \"none\",\r\n};\r\n\r\n\r\n\r\n/** @enum {number} */\r\nexport enum PEN_STATE {\r\n  NONE = 0,\r\n  PEN_DOWN = 1,\r\n  PEN_MOVE = 2,\r\n  PEN_UP = 9,\r\n\r\n  HOVER_MOVE = 101,\r\n};\r\n\r\n\r\n\r\n/** @enum {string} */\r\nexport enum PenEventName {\r\n  ON_PEN_DOWN = \"pendown\",\r\n  ON_PEN_PAGEINFO = \"penpageinfo\",\r\n  ON_PEN_HOVER_PAGEINFO = \"hoverpageinfo\",\r\n  ON_PEN_MOVE = \"penmove\",\r\n  ON_PEN_UP = \"penup\",\r\n  ON_HOVER_MOVE = \"hovermove\",\r\n\r\n  ON_NCODE_ERROR = \"error\",\r\n  ON_PW_REQUIRED = \"pw_req\",\r\n  ON_CONNECTED = \"connected\",\r\n  ON_DISCONNECTED = \"disconnected\",\r\n\r\n  ON_UPGRADE_NEEDED = \"fw_up\",\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport enum IBrushType {\r\n  PEN = 0,\r\n  MARKER = 1,\r\n  PENCIL = 2,\r\n  ERASER = 3,\r\n  BRUSH = 4,\r\n  FOUNTAINPEN = 5,\r\n};\r\n\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\StorageRenderWorker.js",["1051","1052","1053","1054","1055","1056","1057","1058","1059","1060","1061","1062","1063","1064","1065","1066","1067","1068","1069","1070","1071","1072","1073","1074","1075","1076","1077","1078","1079","1080","1081","1082","1083","1084","1085","1086","1087","1088","1089","1090","1091","1092","1093","1094","1095","1096","1097","1098","1099","1100","1101","1102","1103","1104","1105","1106","1107","1108","1109","1110","1111","1112","1113","1114","1115","1116","1117","1118","1119","1120","1121","1122","1123","1124","1125","1126","1127","1128","1129","1130","1131","1132","1133","1134","1135","1136","1137","1138"],"import \"../../types\";\r\nimport { fabric } from \"fabric\";\r\nimport { PLAYSTATE } from \"./RenderWorkerBase\";\r\nimport { InkStorage } from \"../..\";\r\nimport { PATH_THICKNESS_SCALE, drawPath } from \"./DrawCurves\";\r\nimport { NCODE_TO_SCREEN_SCALE } from \"../../constants\";\r\nimport { paperInfo } from \"../../noteserver/PaperInfo\";\r\n\r\nconst timeTickDuration = 20; // ms\r\nconst DISABLED_STROKE_COLOR = \"rgba(0, 0, 0, 0.1)\";\r\n// const INVISIBLE_STROKE_COLOR = \"rgba(255, 255, 255, 0)\";\r\n// const INCOMPLETE_STROKE_COLOR = \"rgba(255, 0, 255, 0.4)\";\r\n// const CURRENT_POINT_STROKE_COLOR = \"rgba(255, 255, 255, 1)\";\r\n\r\n\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport const ZoomFitEnum = {\r\n  WIDTH: \"width\",\r\n  HEIGHT: \"height\",\r\n  FULL: \"full\",\r\n  ACTUAL: \"100%\",\r\n}\r\n\r\nconst STROKE_OBJECT_ID = \"ns\";\r\nconst GRID_OBJECT_ID = \"g\";\r\n\r\nexport default class StorageRenderWorker {\r\n  /**\r\n   *\r\n   * @param {{canvasName:string, storage:InkStorage, viewFit:ZoomFitEnum, autoStop:boolean, playTimeHandler:function, playStateHandler:function, }} options\r\n   */\r\n\r\n  constructor(options) {\r\n    const { canvasName, viewFit, storage, playTimeHandler, playStateHandler, autoStop } = options;\r\n\r\n    if (!(storage instanceof InkStorage)) {\r\n      console.error(\"storage is not an instance of InkStorage\");\r\n    }\r\n\r\n    this.viewFit = viewFit;\r\n\r\n    /** @type {InkStorage} */\r\n    this.storage = storage;\r\n\r\n    /** @type {number} */\r\n    // this.ncode_to_screen_scale = NCODE_TO_SCREEN_SCALE;\r\n\r\n    this.base_scale = NCODE_TO_SCREEN_SCALE;\r\n    this.offset_x = 0;\r\n    this.offset_y = 0;\r\n\r\n    /** @type {{width:number, height:number}} */\r\n    this.initialSize = { width: 0, height: 0 };\r\n\r\n    /** @type {{width:number, height:number}} */\r\n    this.currSize = { width: 0, height: 0 };\r\n\r\n    /** @type {Object.<string, {stroke:NeoStroke, path:fabric.Path}>} */\r\n    this.livePaths = {};\r\n\r\n    /** @type {{section?:number, owner?:number, book?:number, page?:number, Xmin:number, Ymin:number, Xmax:number, Ymax:number, Mag?:number}} */\r\n    this.surfaceInfo = {\r\n      section: 3,\r\n      owner: 27,\r\n      book: 168,\r\n      page: 1,\r\n\r\n      Xmin: 3.12,\r\n      Ymin: 3.12,\r\n      Xmax: 91.68,\r\n      Ymax: 128.36,\r\n      Mag: 1,\r\n    }\r\n\r\n    this.scrollAnimateInterval = null;\r\n\r\n    // 재생 시간과 관련된 변수\r\n\r\n    this.playingTimeHandler = playTimeHandler;\r\n    this.playStateHandler = playStateHandler;\r\n\r\n\r\n    /**\r\n     * relative time\r\n     * absolute time(unix ms) = playingTime + startTime_whole\r\n     */\r\n    this.playingTime = -1;\r\n\r\n    /**\r\n     * absolute time(unix ms)\r\n     * relative time = absolute time - this.startTime_whole\r\n     */\r\n    this.startTime_page = 0;\r\n    this.endTime_page = 0;\r\n\r\n    this.startTime_whole = 0;\r\n    this.endTime_whole = 0;\r\n\r\n    /**\r\n     * the page info now being played\r\n     */\r\n    this.rel_auto_play_endtime = 0;\r\n    this.autoStop = autoStop;\r\n    //\r\n    this.canvasName = canvasName;\r\n    this.canvas = null;\r\n    this.frameconfig = 1;\r\n    this.bgcolor = 0;\r\n    this.bgurl = \"\";\r\n    this.strokWidth = this.initialSize.width;\r\n    this.strokHeight = this.initialSize.height;\r\n    this.lineScale = [1, 3, 5, 7, 10];\r\n    this.pathArray = []; // Rendering Path\r\n\r\n    this.scaleX = 1;\r\n    this.scaleY = 1;\r\n    // for replay\r\n    this.renderTime = 0;\r\n    this.replaySpeed = 1;\r\n    this.dotArray = [];\r\n    this.strokes = null; // neoink format stroke\r\n    this.backgroundImage = null;\r\n\r\n    this.timer = null;\r\n\r\n    this.timeStr = \"\";\r\n    this.pageNumber = 0;\r\n\r\n    this.rect = { x: 0, y: 0, width: 800, height: 1000 };\r\n  }\r\n\r\n\r\n\r\n  //step 1: canvas set size and background image\r\n  setCanvas = (size, bgurl) => {\r\n    this.bgurl = bgurl;\r\n    this.initialSize = { ...size };\r\n    this.currSize = { ...size };\r\n    this.canvas = new fabric.Canvas(this.canvasName, {\r\n      backgroundColor: \"rgb(255,255,255)\",\r\n      // selectionColor: 'blue',\r\n      selection: false,\r\n      controlsAboveOverlay: true,\r\n      // centeredScaling: true,\r\n      // allowTouchScrolling: true,\r\n      selectionLineWidth: 4,\r\n      width: size.width,\r\n      height: size.height,\r\n    });\r\n\r\n    let canvas = this.canvas;\r\n\r\n    canvas.on('mouse:down', this.onCanvasMouseDown);\r\n    canvas.on('mouse:move', this.onCanvasMouseMove);\r\n    canvas.on('mouse:up', this.onCanvasMousUp);\r\n    canvas.on('mouse:wheel', this.onCanvasMouseWheel);\r\n\r\n\r\n    // // this.canvas.isDrawingMode = true\r\n    // return new Promise((resolve, reject) => {\r\n    //   fabric.Image.fromURL( bgurl, (img) => {\r\n    //       // console.log(\"bgurl !!!!!!!!!!!!!!!\",bgurl);\r\n    //       img.scaleToWidth(size.width);\r\n    //       // img.scaleToHeight(size.height)\r\n    //       this.backgroundImage = img;\r\n    //       img.selectable = false;\r\n    //       this.canvas.setBackgroundImage( img, this.canvas.renderAll.bind(this.canvas) );\r\n    //       // console.log(\"image size\", size, img.width, img.height);\r\n    //       resolve();\r\n    //     },\r\n    //     { crossOrigin: \"Anonymous\" }\r\n    //   );\r\n    // });\r\n  }\r\n\r\n  drawPageLayout = () => {\r\n    const canvas = this.canvas;\r\n\r\n    // 지우기\r\n    if (this.canvas) {\r\n      let objects = this.canvas.getObjects();\r\n      let strokes = objects.filter(obj => obj.objType === GRID_OBJECT_ID);\r\n\r\n      strokes.forEach((obj) => {\r\n        this.canvas.remove(obj);\r\n      });\r\n    }\r\n\r\n    // 그리기\r\n    const paperWidth = this.surfaceInfo.Xmax - this.surfaceInfo.Xmin;\r\n    const paperHeight = this.surfaceInfo.Ymax - this.surfaceInfo.Ymin;\r\n\r\n    const size = {\r\n      width: paperWidth * this.base_scale,\r\n      height: paperHeight * this.base_scale,\r\n    };\r\n\r\n    // console.log(`Grid: scale=${this.base_scale} (width, height)=(${size.width}, ${size.height})`);\r\n\r\n    const ratio = 1;\r\n\r\n    let rect = new fabric.Rect({\r\n      width: size.width * ratio - 5,\r\n      height: size.height * ratio - 5,\r\n      strokeWidth: 5,\r\n      stroke: 'rgba(0,0,0,1)',\r\n      fill: 'rgb(100,100,200, 0.1)',\r\n      left: size.width * (1 - ratio) * 0.5,\r\n      top: size.height * (1 - ratio) * 0.5,\r\n      // lockMovementX: true,\r\n      // lockMovementY: true,\r\n      selectable: false,\r\n      objType: GRID_OBJECT_ID,\r\n\r\n    });\r\n    canvas.add(rect);\r\n\r\n    for (let x = 0; x < size.width; x += 10) {\r\n      let line = new fabric.Line([x, 0, x, size.height], {\r\n        strokeWidth: 0.5,\r\n        stroke: \"rgba(0,0,0,0.1)\",\r\n        hasControls: false,\r\n        hasBorders: false,\r\n        lockMovementX: true,\r\n        lockMovementY: true,\r\n        objType: GRID_OBJECT_ID,\r\n      });\r\n\r\n      canvas.add(line);\r\n    }\r\n\r\n\r\n    for (let y = 0; y < size.height; y += 10) {\r\n      let line = new fabric.Line([0, y, size.width, y], {\r\n        strokeWidth: 0.5,\r\n        stroke: \"rgba(0,0,0,0.1)\",\r\n        hasControls: false,\r\n        hasBorders: false,\r\n        lockMovementX: true,\r\n        lockMovementY: true,\r\n        objType: GRID_OBJECT_ID,\r\n      });\r\n\r\n      canvas.add(line);\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {Object} opt \r\n   */\r\n  onCanvasMouseDown = (opt) => {\r\n    let canvas = this.canvas;\r\n\r\n    let evt = opt.e;\r\n    if (evt.altKey === true) \r\n    {\r\n      canvas.isDragging = true;\r\n      canvas.selection = false;\r\n      canvas.lastPosX = evt.clientX;\r\n      canvas.lastPosY = evt.clientY;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {Object} opt \r\n   */\r\n  onCanvasMouseMove = (opt) => {\r\n    let canvas = this.canvas;\r\n\r\n    if (canvas.isDragging) {\r\n      let e = opt.e;\r\n      // console.log(`Point ${e.clientX}, ${e.clientY}`);\r\n      let vpt = canvas.viewportTransform;\r\n      vpt[4] += e.clientX - canvas.lastPosX;\r\n      vpt[5] += e.clientY - canvas.lastPosY;\r\n\r\n      this.scrollBoundaryCheck();\r\n\r\n      // canvas.setViewportTransform(vpt);\r\n      canvas.requestRenderAll();\r\n      canvas.lastPosX = e.clientX;\r\n      canvas.lastPosY = e.clientY;\r\n\r\n      // this.canvasBoundaryCheck();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * \r\n   * @param {Object} opt \r\n   */\r\n  onCanvasMousUp = (opt) => {\r\n    let canvas = this.canvas;\r\n\r\n\r\n    // on mouse up we want to recalculate new interaction\r\n    // for all objects, so we call setViewportTransform\r\n    canvas.setViewportTransform(canvas.viewportTransform);\r\n    canvas.isDragging = false;\r\n    canvas.selection = false;\r\n\r\n\r\n    // let vpt = canvas.viewportTransform;\r\n    // console.log(vpt);\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {Object} opt \r\n   */\r\n  onCanvasMouseWheel = (opt) => {\r\n    let canvas = this.canvas;\r\n\r\n    let delta = opt.e.deltaY;\r\n    let zoom = canvas.getZoom();\r\n    zoom *= 0.999 ** delta;\r\n\r\n    this.setCanvasZoom(zoom, opt);\r\n  }\r\n\r\n\r\n  scrollBoundaryCheck = () => {\r\n\r\n    const canvas = this.canvas;\r\n    const zoom = canvas.getZoom();\r\n\r\n    // http://fabricjs.com/fabric-intro-part-5#pan_zoom\r\n    let vpt = canvas.viewportTransform;\r\n\r\n    if (vpt[4] >= 0) {\r\n      vpt[4] = 0;\r\n    }\r\n    else if (vpt[4] < canvas.getWidth() - this.currSize.width * zoom) {\r\n      vpt[4] = canvas.getWidth() - this.currSize.width * zoom;\r\n    }\r\n\r\n    if (vpt[5] >= 0) {\r\n      vpt[5] = 0;\r\n    }\r\n    else if (vpt[5] < canvas.getHeight() - this.currSize.height * zoom) {\r\n      vpt[5] = canvas.getHeight() - this.currSize.height * zoom;\r\n    }\r\n\r\n    if (zoom < 1) {\r\n      vpt[4] = (this.currSize.width - this.currSize.width * zoom) / 2;\r\n      vpt[5] = (this.currSize.height - this.currSize.height * zoom) / 2;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} zoom\r\n   * @param {Object} opt \r\n   */\r\n  setCanvasZoom = (zoom, opt) => {\r\n    let canvas = this.canvas;\r\n\r\n    if (zoom > 20) zoom = 20;\r\n    if (zoom < 0.01) zoom = 0.01;\r\n\r\n    if (opt) canvas.zoomToPoint({ x: opt.e.offsetX, y: opt.e.offsetY }, zoom);\r\n    else canvas.setZoom(zoom);\r\n\r\n    opt.e.preventDefault();\r\n    opt.e.stopPropagation();\r\n\r\n    this.scrollBoundaryCheck();\r\n  }\r\n\r\n\r\n  /**\r\n   * \r\n   * @param {{x:number, y:number}} dot \r\n   */\r\n  focusToDot = (dot) => {\r\n    const margin_to_go_ratio = 0.25;\r\n    const canvas_xy = this.getCanvasXY(dot);\r\n    const screen_xy = this.getScreenXY(canvas_xy);\r\n\r\n    let dx = 0, dy = 0;\r\n    let shouldScroll = false;\r\n\r\n    let canvas = this.canvas;\r\n    let vpt = canvas.viewportTransform;\r\n    let offset_x = vpt[4];\r\n    let offset_y = vpt[5];\r\n\r\n    if (screen_xy.x < 0) {\r\n      // scroll to left\r\n      let target = this.currSize.width * margin_to_go_ratio;\r\n      dx = target - screen_xy.x;\r\n      shouldScroll = true;\r\n    }\r\n\r\n    if (screen_xy.y < 0) {\r\n      // scroll to top\r\n      let target = this.currSize.height * margin_to_go_ratio;\r\n      dy = target - screen_xy.y;\r\n      shouldScroll = true;\r\n    }\r\n\r\n    if (screen_xy.x > this.currSize.width) {\r\n      // scroll to right\r\n      let target = this.currSize.width * (1 - margin_to_go_ratio);\r\n      dx = target - screen_xy.x;\r\n      shouldScroll = true;\r\n    }\r\n\r\n    if (screen_xy.y > this.currSize.height) {\r\n      // scroll to bottom\r\n      let target = this.currSize.height * (1 - margin_to_go_ratio);\r\n      dy = target - screen_xy.y;\r\n      shouldScroll = true;\r\n    }\r\n\r\n    if (shouldScroll) {\r\n\r\n      let new_offset_x = offset_x + dx;\r\n      let new_offset_y = offset_y + dy;\r\n\r\n      this.scrollCanvasToPoint({ x: new_offset_x, y: new_offset_y }, true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {{x:number, y:number}} point \r\n   * @param {boolean} animate\r\n   */\r\n  scrollCanvasToPoint = (point, animate) => {\r\n    let canvas = this.canvas;\r\n    let vpt = canvas.viewportTransform;\r\n\r\n    if (animate) {\r\n      if (this.scrollAnimateInterval) {\r\n        clearInterval(this.scrollAnimateInterval);\r\n        this.scrollAnimateInterval = null;\r\n      }\r\n      let x0 = vpt[4];\r\n      let y0 = vpt[5];\r\n      let x1 = point.x;\r\n      let y1 = point.y;\r\n\r\n      const div = 10;\r\n      let step_x = (x1 - x0) / div;\r\n      let step_y = (y1 - y0) / div;\r\n      let count = 0;\r\n\r\n      this.scrollAnimateInterval = setInterval(() => {\r\n        x0 += step_x;\r\n        y0 += step_y;\r\n        vpt[4] = x0;\r\n        vpt[5] = y0;\r\n        canvas.requestRenderAll();\r\n\r\n        count++;\r\n        if (count === div) {\r\n          clearInterval(this.scrollAnimateInterval);\r\n          this.scrollAnimateInterval = null;\r\n          canvas.setViewportTransform(canvas.viewportTransform);\r\n        }\r\n      }, 20);\r\n    }\r\n    else {\r\n      vpt[4] = point.x;\r\n      vpt[5] = point.y;\r\n      this.scrollBoundaryCheck();\r\n      canvas.requestRenderAll();\r\n      canvas.setViewportTransform(canvas.viewportTransform);\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * \r\n   * @param {{x:number, y:number, f?:number}} ncodeXY \r\n   */\r\n  getCanvasXY = (ncodeXY) => {\r\n    const { x, y, f } = ncodeXY;\r\n    const { Xmin, Ymin } = this.surfaceInfo;\r\n\r\n    let scale = this.base_scale;\r\n\r\n    let cx = (x - Xmin) * scale + this.offset_x;\r\n    let cy = (y - Ymin) * scale + this.offset_y;\r\n\r\n    return { x: cx, y: cy, f };\r\n  }\r\n\r\n\r\n  /**\r\n * \r\n * @param {{x:number, y:number, f?:number}} ncodeXY \r\n */\r\n  getCanvasXY_scaled = (ncodeXY) => {\r\n    const { x, y, f } = ncodeXY;\r\n    const { Xmin, Ymin } = this.surfaceInfo;\r\n\r\n    let scale = this.base_scale;\r\n\r\n    let cx = (x - Xmin) * scale + this.offset_x;\r\n    let cy = (y - Ymin) * scale + this.offset_y;\r\n\r\n    cx *= PATH_THICKNESS_SCALE;\r\n    cy *= PATH_THICKNESS_SCALE;\r\n\r\n    return { x: cx, y: cy, f };\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {{x:number, y:number}} canvasXY \r\n   */\r\n  getScreenXY = (canvasXY) => {\r\n    const { x, y } = canvasXY;\r\n\r\n    let canvas = this.canvas;\r\n    let vpt = canvas.viewportTransform;\r\n\r\n    let zoom = this.canvas.getZoom();\r\n    let offset_x = vpt[4];\r\n    let offset_y = vpt[5];\r\n\r\n\r\n    let sx = x * zoom + offset_x;\r\n    let sy = y * zoom + offset_y;\r\n\r\n    return { x: sx, y: sy };\r\n  }\r\n\r\n\r\n  /**\r\n   * \r\n   * @param {{x:number, y:number}} screenXY \r\n   */\r\n  getNcodeXY = (screenXY) => {\r\n    const { x, y } = screenXY;\r\n\r\n    let scale = this.base_scale;\r\n\r\n    let nx = (x - this.offset_x) / scale;\r\n    let ny = (y - this.offset_y) / scale;\r\n\r\n    return { x: nx, y: ny };\r\n  }\r\n\r\n\r\n\r\n  clear = () => {\r\n    this.canvas.clear();\r\n  };\r\n\r\n  // resize = size => {\r\n  //   let zoom = size.width / this.initialSize.width;\r\n  //   this.canvas.setZoom(zoom);\r\n  //   this.canvas.setHeight(size.height);\r\n  //   this.canvas.setWidth(size.width);\r\n  // };\r\n  redrawPage = () => {\r\n    // kitty, 임시\r\n    this.resetPathArray();\r\n\r\n    let pageInfo = this.storage.getLastPageInfo();\r\n    let strokes = this.storage.getPageStrokes(pageInfo);\r\n    let live_strokes = this.storage.getPageStrokes_live(pageInfo);\r\n    strokes = strokes.concat(live_strokes);\r\n\r\n    if (strokes && strokes.length > 0) {\r\n      let page_start_time = strokes[0].dotArray[0].time;\r\n\r\n      this.initPathArray(strokes, 1, page_start_time);\r\n    }\r\n\r\n    this.drawPageAtTime(-1);\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {ZoomFitEnum} mode \r\n   * @param {{width:number, height:number}} szPaper \r\n   * @param {number} currViewFit\r\n   */\r\n  calcScaleFactor(mode, szPaper, currViewFit) {\r\n    const szCanvas = this.currSize;\r\n    let scale = 1;\r\n    switch (mode) {\r\n      case ZoomFitEnum.WIDTH:\r\n        scale = szCanvas.width / szPaper.width;\r\n\r\n        break;\r\n\r\n      case ZoomFitEnum.HEIGHT:\r\n        scale = szCanvas.height / szPaper.height;\r\n        break;\r\n\r\n      case ZoomFitEnum.FULL:\r\n        scale = Math.min(szCanvas.width / szPaper.width, szCanvas.height / szPaper.height);\r\n        break;\r\n\r\n      case ZoomFitEnum.ACTUAL:\r\n        scale = NCODE_TO_SCREEN_SCALE;\r\n        break;\r\n\r\n      default:\r\n        scale = currViewFit;\r\n\r\n        break;\r\n\r\n    }\r\n    return scale;\r\n  }\r\n\r\n\r\n  /**\r\n   * \r\n   * @param {number} section\r\n   * @param {number} owner\r\n   * @param {number} book\r\n   * @param {number} page\r\n   * @param {boolean} forceToRefresh\r\n   */\r\n  changePage = (section, owner, book, page, forceToRefresh) => {\r\n    let currPage = this.surfaceInfo;\r\n\r\n    if ((!forceToRefresh)\r\n      && (section === currPage.section\r\n        && owner === currPage.owner\r\n        && book === currPage.book\r\n        && page === currPage.page)) return;\r\n\r\n\r\n    // 페이지 정보와 scale을 조정한다.\r\n    let info = paperInfo.getPaperInfo({ section, owner, book, page });\r\n    if (info) {\r\n      this.surfaceInfo = {\r\n        section, owner, book, page,\r\n        Xmin: info.Xmin, Ymin: info.Ymin, Xmax: info.Xmax, Ymax: info.Ymax,\r\n        Mag: info.Mag\r\n      };\r\n\r\n    }\r\n    let szPaper = paperInfo.getPaperSize({ section, owner, book, page });\r\n    this.base_scale = this.calcScaleFactor(this.viewFit, szPaper, this.base_scale);\r\n\r\n\r\n    // 현재 모든 stroke를 지운다.\r\n    this.drawPageLayout();\r\n    this.resetPathArray();\r\n\r\n    // 페이지의 stroke를 그린다\r\n    let pageInfo = { section, owner, book, page };\r\n    let strokes = this.storage.getPageStrokes(pageInfo);\r\n\r\n    if (strokes && strokes.length > 0) {\r\n      let page_start_time = strokes[0].dotArray[0].time;\r\n      this.initPathArray(strokes, 1, page_start_time);\r\n    }\r\n\r\n    this.drawPageAtTime(-1);\r\n  }\r\n\r\n  /**\r\n   * Pen Down이 들어왔다. 그러나 아직 page 정보가 들어오지 않아서, \r\n   * 이 페이지에 붙여야 할 것인가 아니면, 새로운 페이지에 붙여야 할 것인가를 모른다.\r\n   * \r\n   * 렌더러 처리 순서\r\n   * 1) Pen Down: live stroke의 path를 생성\r\n   * 2) Page Info: 페이지를 전환하고, 잉크 스토리지에 있는 이전의 스트로크를 path로 등록한다.\r\n   * 3) Pen Move: \r\n   *      3-1) live stroke path의 처음 나오는 점이면, path를 canvas에 등록한다.\r\n   *      3-2) 두번째 점부터는 path에 append 한다.\r\n   * 4) Pen Up: Live stroke path는 없애고, 잉크스토리지에 2) 이후의 stroke를 받아 path에 추가 등록한다.\r\n   * \r\n   * @public \r\n   * @param {{strokeKey:string, mac:string, time:number, stroke:NeoStroke}} event \r\n   */\r\n  createLiveStroke = (event) => {\r\n    this.livePaths[event.strokeKey] = {\r\n      stroke: event.stroke,\r\n      path: null\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {{strokeKey:string, mac:string, stroke:NeoStroke, dot:NeoDot}} event \r\n   */\r\n  pushLiveDot = (event) => {\r\n    let pathData = this.livePaths[event.strokeKey];\r\n    let path = pathData.path;\r\n    let stroke = pathData.stroke;\r\n\r\n    if (path) {\r\n      this.canvas.remove(path);\r\n    }\r\n\r\n    const color = stroke.color;\r\n    // const zoom = this.canvas.getZoom();\r\n    // const thickness = stroke.thickness * zoom;\r\n    const thickness = stroke.thickness;\r\n    path = this.createPathFromDots(stroke.dotArray, color, thickness);\r\n\r\n    if (this.canvas) {\r\n      this.canvas.add(path);\r\n      pathData.path = path;\r\n    }\r\n\r\n    const dot = event.dot;\r\n    this.focusToDot(dot);\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {{strokeKey:string, mac:string, stroke, section:number, owner:number, book:number, page:number}} event \r\n   */\r\n  closeLiveStroke = (event) => {\r\n    let pathData = this.livePaths[event.strokeKey];\r\n    let path = pathData.path;\r\n\r\n    if (path) {\r\n      this.pathArray.push(path);\r\n      path.fill = path.color;\r\n      path.stroke = path.color;\r\n      // this.canvas.renderAll();\r\n    }\r\n\r\n    delete this.livePaths[event.strokeKey];\r\n  }\r\n\r\n  setReplaySpeed = (speed) => {\r\n    this.replaySpeed = speed;\r\n    // console.log(\"set speed\", speed)\r\n  };\r\n\r\n  resize = (size) => {\r\n    let zoom = size.width / this.initialSize.width;\r\n    this.currSize = { ...size };\r\n\r\n    this.canvas.setHeight(size.height);\r\n    this.canvas.setWidth(size.width);\r\n\r\n    this.canvas.setZoom(zoom);\r\n  };\r\n\r\n  stopInterval() {\r\n    if (this.timer) {\r\n      clearInterval(this.timer);\r\n      this.timer = null;\r\n    }\r\n  }\r\n\r\n  replayPause = () => {\r\n    this.stopInterval();\r\n  };\r\n\r\n  replayStop = () => {\r\n    this.playingTime = 0;\r\n    this.playingTimeHandler(this.playingTime);\r\n    this.drawPageAtTime(this.playingTime);\r\n  };\r\n\r\n  replayRewind = () => {\r\n    this.playingTime = this.rewindToPageStart();\r\n    this.playingTimeHandler(this.playingTime);\r\n    this.drawPageAtTime(this.playingTime);\r\n  };\r\n\r\n  setTimePoint = (ms) => {\r\n    this.playingTime = ms;\r\n    this.drawPageAtTime(this.playingTime);\r\n    // this.playingTimeHandler(this.playingTime);\r\n  };\r\n\r\n  setAutoStop = (sw) => {\r\n    this.autoStop = sw;\r\n  }\r\n  setPage = (page) => {\r\n    this.pageNumber = page.pageNumber;\r\n  };\r\n\r\n  rewindToPageStart = () => {\r\n    let newTime = this.startTime_page - this.startTime_whole - 1;\r\n    return newTime;\r\n  };\r\n\r\n  setPageStrokes = (page, strokeStream) => {\r\n    const { section, owner, book, pageNumber } = page;\r\n    let strokes_kitty = strokeStream.strokes.filter(\r\n      (s) =>\r\n        s.book === book &&\r\n        s.owner === owner &&\r\n        s.section === section &&\r\n        s.pageNum === pageNumber\r\n    );\r\n    console.log(strokes_kitty);\r\n\r\n    let lastStroke, lastDot;\r\n\r\n    // 페이지, 시작시간, 끝시각\r\n    let page_start_time = strokes_kitty[0].dotArray[0].time;\r\n    lastStroke = strokes_kitty[strokes_kitty.length - 1];\r\n    lastDot = lastStroke.dotArray[lastStroke.dotArray.length - 1];\r\n    let page_end_time = lastDot.time;\r\n\r\n    this.startTime_page = page_start_time;\r\n    this.endTime_page = page_end_time + 1;\r\n\r\n    // 전체 필기, 시작시간, 끝시간\r\n    let whole_start_time = strokeStream.strokes[0].dotArray[0].time;\r\n    lastStroke = strokeStream.strokes[strokeStream.strokes.length - 1];\r\n    lastDot = lastStroke.dotArray[lastStroke.dotArray.length - 1];\r\n    let whole_end_time = lastDot.time;\r\n\r\n    this.startTime_whole = whole_start_time;\r\n    this.endTime_whole = whole_end_time + 1;\r\n\r\n    this.playingTime = -1; // absolute time (unix ms) = playingTime + startTime_whole\r\n\r\n    return { strokes_kitty, start_time: page_start_time };\r\n  };\r\n\r\n  // Drawing iOS Data Format\r\n  preparePage = (rect, size, scale) => {\r\n    // let strokeStream = this.storage;\r\n    // // console.log(\"Page data\", page, rect, size, scale)\r\n    this.strokWidth = size.width;\r\n    this.strokHeight = size.height;\r\n    this.rect = rect;\r\n    this.scale = scale;\r\n    this.scaleX = (size.width / rect.width / scale);\r\n    this.scaleY = (size.height / rect.height / scale);\r\n    // let strokes = page.strokes;\r\n    // this.strokes = strokes;\r\n\r\n    // let stroke_data = this.setPageStrokes(page, strokeStream);\r\n    // let strokes_kitty = stroke_data.strokes_kitty;\r\n    // let page_start_time = stroke_data.start_time;\r\n\r\n    // this.resetPathArray();\r\n    // this.initPathArray(strokes_kitty, scale, page_start_time);\r\n\r\n    // // this.playingTime = this.rewindToPageStart();\r\n    // this.drawPageAtTime(this.playingTime);\r\n  };\r\n\r\n  resetPathArray = () => {\r\n    if (this.canvas) {\r\n      let objects = this.canvas.getObjects();\r\n      let strokes = objects.filter(obj => obj.objType === STROKE_OBJECT_ID);\r\n\r\n      strokes.forEach((path) => {\r\n        this.canvas.remove(path);\r\n      });\r\n    }\r\n  };\r\n\r\n  initPathArray = (strokes, scale, startTime) => {\r\n    strokes.forEach((stroke) => {\r\n      if (stroke.dotArray.length > 0) {\r\n        let color = stroke.color;\r\n        // const zoom = this.canvas.getZoom();\r\n        // const thickness = stroke.thickness * zoom;\r\n        const thickness = stroke.thickness;\r\n\r\n        let path = this.createPathFromDots(stroke.dotArray, color, thickness, scale, startTime);\r\n        this.pathArray.push(path);\r\n        if (this.canvas) {\r\n          this.canvas.add(path);\r\n          // console.log(\"Add Path\", path);\r\n        }\r\n\r\n      }\r\n    });\r\n  };\r\n\r\n  // Draw Dot from Pen\r\n  createPathFromDots = (dots, color, thickness) => {\r\n    // let scale = this.base_scale;\r\n\r\n    // console.log(\"dot Count\", dots.length);\r\n    // let rect = this.rect;\r\n    // console.log(rect);\r\n\r\n    let pointArray = [];\r\n    dots.forEach((dot) => {\r\n      let pt = this.getCanvasXY_scaled(dot);\r\n      pointArray.push(pt);\r\n    });\r\n\r\n    // Draw Stroke\r\n    // let color = this.color;\r\n    // let thickness = this.thickness;\r\n\r\n    // console.log(\"Color, thickness\", color, thickness);\r\n    // console.log(pointArray.length, pointArray[0]);\r\n    const pathOption = {\r\n      objectCaching: false,\r\n\r\n      color: color,\r\n      stroke: color,\r\n      fill: color,\r\n      opacity: 1,\r\n      // strokeWidth: 10,\r\n      originX: 'left',\r\n      originY: 'top',\r\n      selectable: false,\r\n\r\n      objType: STROKE_OBJECT_ID,    // neostroke\r\n      // selectable: false,\r\n      //  hasRotatingPoint: false\r\n\r\n      // strokeWidth: 2,\r\n      // strokeWidth: tempThickness;\r\n      // strokeLineCap: \"round\",\r\n\r\n      // selectable: false,\r\n      // evented: true,\r\n\r\n      // base_scale: scale,\r\n    };\r\n\r\n    let strokeThickness = this.base_scale * thickness;\r\n    // console.log(strokeThickness);\r\n    // if ( strokeThickness < 0.5 ) strokeThickness = 0.5;\r\n    let pathData = drawPath(pointArray, strokeThickness);\r\n    // let pathData = drawLinePath(pointArray);\r\n    let path = new fabric.Path(pathData, pathOption);\r\n\r\n    return path;\r\n  };\r\n\r\n  // Event\r\n  setSeekHandeler = (handler) => {\r\n    this.seekCallback = handler;\r\n  };\r\n\r\n  eventHandler = (event) => {\r\n    // console.log(event, event.target.time)\r\n    this.seekCallback(event.target.time + 1);\r\n  };\r\n\r\n  /**\r\n   * time tick\r\n   */\r\n  onTick = () => {\r\n    let delta_time = timeTickDuration * this.replaySpeed;\r\n    let playTime = this.playingTime + delta_time;\r\n\r\n    // if (Math.floor(playTime / 1000) !== Math.floor(this.playingTime / 1000))\r\n    this.playingTimeHandler(this.playingTime);\r\n\r\n    this.playingTime = playTime;\r\n\r\n    let rel_endtime = this.endTime_whole - this.startTime_whole;\r\n    if (this.autoStop) {\r\n      // relative time\r\n      rel_endtime = this.rel_auto_play_endtime;\r\n    }\r\n\r\n    if (playTime > rel_endtime + delta_time) {\r\n      this.drawPageAtTime(playTime);\r\n      this.playStateHandler(PLAYSTATE.pause);\r\n    }\r\n  };\r\n\r\n  replayStart = () => {\r\n    if (this.timer) {\r\n      clearInterval(this.timer);\r\n      this.timer = null;\r\n    }\r\n\r\n    // 자동 멈춤 지점을 설정\r\n    this.rel_auto_play_endtime = this.endTime_page - this.startTime_whole;\r\n\r\n    this.timer = setInterval(this.onTick, timeTickDuration);\r\n    this.playingTimeHandler(this.playingTime);\r\n  };\r\n\r\n\r\n\r\n\r\n  /**\r\n   * stroke replay by kitty\r\n   * @param {number=} playingTime - millisecond from 0 (relative to whole strokes)\r\n   */\r\n  drawPageAtTime = (playingTime) => {\r\n    if (playingTime === -1) {\r\n      playingTime = Number.MAX_VALUE;\r\n\r\n      this.pathArray.forEach((path) => {\r\n        path.fill = path.color;\r\n        path.stroke = path.color;\r\n      });\r\n    }\r\n    else {\r\n      let time_base = this.startTime_whole;\r\n\r\n      let time_abs = playingTime + time_base;\r\n      this.pathArray.forEach((path) => {\r\n\r\n        if (time_abs <= path.startTime) {\r\n          path.fill = DISABLED_STROKE_COLOR;\r\n          path.stroke = DISABLED_STROKE_COLOR;\r\n        }\r\n        // else if (path.startTime < time_abs && time_abs <= path.endTime) {\r\n        //   path.fill = INVISIBLE_STROKE_COLOR;\r\n        //   path.stroke = INVISIBLE_STROKE_COLOR;\r\n\r\n        //   this.drawIncompletedPath(path, time_abs);\r\n        // } \r\n        else {\r\n          path.fill = path.color;\r\n          path.stroke = path.color;\r\n        }\r\n      });\r\n\r\n      if (this.pathArray.length > 0) {\r\n        let endTime = this.pathArray[this.pathArray.length - 1].endTime;\r\n        // 모든 획이 다 그려져야 하는 상황이면 temp 획을 안보이게 한다.\r\n        if (endTime && endTime < time_abs) {\r\n          this.canvas.remove(this.tempPath);\r\n          this.tempPath = null;\r\n\r\n          this.canvas.remove(this.tempPath_disabled);\r\n          this.tempPath_disabled = null;\r\n\r\n          // 확인 사살, 맨 마지막 획만\r\n          let path = this.pathArray[this.pathArray.length - 1];\r\n          path.fill = path.color;\r\n          path.stroke = path.color;\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n\r\n    this.canvas.requestRenderAll();\r\n  };\r\n\r\n  // /**\r\n  //  *\r\n  //  * @param {fabric.Path} path - path to draw\r\n  //  * @param {number} t - playTime in real-time (unixtime ms)\r\n  //  */\r\n  // drawIncompletedPath = (path, t) => {\r\n  //   let dots = path.dots;\r\n  //   let scale = path.base_scale;\r\n\r\n  //   // console.log(\"dot Count\", dots.length);\r\n  //   let rect = this.rect;\r\n  //   // console.log(rect);\r\n\r\n  //   let pointArray = [];\r\n  //   let pointArray_disabled = [];\r\n\r\n  //   let last_completed_dot = null;\r\n\r\n  //   dots.forEach((dot) => {\r\n  //     if (dot.time <= t) {\r\n  //       let pt = this.getXYPfromDot(dot, rect, scale);\r\n  //       if (pt) pointArray.push(pt);\r\n  //       last_completed_dot = dot;\r\n  //     } else {\r\n  //       let pt = this.getXYPfromDot(dot, rect, scale);\r\n\r\n  //       if (last_completed_dot) {\r\n  //         let pt_last = this.getXYPfromDot(last_completed_dot, rect, scale);\r\n  //         if (pt_last) pointArray_disabled.push(pt_last);\r\n  //         last_completed_dot = null;\r\n  //       }\r\n\r\n  //       if (pt) pointArray_disabled.push(pt);\r\n  //     }\r\n  //   });\r\n\r\n  //   let path_new = this.createRealTimePathObject(\r\n  //     pointArray,\r\n  //     path.color,\r\n  //     this.thickness\r\n  //   );\r\n  //   let path_new_disabled = this.createRealTimePathObject(\r\n  //     pointArray_disabled,\r\n  //     INCOMPLETE_STROKE_COLOR,\r\n  //     this.thickness\r\n  //   );\r\n\r\n  //   if (this.canvas) {\r\n  //     this.canvas.add(path_new);\r\n  //     this.canvas.remove(this.tempPath);\r\n  //     this.tempPath = path_new;\r\n\r\n  //     this.canvas.add(path_new_disabled);\r\n  //     this.canvas.remove(this.tempPath_disabled);\r\n  //     this.tempPath_disabled = path_new_disabled;\r\n  //     // console.log(\"Add Path\", path);\r\n  //   }\r\n\r\n  //   // let canvas_ktty = this.canvasRef.current;\r\n  //   // let ctx = canvas_ktty.getContext(\"2d\");\r\n  // };\r\n\r\n  // createRealTimePathObject = (pointArray, color, thickness) => {\r\n  //   // Draw Stroke\r\n\r\n  //   const pathOption = {\r\n  //     objectCaching: false,\r\n  //   };\r\n\r\n  //   pathOption.stroke = color;\r\n  //   let tempThickness = this.scaleX * thickness * 0.5;\r\n  //   pathOption.strokeWidth = tempThickness;\r\n  //   pathOption.strokeLineCap = \"round\";\r\n  //   pathOption.fill = color;\r\n  //   pathOption.selectable = false;\r\n\r\n  //   let pathData = drawPath(pointArray, this.scaleX * thickness);\r\n\r\n  //   let path_new = new fabric.Path(pathData, pathOption);\r\n  //   path_new.color = color;\r\n  //   // TODO: selectable and evented\r\n  //   path_new.selectable = false;\r\n  //   path_new.evented = true;\r\n\r\n  //   return path_new;\r\n  // };\r\n\r\n  // getXYPfromDot = (dot, rect, scale) => {\r\n  //   const scaleXY = (dot_x, dot_y, scale) => {\r\n  //     const offset = 0;\r\n\r\n  //     return {\r\n  //       x: ((dot_x - offset) * scale),\r\n  //       y: ((dot_y - offset) * scale),\r\n  //     };\r\n  //   };\r\n\r\n  //   let scaled = scaleXY(dot.x, dot.y, scale);\r\n\r\n  //   let p = dot.f;\r\n  //   let x = scaled.x - rect.x;\r\n  //   let y = scaled.y - rect.y;\r\n  //   if (\r\n  //     x > rect.width * this.scaleX ||\r\n  //     y > rect.height * this.scaleY ||\r\n  //     x < 0 ||\r\n  //     y < 0\r\n  //   ) {\r\n  //     // console.log(\"튀었음\", dot)\r\n  //     return;\r\n  //   }\r\n  //   x *= this.scaleX;\r\n  //   y *= this.scaleY;\r\n\r\n  //   return { x, y, p };\r\n  // };\r\n}\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\penstorage\\index.ts",[],"C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\utils\\JsUtils.js",["1139","1140"],"export function backingStoreRatio(context) {\r\n  const ret = (context.webkitBackingStorePixelRatio ||\r\n    context.mozBackingStorePixelRatio ||\r\n    context.msBackingStorePixelRatio ||\r\n    context.oBackingStorePixelRatio ||\r\n    context.backingStorePixelRatio || 1);\r\n\r\n  return ret;\r\n}","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\DataStructure\\NeoDot.ts",[],"C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\pencomm\\pencomm.ts",["1141","1142","1143","1144","1145","1146","1147","1148","1149","1150","1151","1152","1153","1154","1155","1156","1157","1158","1159","1160","1161","1162","1163","1164","1165","1166","1167","1168","1169"],"import { PenCommBase, ProtocolHandlerBase, deviceSelectDlg } from \"./pencomm_base\";\r\nimport { DeviceTypeEnum } from \"./pencomm_enum\";\r\nimport { PenEventEnum, makePenEvent } from \"./pencomm_event\";\r\nimport { intFromBytes, decimalToHex } from \"./pen_util_func\";\r\nimport { PEN_PACKET_START, PEN_PACKET_END } from \"./pencomm_const\";\r\nimport { NeoSmartpen } from \"..\";\r\n// import { NeoSmartpen } from \"./neosmartpen\";\r\n\r\n\r\n\r\nconst bufferArray_first = new Uint8Array(\r\n  [\r\n    PEN_PACKET_START, // start packet\r\n    // cmd (1)\r\n    0x01,\r\n\r\n    // length (2)\r\n    0x2a, 0x00,\r\n\r\n    // connection code (16)\r\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n\r\n    // app type (2)\r\n    0x00, 0x00,\r\n\r\n    // app version (16)\r\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n\r\n    // protocol version(8) 2.18\r\n    0x32, 0x2e, 0x31, 0x38, 0x00, 0x00, 0x00, 0x00,\r\n    PEN_PACKET_END,\r\n  ] // end packet\r\n);\r\n\r\n\r\n// /**\r\n//  *\r\n//  * @param {number} typeNumber - 0:pen, 1:eraser, 2:player, on 2020/10/01\r\n//  * @return {DeviceTypeEnum} - a member of DeviceTypeEnum\r\n//  */\r\n// function getPenType(typeNumber): DeviceTypeEnum {\r\n//   let result = DeviceTypeEnum.PEN;\r\n//   switch (typeNumber) {\r\n//     case 0:\r\n//       result = DeviceTypeEnum.PEN;\r\n//       break;\r\n\r\n//     case 1:\r\n//       result = DeviceTypeEnum.ERASER;\r\n//       break;\r\n\r\n//     case 2:\r\n//       result = DeviceTypeEnum.PLAYER;\r\n//       break;\r\n\r\n//     default:\r\n//       result = DeviceTypeEnum.PEN;\r\n//       console.error(`device type mismatch (not 0, 1, neither 2), Pen type from pen is ${typeNumber}`);\r\n//       break;\r\n//   }\r\n\r\n//   return result;\r\n// }\r\n\r\n\r\nexport default class PenComm extends ProtocolHandlerBase {\r\n  /** @type {BluetoothDevice} */\r\n  btDevice = null;\r\n\r\n  // device information\r\n  deviceInfo = {\r\n    /** @type {string} */\r\n    modelName: \"\", // NWP-F30 ~ NWP-F121HL\r\n\r\n    /** @type {number} */\r\n    protocolVer: 100, // 1.00 ==> 100\r\n\r\n    /** @type {DeviceTypeEnum} */\r\n    deviceType: DeviceTypeEnum.NONE,\r\n\r\n    /** @type {string} */\r\n    mac: \"00:00:00:00:00:00\",\r\n  };\r\n\r\n  isPenDown = false;\r\n\r\n  penCommBase = new PenCommBase(this);\r\n\r\n  penHandler: NeoSmartpen;\r\n\r\n  private _strokeStartTime: number;\r\n\r\n  private _currentTime: number;\r\n\r\n  /**\r\n   *\r\n   * @param {NeoSmartpen} penHandler\r\n   */\r\n  constructor(penHandler: NeoSmartpen) {\r\n    super();\r\n    this.penHandler = penHandler;\r\n    this.setTimeStamp(0);\r\n  }\r\n\r\n  private get strokeStartTime(): number {\r\n    return this._strokeStartTime;\r\n  }\r\n\r\n  private set strokeStartTime(value: number) {\r\n    this._currentTime = value;\r\n    this._strokeStartTime = value;\r\n  }\r\n\r\n  private setTimeStamp(value: number) {\r\n    this._currentTime = value;\r\n    this._strokeStartTime = value;\r\n  }\r\n\r\n\r\n  public get currentTime(): number {\r\n    return this._currentTime;\r\n  }\r\n  private accTime = (delta: number) => {\r\n    this._currentTime = this._currentTime + delta;\r\n  }\r\n\r\n\r\n  getMac = (): string => {\r\n    return this.deviceInfo.mac;\r\n  }\r\n\r\n  /**\r\n   * @return {string}\r\n   */\r\n\r\n  getModelName = () => {\r\n    return this.deviceInfo.modelName;\r\n  }\r\n\r\n  /**\r\n   * @return {number}\r\n   */\r\n  getProtocolVer = () => {\r\n    return this.deviceInfo.protocolVer;\r\n  }\r\n\r\n\r\n  /**\r\n   * @public\r\n   * @return {BluetoothDevice}\r\n   */\r\n  getBtDevice = () => {\r\n    return this.btDevice;\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param {BluetoothDevice} btDevice\r\n   */\r\n  connect = (btDevice) => {\r\n    this.btDevice = btDevice;\r\n    this.penCommBase.connect(btDevice, this.onPhysicallyConnected);\r\n  }\r\n\r\n  write = (buf: Uint8Array): Promise<void> => {\r\n    try {\r\n      return this.penCommBase.write(buf);\r\n    }\r\n    catch (e) {\r\n      throw e;\r\n    }\r\n  }\r\n\r\n\r\n  onDisconnected = () => {\r\n    const e = makePenEvent(this.deviceInfo.deviceType, PenEventEnum.ON_DISCONNECTED, { timeStamp: this.currentTime });\r\n\r\n    this.penHandler.onDisconnected(e);\r\n  }\r\n\r\n\r\n  // PROCESS A UNIT PACKET GOTTEN FROm PEN\r\n  //\r\n  // unit packet should be start with 0xC0 and end by 0xC1\r\n  processUnitPacket = (unit_packet: Uint8Array) => {\r\n    // const this = this;\r\n    const cmd = unit_packet[1];\r\n    // console.log(`  processUnitPacket: 0x${cmd.toString(16)}  size(${unit_packet.length})`);\r\n    switch (cmd) {\r\n\r\n      // Pen up/down #1\r\n      case 0x63:\r\n        this.process_63_penupdown_v100(unit_packet);\r\n        break;\r\n\r\n      case 0x64:\r\n        this.process_64_pageinfo_v100(unit_packet);\r\n        break;\r\n\r\n      case 0x65:\r\n        this.process_65_penmove_v100(unit_packet);\r\n        break;\r\n\r\n      case 0x66:\r\n        this.process_66_penmove_simple_v200(unit_packet);\r\n        break;\r\n\r\n      case 0x68:\r\n        this.process_68_ndac_error_v100(unit_packet);\r\n        break;\r\n\r\n\r\n      case 0x69:\r\n        this.process_69_pendown_v212(unit_packet);\r\n        break;\r\n\r\n      case 0x6a:\r\n        this.process_6a_penup_v212(unit_packet);\r\n        break;\r\n\r\n      case 0x6b:\r\n        this.process_6b_pageinfo_v212(unit_packet);\r\n        break;\r\n\r\n      case 0x6c:\r\n        this.process_6c_penmove_v212(unit_packet);\r\n        break;\r\n\r\n      case 0x6f:\r\n        this.process_6f_hovermove_v218(unit_packet);\r\n        break;\r\n\r\n      case 0x6d:\r\n        this.process_6d_ndacerror_v212(unit_packet);\r\n        break;\r\n\r\n\r\n      case 0x81:\r\n        this.process_81_device_first_info(unit_packet);\r\n        break;\r\n\r\n      case 0x82:\r\n        this.process_82_pw_result(unit_packet);\r\n        break;\r\n\r\n      case 0x84:\r\n        this.process_84_device_status(unit_packet);\r\n        break;\r\n\r\n      case 0x85:\r\n        this.process_85_config_response(unit_packet);\r\n        break;\r\n\r\n\r\n      case 0x91:\r\n        this.process_91_realtime_mode_response(unit_packet);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  onPhysicallyConnected = () => {\r\n    console.log(\"BT protocol #1 ->\");\r\n    console.log(\"4. send first packet\");\r\n\r\n    // CMD 0x01\r\n    this.write(bufferArray_first); // request Pen information\r\n  }\r\n\r\n  /**\r\n   * process response packet from cmd 0x01\r\n   * 디바이스이름, 펌웨어버전, 회사 이름, 펜 종류, 필압센서 종류 등의 reposnse\r\n   * \r\n   * @param buf \r\n   */\r\n  process_81_device_first_info = (buf: Uint8Array) => {\r\n    /**\r\n     *  0:  1 - header\r\n     *  1:  1 - cmd (0x81)\r\n     *  2:  1 - error code\r\n     *  3:  2 - length\r\n     *\r\n     *  5: 16 - device name\r\n     * 21: 16 - firmware version\r\n     * 37:  8 - protocol version\r\n     * 45: 16 - company name\r\n     * 61:  2 - device type (0,:pen, 2:eraser, 3:player)\r\n     * 63:  6 - MAC address\r\n     * 69:  1 - FS (0:FSR, 1:FSC, 2:up/down, 3:FSIR)\r\n     * 70:  4 - device color type id\r\n     */\r\n\r\n    const Errcode = buf[2];\r\n\r\n    const modelNameArry = []; //NWP-F30 ~ NWP-F121HL\r\n    for (let i = 5; i < 16; i++) {\r\n      if (buf[i] > 0) modelNameArry.push(buf[i] & 0xff);\r\n    }\r\n    const modelNameString = String.fromCharCode.apply(null, modelNameArry);\r\n\r\n    const protocolVer = (buf[37] - 0x30) * 100 + (buf[39] - 0x30) * 10 + (buf[40] - 0x30);\r\n    console.log(`    BT protocol #1 <- connection result: ${Errcode} ${protocolVer}`);\r\n\r\n    this.deviceInfo.modelName = modelNameString;\r\n    this.deviceInfo.protocolVer = protocolVer;\r\n    // this.deviceInfo.mac = intFromBytes(buf, 63, 6).toString(16).toUpperCase();\r\n    this.deviceInfo.mac = decimalToHex(buf[63], 2) + \":\" +\r\n      decimalToHex(buf[64], 2) + \":\" +\r\n      decimalToHex(buf[65], 2) + \":\" +\r\n      decimalToHex(buf[66], 2) + \":\" +\r\n      decimalToHex(buf[67], 2) + \":\" +\r\n      decimalToHex(buf[68], 2);\r\n\r\n    //\r\n    const typeNumber = intFromBytes(buf, 61, 2);\r\n\r\n    function getPenType_on_81(number) {\r\n      let result = DeviceTypeEnum.PEN;\r\n      switch (number) {\r\n        case 0:\r\n        case 1:\r\n          result = DeviceTypeEnum.PEN;\r\n          break;\r\n\r\n        case 2:\r\n          result = DeviceTypeEnum.ERASER;\r\n          break;\r\n\r\n        case 3:\r\n          result = DeviceTypeEnum.FSIR;\r\n          break;\r\n\r\n        default:\r\n          result = DeviceTypeEnum.PEN;\r\n          console.error(`device type mismatch (not 0, 1, neither 2), Pen type from pen is ${typeNumber}`);\r\n          break;\r\n      }\r\n\r\n      return result;\r\n    }\r\n    this.deviceInfo.deviceType = getPenType_on_81(typeNumber);\r\n\r\n    // t.deviceType = getPenType(typeNumber);\r\n\r\n    // CMD 0x04, 펜 설정을 확인하는 패킷을 보낸다. request pen status\r\n    const bufferArray = new Uint8Array([0xc0, 0x04, 0x00, 0x00, 0xc1]);\r\n    console.log(`    BT protocol #2 -> request pen status`);\r\n\r\n    this.write(bufferArray);\r\n  }\r\n\r\n\r\n  /**\r\n   * 펜 설정 확인의 response (CMD 0x04의 결과)\r\n   * @param buf \r\n   */\r\n  process_84_device_status = (buf: Uint8Array) => {\r\n    /**\r\n     *  0:  1 - header\r\n     *\r\n     *  1:  1 - cmd (0x82)\r\n     *  2:  1 - error code\r\n     *  3:  2 - length\r\n     *\r\n     *  5:  1 - locked or not (0:no password, 1:password locked)\r\n     *  6:  1 - retry limit\r\n     *  7:  1 - current retry count\r\n     *  8:  8 - uint64, millisecond tick from 1970/01/01\r\n     * 16:  2 - auto power off time (unit: minutes)\r\n     * 18:  2 - maximum force (< 0x3ff)\r\n     * 20:  1 - storage capacity % (100%)\r\n     * 21:  1 - pencap auto on/off (0:false, 1:true)\r\n     * 22:  1 - auto power on\r\n     * 23:  1 - beep on\r\n     * 24:  1 - hover on\r\n     * 25:  1 - battery status (MSB:in charging, LSB 7bits: 100%)\r\n     * 26:  1 - offline stroke store or not\r\n     * 27:  1 - pressure sensor step (0~4, 0 is most sensitive)\r\n     * 28:  1 - usb mode (0:disk, 1:bulk)\r\n     * 29:  1 - down sampling (0:off, 1:on)\r\n     * 30: 16 - BT model name\r\n     * 46:  1 - data transfer mode (0:event, 1:requset/response, from 2.10 deleted)\r\n     * 47:  1 - ndac error code offline store or not (0:false, 1:true)\r\n     * 48: 21 - reserverd\r\n     */\r\n\r\n    // } else if ( buf[0] == PEN_PACKET_START && buf[1] == 0x84 ) {\r\n    // response\r\n    const isPwLocked = buf[5];\r\n    const penMemory = buf[20];\r\n    const penBattery = buf[25];\r\n    console.log(`    BT protocol #2 <- IsLock? ${isPwLocked} memory:${penMemory}%, battery:${penBattery}%`);\r\n\r\n    let bufferArray;\r\n    if (isPwLocked === 1) {\r\n\r\n      const e = makePenEvent(this.deviceInfo.deviceType, PenEventEnum.PASSWORD_REQUIRED, { timeStamp: this.currentTime });\r\n      this.penHandler.onPasscodeRequired(e);\r\n      // const passcode = prompt(\"please enter passcode\");\r\n\r\n      // // input passcode\r\n      // console.log(\"    BT protocol #3 -> input passcode \");\r\n      // bufferArray = new Uint8Array([0xc0, 0x02, 0x10, 0x00, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xc1]);\r\n\r\n      // bufferArray[4] = passcode.charCodeAt(0);\r\n      // bufferArray[5] = passcode.charCodeAt(1);\r\n      // bufferArray[6] = passcode.charCodeAt(2);\r\n      // bufferArray[7] = passcode.charCodeAt(3);\r\n      // console.log(\"    passcode1 :\" + bufferArray[4]);\r\n      // console.log(\"    passcode2 :\" + bufferArray[5]);\r\n      // console.log(\"    passcode3 :\" + bufferArray[6]);\r\n      // console.log(\"    passcode4 :\" + bufferArray[7]);\r\n\r\n      // this.write(bufferArray);\r\n      // // g_btWriteSocket.writeValue(bufferArray);\r\n    } // unlocked\r\n    else {\r\n      // request online\r\n      console.log(\"    BT protocol #4 -> request online data\");\r\n      bufferArray = new Uint8Array([0xc0, 0x11, 0x02, 0x00, 0xff, 0xff, 0xc1]);\r\n      // g_btWriteSocket.writeValue(bufferArray);\r\n      this.write(bufferArray);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * CMD 0x02\r\n   * @param passcode \r\n   */\r\n  sendPasscode(passcode: string) {\r\n\r\n    console.log(\"    BT protocol #3 -> input passcode \");\r\n    const bufferArray = new Uint8Array([0xc0, 0x02, 0x10, 0x00, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xc1]);\r\n\r\n    bufferArray[4] = passcode.charCodeAt(0);\r\n    bufferArray[5] = passcode.charCodeAt(1);\r\n    bufferArray[6] = passcode.charCodeAt(2);\r\n    bufferArray[7] = passcode.charCodeAt(3);\r\n\r\n    // g_btWriteSocket.writeValue(bufferArray);\r\n    this.write(bufferArray);\r\n  }\r\n\r\n\r\n  /**\r\n   * 패스워드 송신 후의 reponse\r\n   * @param buf \r\n   */\r\n  process_82_pw_result = (buf: Uint8Array) => {\r\n    /**\r\n     *  0:  1 - header\r\n     *  1:  1 - cmd (0x81)\r\n     *  2:  1 - error code\r\n     *  3:  2 - length\r\n     *  5:  1 - password response (0:pw needed, 1:success(or not needed), 2:pen was reset, 3:system error)\r\n     *  6:  1 - retry limit\r\n     *  7:  1 - current retry count\r\n     */\r\n\r\n    // response check passcode\r\n    const pwCheckResult = buf[5];\r\n\r\n    /** @type {number} */\r\n    const retryCount = buf[6];\r\n    const maxCount = buf[7];\r\n\r\n    if (pwCheckResult === 1) {\r\n      // passcode OK\r\n      console.log(\"    BT protocol #3 <- passcode none ==> OK \");\r\n      console.log(\"    BT protocol #4 -> request online data\");\r\n\r\n      // request online\r\n      const bufferArray = new Uint8Array([0xc0, 0x11, 0x02, 0x00, 0xff, 0xff, 0xc1]);\r\n      // g_btWriteSocket.writeValue(bufferArray);\r\n      this.write(bufferArray);\r\n    } else {\r\n      console.log(`    BT protocol #3 <- passcode NG ${retryCount}/${maxCount}`);\r\n      // retry input passcode\r\n      //alert(\"wrong passcode\");\r\n      const e = makePenEvent(this.deviceInfo.deviceType, PenEventEnum.PASSWORD_REQUIRED, { retryCount, timeStamp: this.currentTime });\r\n      this.penHandler.onPasscodeRequired(e);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Set transfer mode, by 5th byte\r\n   * offline store mode (0:off, 1:offline while realtime available, 100:both of realtime and offline)\r\n   * @param val \r\n   */\r\n  setTransferMode(val: number) {\r\n    /**\r\n     *  0:  1 - header\r\n     *  1:  1 - cmd (0x05)\r\n     *  2:  2 - length (0x02)\r\n     *  4:  1 - attribute type (0x07)\r\n     *  5:  1 - offline store mode (0:off, 1:offline while realtime available, 100:both of realtime and offline)\r\n     */\r\n\r\n    if (val !== 0 && val !== 1 && val !== 100) return;\r\n\r\n    const bufferArray = new Uint8Array([0xc0, 0x05, 0x02, 0x00, 0x07, val, 0xc1]);\r\n    // g_btWriteSocket.writeValue(bufferArray);\r\n    this.write(bufferArray);\r\n  }\r\n\r\n\r\n  /**\r\n   * hover on/off (0:hover mode off, 1:hover mode on)\r\n   * @param val \r\n   */\r\n  setHoverMode(val: number) {\r\n    /**\r\n     *  0:  1 - header\r\n     *  1:  1 - cmd (0x05)\r\n     *  2:  2 - length (0x02)\r\n     *  4:  1 - attribute type (0x06)\r\n     *  5:  1 - hover on/off (0:hover mode off, 1:hover mode on)\r\n     */\r\n\r\n    val &= 0x01;\r\n    const bufferArray = new Uint8Array([0xc0, 0x05, 0x02, 0x00, 0x06, val, 0xc1]);\r\n    // g_btWriteSocket.writeValue(bufferArray);\r\n    this.write(bufferArray);\r\n  }\r\n\r\n\r\n  /**\r\n   * pen up/down, protocol version 1.00\r\n   * @param buf \r\n   */\r\n  process_63_penupdown_v100 = (buf: Uint8Array) => {\r\n    /**\r\n     *  0:  1 - header\r\n     *\r\n     *  1:  1 - cmd (0x63)\r\n     *  2:  2 - length\r\n     *\r\n     *  4:  1 - up/down (0:down, 1:up)\r\n     *  5:  8 - timestamp\r\n     * 13:  1 - pen tip type (0:normal, 1:eraser)\r\n     * 14:  4 - color (argb)\r\n    */\r\n\r\n    const isPenDown = buf[4] === 0;\r\n    const penTipMode = buf[13];\r\n    const penId = this.getMac();\r\n    const timeStamp = intFromBytes(buf, 5, 8);   // ARGB\r\n    this.setTimeStamp(timeStamp);\r\n\r\n    if (isPenDown) {\r\n      console.log(\"------------ Pen down --------------\");\r\n      this.isPenDown = true;\r\n\r\n      const event = makePenEvent(this.deviceInfo.deviceType, PenEventEnum.PEN_DOWN, { penTipMode, timeStamp, penId });\r\n      this.penHandler.onPenDown(event);\r\n\r\n      return;\r\n    } else {\r\n      console.log(\"^^^^^^^^^^^^^^ pen up ^^^^^^^^^^^^^\");\r\n      this.isPenDown = false;\r\n\r\n      const event = makePenEvent(this.deviceInfo.deviceType, PenEventEnum.PEN_UP, { penTipMode, timeStamp });\r\n      this.penHandler.onPenUp(event);\r\n\r\n      return;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * page information,\r\n   * pen down 직후, pen up 직후에 전송되어 옴\r\n   * @param buf \r\n   */\r\n  process_64_pageinfo_v100 = (buf: Uint8Array) => {\r\n    /**\r\n     *  0:  1 - header\r\n     *\r\n     *  1:  1 - cmd (0x64)\r\n     *  2:  2 - length\r\n     *\r\n     *  4:  3 - owner\r\n     *  7:  1 - section\r\n     *  8:  4 - note id\r\n     * 12:  4 - page id\r\n    */\r\n\r\n    const section = buf[7];\r\n    const owner = intFromBytes(buf, 4, 3);\r\n    const book = intFromBytes(buf, 8, 4);\r\n    const page = intFromBytes(buf, 12, 4);\r\n    //console.log('owner:' + ownerId + ', book:' + bookId + ', page:' + pageId);\r\n\r\n    var eventMode = PenEventEnum.PAGE_INFO;\r\n    if (!this.isPenDown) {\r\n      eventMode = PenEventEnum.PAGE_INFO_HOVER;\r\n    }\r\n\r\n    const e = makePenEvent(this.deviceInfo.deviceType, eventMode, { section, owner, book, page, timeStamp: this.currentTime });\r\n\r\n    // console.log(\"    #1 INFO\");\r\n    const isHover = eventMode === PenEventEnum.PAGE_INFO_HOVER;\r\n\r\n    // console.log( \"0x64\");\r\n    this.penHandler.onPageInfo(e, isHover);\r\n\r\n    return;\r\n  }\r\n\r\n\r\n  /**\r\n   * Pen Move, protocol version 1.00\r\n   * @param buf \r\n   */\r\n  private process_65_penmove_v100 = (buf: Uint8Array) => {\r\n    /**\r\n     *  0:  1 - header\r\n     *\r\n     *  1:  1 - cmd (0x65)\r\n     *  2:  2 - length\r\n     *  4:  1 - time diff\r\n     *\r\n     *  5:  2 - force\r\n     *  7:  2 - x\r\n     *  9:  2 - y\r\n     * 11:  1 - float x\r\n     * 12:  1 - float y\r\n     * 13:  1 - x tilt\r\n     * 14:  1 - y tilt\r\n     * 15:  2 - twist (0~180, 360 degree => 180)\r\n    */\r\n\r\n    const timediff = buf[4];\r\n    this.accTime(timediff);\r\n\r\n    const force = intFromBytes(buf, 5, 2);\r\n    const dotX = intFromBytes(buf, 7, 2);\r\n    const dotY = intFromBytes(buf, 9, 2);\r\n    const dotFx = intFromBytes(buf, 11, 1);\r\n    const dotFy = intFromBytes(buf, 12, 1);\r\n\r\n    const x = dotX + dotFx / 100;\r\n    const y = dotY + dotFy / 100;\r\n\r\n    const e = makePenEvent(this.deviceInfo.deviceType, PenEventEnum.PEN_MOVE, {  force, x, y, timediff, timeStamp: this.currentTime });\r\n    // e.force = force;\r\n    // e.x = x;\r\n    // e.y = y;\r\n    // e.timediff = timediff;\r\n\r\n    console.log(`    #1 MOVE ( ${x}, ${y} )`);\r\n    this.penHandler.onPenMove(e);\r\n\r\n    return;\r\n  }\r\n\r\n\r\n  /**\r\n   * pen move, for slow connection, protocol version 2.00\r\n   * @param buf \r\n   */\r\n  private process_66_penmove_simple_v200 = (buf: Uint8Array) => {\r\n    /**\r\n     *  0:  1 - header\r\n     *\r\n     *  1:  1 - cmd (0x66)\r\n     *  2:  2 - length\r\n     *  4:  1 - time diff\r\n     *\r\n     *  5:  2 - x\r\n     *  7:  2 - y\r\n     *  9:  1 - float x\r\n     * 10:  1 - float y\r\n    */\r\n\r\n    const timediff = buf[4];\r\n    this.accTime(timediff);\r\n\r\n    const force = 100;\r\n    const dotX = intFromBytes(buf, 5, 2);\r\n    const dotY = intFromBytes(buf, 7, 2);\r\n    const dotFx = intFromBytes(buf, 9, 1);\r\n    const dotFy = intFromBytes(buf, 10, 1);\r\n\r\n    const x = dotX + dotFx / 100;\r\n    const y = dotY + dotFy / 100;\r\n\r\n    const e = makePenEvent(this.deviceInfo.deviceType, PenEventEnum.PEN_MOVE, { force, x, y, timediff, timeStamp: this.currentTime });\r\n    // e.force = force;\r\n    // e.x = x;\r\n    // e.y = y;\r\n    // e.timediff = timediff;\r\n\r\n    console.log(`    #2 MOVE ( ${x}, ${y} )`);\r\n    this.penHandler.onPenMove(e);\r\n\r\n    return;\r\n  }\r\n\r\n\r\n  /**\r\n   * On NDAC Error, protocol v1.00\r\n   * @param buf \r\n   */\r\n  process_68_ndac_error_v100 = (buf: Uint8Array) => {\r\n    /**\r\n     *  0:  1 - header\r\n     *\r\n     *  1:  1 - cmd (0x68)\r\n     *  2:  2 - length\r\n     *  4:  1 - time diff\r\n     *\r\n     *  5:  2 - force\r\n     *  7:  1 - image brightness\r\n     *  8:  1 - exposure time\r\n     *  9:  1 - NDAC process time\r\n     * 10:  2 - label count\r\n     * 12:  1 - ndac error code\r\n    */\r\n\r\n    // const this = this;\r\n    const timediff = buf[4];\r\n    this.accTime(timediff);\r\n\r\n    const force = intFromBytes(buf, 5, 2);\r\n\r\n    const brightness = buf[7];\r\n    const exposureTime = buf[8];\r\n    const ndacProcessTime = buf[9];\r\n\r\n    const labelCount = intFromBytes(buf, 10, 2);\r\n    const ndacErrorCode = buf[12];\r\n    const ndacClassType = buf[14];\r\n    const penId = this.getMac();\r\n\r\n    const e = makePenEvent(this.deviceInfo.deviceType, PenEventEnum.ERROR,\r\n      {\r\n        timeStamp: this.currentTime,\r\n        timediff,\r\n        force,\r\n        brightness,\r\n        exposureTime,\r\n        ndacProcessTime,\r\n        labelCount,\r\n        ndacErrorCode,\r\n        ndacClassType,\r\n        penId\r\n      });\r\n    // this.isPenDown = true;\r\n\r\n    console.log(\"    PEN DOWN\");\r\n    this.penHandler.onPenDown(e);\r\n  }\r\n\r\n\r\n  /**\r\n   * pen down, v2.12\r\n   * @param buf \r\n   */\r\n  process_69_pendown_v212 = (buf: Uint8Array) => {\r\n    /**\r\n     *  0:  1 - header\r\n     *\r\n     *  1:  1 - cmd (0x69)\r\n     *  2:  2 - length\r\n     *  4:  1 - event count\r\n     *\r\n     *  5:  8 - timeStamp\r\n     *  13:  1 - pen tip type (0:normal, 1:eraser)\r\n     *  14:  4 - pen tip color (argb)\r\n    */\r\n    // console.log(\"    PEN DOWN\");\r\n\r\n    const timeStamp = intFromBytes(buf, 5, 8);   // ARGB\r\n    this.setTimeStamp(timeStamp);\r\n\r\n    const penTipMode = buf[13];\r\n    const color = intFromBytes(buf, 14, 4);   // ARGB\r\n    const penId = this.getMac();\r\n\r\n    this.isPenDown = true;\r\n\r\n    const e = makePenEvent(this.deviceInfo.deviceType, PenEventEnum.PEN_DOWN, { penTipMode, color, timeStamp, penId });\r\n    this.penHandler.onPenDown(e);\r\n  }\r\n\r\n  /**\r\n   * pen up, v2.12\r\n   * @param buf \r\n   */\r\n  process_6a_penup_v212 = (buf: Uint8Array) => {\r\n    /**\r\n     *  0:  1 - header\r\n     *\r\n     *  1:  1 - cmd (0x6A)\r\n     *  2:  2 - length\r\n     *  4:  1 - event count\r\n     *\r\n     *  5:  8 - timestamp\r\n     *\r\n     * 13:  2 - dot count (down-up 사이에 BT로 전송한 dot code 개수)\r\n     * 15:  2 - total image count (down-up 사이에 촬영된 이미지 개수)\r\n     * 17:  2 - proc image count (처리한 이미지 개수)\r\n     * 19:  2 - success image count (처리에 성공한 이미지 개수)\r\n     * 21:  2 - valid image count (밝기 등으로 유효한 이미지 개수)\r\n    */\r\n    // console.log(\"    PEN UP\");\r\n\r\n    const timeStamp = intFromBytes(buf, 5, 8);   // ARGB\r\n    this.setTimeStamp(timeStamp);\r\n\r\n    // const dotCount = intFromBytes(buf, 13, 2);\r\n    const totalImageCount = intFromBytes(buf, 15, 2);\r\n    // const procImageCount = intFromBytes(buf, 17, 2);\r\n    const successImageCount = intFromBytes(buf, 19, 2);\r\n    const validImageCount = intFromBytes(buf, 21, 2);\r\n\r\n    // console.log(`totalImageCount: ${totalImageCount} `);\r\n    // console.log(`procImageCount: ${procImageCount} `);\r\n    // console.log(`successImageCount: ${successImageCount} `);\r\n    // console.log(`validImageCount: ${validImageCount} `);\r\n\r\n    const successRate_ndac = successImageCount / totalImageCount;\r\n    const successRate_optical = validImageCount / totalImageCount;\r\n\r\n    this.isPenDown = false;\r\n\r\n    const e = makePenEvent(this.deviceInfo.deviceType, PenEventEnum.PEN_UP, { successRate_ndac, successRate_optical, timeStamp });\r\n    this.penHandler.onPenUp(e);\r\n  }\r\n\r\n  /**\r\n   * page info packet, v2.12\r\n   * @param buf \r\n   */\r\n  process_6b_pageinfo_v212 = (buf: Uint8Array) => {\r\n    /**\r\n     *  0:  1 - header\r\n     *\r\n     *  1:  1 - cmd (0x6B)\r\n     *  2:  2 - length\r\n     *  4:  1 - event count\r\n     *\r\n     *  5:  3 - owner\r\n     *  8:  1 - section\r\n     *  9:  4 - book\r\n     * 13:  4 - page\r\n    */\r\n\r\n    const owner = intFromBytes(buf, 5, 3);\r\n    const section = intFromBytes(buf, 8, 1);\r\n    const book = intFromBytes(buf, 9, 4);\r\n    const page = intFromBytes(buf, 13, 4);\r\n\r\n    var eventMode = PenEventEnum.PAGE_INFO;\r\n    if (!this.isPenDown) {\r\n      eventMode = PenEventEnum.PAGE_INFO_HOVER;\r\n    }\r\n\r\n    const e = makePenEvent(this.deviceInfo.deviceType, eventMode, { section, owner, book, page, timeStamp: this.currentTime });\r\n    const isHover = eventMode === PenEventEnum.PAGE_INFO_HOVER;\r\n\r\n    // console.log(\"0x6b\");\r\n\r\n    // console.log(`    PEN INFO, page address: ${o}.${b}.${p} ${isHover ? \"HOVER\" : \"PEN DOWN\"} `);\r\n    this.penHandler.onPageInfo(e, isHover);\r\n  }\r\n\r\n\r\n  /**\r\n   * pen move, v2.12\r\n   * @param buf \r\n   */\r\n  process_6c_penmove_v212 = (buf: Uint8Array) => {\r\n    /**\r\n     *  0:  1 - header\r\n     *\r\n     *  1:  1 - cmd (0x6C)\r\n     *  2:  2 - length\r\n     *  4:  1 - event count\r\n     *  5:  1 - delta time\r\n     *\r\n     *  6:  2 - force\r\n     *  8:  2 - x\r\n     * 10:  2 - y\r\n     * 12:  1 - float x\r\n     * 13:  1 - float y\r\n     *\r\n     * 14:  1 - x tilt\r\n     * 15:  1 - y tilt\r\n     * 16:  2 - twist\r\n    */\r\n    // pen down moving (or hover moving, in firmware <2.18 )\r\n    const timediff = buf[5];\r\n    this.accTime(timediff);\r\n\r\n    const force = intFromBytes(buf, 6, 2);\r\n    const dotX = intFromBytes(buf, 8, 2);\r\n    const dotY = intFromBytes(buf, 10, 2);\r\n    const dotFx = intFromBytes(buf, 12, 1);\r\n    const dotFy = intFromBytes(buf, 13, 1);\r\n\r\n\r\n    const x = dotX + dotFx / 100;\r\n    const y = dotY + dotFy / 100;\r\n    const e = makePenEvent(this.deviceInfo.deviceType, PenEventEnum.PEN_MOVE, { x, y, force, timediff, timeStamp: this.currentTime });\r\n    this.penHandler.onPenMove(e);\r\n  }\r\n\r\n\r\n  /**\r\n   * pen dot hover, v2.18\r\n   * @param buf \r\n   */\r\n  process_6f_hovermove_v218 = (buf: Uint8Array) => {\r\n    /**\r\n     *  0:  1 - header\r\n     *\r\n     *  1:  1 - cmd (0x6F)\r\n     *  2:  2 - length\r\n     *  4:  1 - delta time\r\n     *\r\n     *  8:  2 - x\r\n     * 10:  2 - y\r\n     * 12:  1 - float x\r\n     * 13:  1 - float y\r\n    */\r\n\r\n    const timediff = buf[4];\r\n    this.accTime(timediff);\r\n\r\n    const force = 0;\r\n    const dotX = intFromBytes(buf, 5, 2);\r\n    const dotY = intFromBytes(buf, 7, 2);\r\n    const dotFx = intFromBytes(buf, 9, 1);\r\n    const dotFy = intFromBytes(buf, 10, 1);\r\n\r\n    const x = dotX + dotFx / 100;\r\n    const y = dotY + dotFy / 100;\r\n    const e = makePenEvent(DeviceTypeEnum.PEN, PenEventEnum.PEN_MOVE_HOVER, { x, y, force, timediff, timeStamp: this.currentTime });\r\n\r\n    this.penHandler.onHoverMove(e);\r\n  }\r\n\r\n  /**\r\n   * NDAC Error, v2.12\r\n   * @param buf \r\n   */\r\n  process_6d_ndacerror_v212 = (buf: Uint8Array) => {\r\n    /**\r\n     *  0:  1 - header\r\n     *\r\n     *  1:  1 - cmd (0x6D)\r\n     *  2:  2 - length\r\n     *  4:  1 - event count\r\n     *  5:  1 - delta time\r\n     *\r\n     *  6:  2 - force\r\n     *  8:  1 - image brightness\r\n     *  9:  1 - exposure time\r\n     * 10:  1 - NDAC process time\r\n     * 11:  2 - label count\r\n     * 13:  1 - ndac error code\r\n     * 14:  1 - class type (0:G3C6, 1:N3C6)\r\n     * 15:  1 - error count (down부터 카운트, 초기화:0)\r\n    */\r\n\r\n    const timediff = buf[5];\r\n    this.accTime(timediff);\r\n\r\n    const force = intFromBytes(buf, 6, 2);\r\n\r\n    const brightness = buf[8];\r\n    const exposureTime = buf[9];\r\n    const ndacProcessTime = buf[10];\r\n\r\n    const labelCount = intFromBytes(buf, 11, 2);\r\n    const ndacErrorCode = buf[13];\r\n    const ndacClassType = buf[14];\r\n    const continuousErrorCount = buf[15];\r\n\r\n    const options = {\r\n      timeStamp: this.currentTime,\r\n\r\n      timediff,\r\n      force,\r\n\r\n      brightness,\r\n      exposureTime,\r\n      ndacProcessTime,\r\n      labelCount,\r\n      ndacErrorCode,\r\n      ndacClassType,\r\n      continuousErrorCount,\r\n    }\r\n\r\n    const e = makePenEvent(this.deviceInfo.deviceType, PenEventEnum.CODE_ERROR, options);\r\n    this.penHandler.onNcodeError(e);\r\n  }\r\n\r\n\r\n  /**\r\n   * response at pen configuration (ex. hover mode)\r\n   * @param buf \r\n   */\r\n  process_85_config_response = (buf: Uint8Array) => {\r\n    /**\r\n     *  0:  1 - header\r\n     *\r\n     *  1:  1 - cmd (0x85)\r\n     *  2:  1 - error code\r\n     *  3:  2 - length\r\n     *  5:  1 - type\r\n     *  6:  1 - result (0:success, 1:fail)\r\n    */\r\n    // const error_code = buf[2];\r\n    const res_type = buf[6];\r\n    console.log(`    response from pen: ${res_type === 0 ? \"success\" : \"fail:\" + res_type.toString(16)}`);\r\n  }\r\n\r\n\r\n  /**\r\n   * response, 실시간 필기 데이터 요청에 따른\r\n   * @param buf \r\n   */\r\n  process_91_realtime_mode_response = (buf: Uint8Array) => {\r\n    /**\r\n     *  0:  1 - header\r\n     *\r\n     *  1:  1 - cmd (0x91)\r\n     *  2:  1 - error code\r\n     *  3:  2 - length\r\n    */\r\n\r\n    let Errcode = buf[2];\r\n\r\n    if (Errcode === 0) {\r\n      console.log(\"    BT protocol #4 <- You can write.\");\r\n      console.log(\"    Device info \");\r\n      console.log(\"         modelName: \" + this.deviceInfo.modelName);\r\n      console.log(\"         protocolVer: \" + this.deviceInfo.protocolVer / 100);\r\n      console.log(\"         deviceType: \" + this.deviceInfo.deviceType);\r\n\r\n      let errorCode = 0;\r\n      let infoMessage = \"\";\r\n\r\n      // callback\r\n      if (this.deviceInfo.protocolVer < 218) {\r\n        errorCode = 1;\r\n        infoMessage = `need to upgrade firmware greater than 2.18 (current version=${this.deviceInfo.protocolVer / 100})`;\r\n      }\r\n\r\n      const e = makePenEvent(this.deviceInfo.deviceType, PenEventEnum.ON_CONNECTED, { errorCode, infoMessage, timeStamp: this.currentTime });\r\n      this.penHandler.onConnected(e);\r\n\r\n      // set auto hover mode\r\n      if (this.deviceInfo.protocolVer >= 218) {\r\n        this.setHoverMode(1); // enable hover\r\n      }\r\n    } else {\r\n      console.log(\"BT protocol #4 <- error : \" + Errcode);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport { deviceSelectDlg };","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\DrawCurves.ts",["1170","1171","1172","1173","1174","1175","1176","1177","1178","1179","1180","1181","1182","1183","1184","1185","1186","1187","1188","1189","1190","1191","1192","1193","1194","1195","1196","1197"],"import { IPoint, IPointForce } from \"../../DataStructure/Structures\";\r\n\r\n// export const PATH_THICKNESS_SCALE = 16384;\r\n// export const PATH_THICKNESS_SCALE_DET = 0.00006103515625;\r\n\r\n\r\nexport const PATH_THICKNESS_SCALE = 1;\r\nexport const PATH_THICKNESS_SCALE_DET = 1;\r\n\r\n\r\n\r\n/**\r\n *\r\n * @param p1\r\n */\r\nconst pointBegin = (p1: IPoint): string => {\r\n  // return (\"M\" + p1.x + \",\" + p1.y);\r\n  const x1 = p1.x * PATH_THICKNESS_SCALE_DET;\r\n  const y1 = p1.y * PATH_THICKNESS_SCALE_DET;\r\n\r\n  return (\"M\" + x1 + \",\" + y1);\r\n};\r\n\r\n\r\n/**\r\n *\r\n * @param p1\r\n * @param p2\r\n * @param p3\r\n */\r\nconst point3Curve = (p1: IPoint, p2: IPoint, p3: IPoint): string => {\r\n  // return (\"C\" + p1.x + \", \" + p1.y + \",\" + p2.x + \", \" + p2.y + \",\" + p3.x + \",\" + p3.y);\r\n  const x1 = p1.x * PATH_THICKNESS_SCALE_DET;\r\n  const x2 = p2.x * PATH_THICKNESS_SCALE_DET;\r\n  const x3 = p3.x * PATH_THICKNESS_SCALE_DET;\r\n\r\n\r\n  const y1 = p1.y * PATH_THICKNESS_SCALE_DET;\r\n  const y2 = p2.y * PATH_THICKNESS_SCALE_DET;\r\n  const y3 = p3.y * PATH_THICKNESS_SCALE_DET;\r\n\r\n  return (\"C\" + x1 + \", \" + y1 + \",\" + x2 + \", \" + y2 + \",\" + x3 + \",\" + y3);\r\n};\r\n\r\n\r\n/**\r\n *\r\n * @param points\r\n */\r\nexport const drawLinePath = (points: IPoint[]): string => {\r\n  const len = points.length;\r\n  if (len < 1) return \"\";\r\n\r\n  let path = \"\";\r\n  path += \"M\" + points[0].x + \",\" + points[0].y;\r\n\r\n  for (let i = 1; i < len; i++) {\r\n    const p = points[i];\r\n    path += \" L\" + p.x + \", \" + p.y;\r\n  }\r\n\r\n\r\n  for (let i = len - 2; i >= 0; i--) {\r\n    const p = points[i];\r\n    path += \" L\" + p.x + \", \" + p.y;\r\n  }\r\n\r\n  path += \" z\";\r\n\r\n\r\n  return path;\r\n};\r\n\r\n\r\n/**\r\n *\r\n * @param points\r\n */\r\nexport const drawCurvePath = (points: IPoint[]): string => {\r\n  if (points.length < 1) {\r\n    return \"\";\r\n  }\r\n  let bezier = \"\";\r\n  bezier += \"M\" + points[0].x + \",\" + points[0].y;\r\n\r\n  let n = points.length - 1;\r\n  var controlPoints = [];\r\n\r\n  for (let i = 0; i < n; i++) {\r\n    let p = points[i];\r\n\r\n    if (controlPoints.length < 5) {\r\n      controlPoints.push(p);\r\n      continue;\r\n    }\r\n\r\n    let endPoint = {\r\n      x: (controlPoints[2].x + p.x) / 2,\r\n      y: (controlPoints[2].y + p.y) / 2,\r\n    };\r\n\r\n    bezier += point3Curve(controlPoints[1], controlPoints[2], endPoint);\r\n    controlPoints = [endPoint, p];\r\n  }\r\n  let p = points[n];\r\n\r\n  while (controlPoints.length < 5) {\r\n    controlPoints.push(p);\r\n  }\r\n  bezier += point3Curve(controlPoints[1], controlPoints[2], p);\r\n\r\n  return bezier;\r\n};\r\n\r\n\r\n/**\r\n *\r\n * @param obj\r\n */\r\nconst clone = (obj: Object): Object => {\r\n  if (obj === null || typeof obj !== \"object\") return obj;\r\n\r\n  var copy = obj.constructor();\r\n\r\n  for (var attr in obj) {\r\n    if (obj.hasOwnProperty(attr)) {\r\n      copy[attr] = clone(obj[attr]);\r\n    }\r\n  }\r\n  return copy;\r\n};\r\n\r\n/**\r\n *\r\n * @param points\r\n * @param strokeThickness\r\n */\r\n// Drawing Function\r\nexport const drawPath = (points: IPointForce[], strokeThickness: number): string => {\r\n  if (points.length < 3) {\r\n    return \"\" ;\r\n  }\r\n\r\n  var bezier = \"\";\r\n  let scaled_pen_thickness = strokeThickness;\r\n\r\n  // first 1.0f --> lineScale\r\n  var x0, x1, x2, x3, y0, y1, y2, y3, p0, p1, p2, p3;\r\n  var vx01, vy01, vx21, vy21;\r\n\r\n  // unit tangent vectors 0->1 and 1<-2\r\n  var norm, n_x0, n_y0, n_x2, n_y2;\r\n\r\n  // the normals\r\n  var temp = { x: 0, y: 0 };\r\n  var endPoint = { x: 0, y: 0 };\r\n  var controlPoint1 = { x: 0, y: 0 };\r\n  var controlPoint2 = { x: 0, y: 0 };\r\n  // the first actual points is treated as a midpoint\r\n  x0 = points[0].x + 0.1;\r\n  y0 = points[0].y;\r\n  p0 = points[0].f;\r\n  x1 = points[1].x + 0.1;\r\n  y1 = points[1].y;\r\n  p1 = points[1].f;\r\n  vx01 = x1 - x0;\r\n  vy01 = y1 - y0;\r\n  // instead of dividing tangent/norm by two, we multiply norm by 2\r\n  norm = Math.sqrt(vx01 * vx01 + vy01 * vy01 + 0.0001) * 2.0;\r\n  vx01 = (vx01 / norm) * scaled_pen_thickness * p0;\r\n  vy01 = (vy01 / norm) * scaled_pen_thickness * p0;\r\n  n_x0 = vy01;\r\n  n_y0 = -vx01;\r\n  // Trip back path will be saved.\r\n  var pathPointStore = [];\r\n  temp.x = x0 + n_x0;\r\n  temp.y = y0 + n_y0;\r\n\r\n  endPoint.x = x0 + n_x0;\r\n  endPoint.y = y0 + n_y0;\r\n  controlPoint1.x = x0 - n_x0 - vx01;\r\n  controlPoint1.y = y0 - n_y0 - vy01;\r\n  controlPoint2.x = x0 + n_x0 - vx01;\r\n  controlPoint2.y = y0 + n_y0 - vy01;\r\n  //Save last path. I'll be back here....\r\n  let ep = clone(endPoint);\r\n  let cp1 = clone(controlPoint1);\r\n  let cp2 = clone(controlPoint2);\r\n  pathPointStore.push({\r\n    endPoint: ep,\r\n    controlPoint1: cp1,\r\n    controlPoint2: cp2,\r\n  });\r\n\r\n  // drawing setting\r\n  bezier += pointBegin(temp);\r\n  for (var i = 2; i < points.length - 1; i++) {\r\n    x3 = points[i].x;\r\n    // + 0.1f;\r\n    y3 = points[i].y;\r\n    p3 = points[i].f;\r\n    x2 = (x1 + x3) / 2.0;\r\n    y2 = (y1 + y3) / 2.0;\r\n    p2 = (p1 + p3) / 2.0;\r\n    vx21 = x1 - x2;\r\n    vy21 = y1 - y2;\r\n    norm = Math.sqrt(vx21 * vx21 + vy21 * vy21 + 0.0001) * 2.0;\r\n    vx21 = (vx21 / norm) * scaled_pen_thickness * p2;\r\n    vy21 = (vy21 / norm) * scaled_pen_thickness * p2;\r\n    n_x2 = -vy21;\r\n    n_y2 = vx21;\r\n    if (norm < 0.6) {\r\n      continue;\r\n    }\r\n    // The + boundary of the stroke\r\n    endPoint.x = x2 + n_x2;\r\n    endPoint.y = y2 + n_y2;\r\n    controlPoint1.x = x1 + n_x0;\r\n    controlPoint1.y = y1 + n_y0;\r\n    controlPoint2.x = x1 + n_x2;\r\n    controlPoint2.y = y1 + n_y2;\r\n    bezier += point3Curve(controlPoint1, controlPoint2, endPoint);\r\n\r\n    // THe - boundary of the stroke\r\n    endPoint.x = x0 - n_x0;\r\n    endPoint.y = y0 - n_y0;\r\n    controlPoint1.x = x1 - n_x2;\r\n    controlPoint1.y = y1 - n_y2;\r\n    controlPoint2.x = x1 - n_x0;\r\n    controlPoint2.y = y1 - n_y0;\r\n    let ep = clone(endPoint);\r\n    let cp1 = clone(controlPoint1);\r\n    let cp2 = clone(controlPoint2);\r\n    pathPointStore.push({\r\n      endPoint: ep,\r\n      controlPoint1: cp1,\r\n      controlPoint2: cp2,\r\n    });\r\n    x0 = x2;\r\n    y0 = y2;\r\n    p0 = p2;\r\n    x1 = x3;\r\n    y1 = y3;\r\n    p1 = p3;\r\n    vx01 = -vx21;\r\n    vy01 = -vy21;\r\n    n_x0 = n_x2;\r\n    n_y0 = n_y2;\r\n    //\r\n  }\r\n  // the last actual points is treated as a midpoint\r\n  x2 = points[points.length - 1].x;\r\n  // + 0.1f;\r\n  y2 = points[points.length - 1].y;\r\n  p2 = points[points.length - 1].f;\r\n  vx21 = x1 - x2;\r\n  vy21 = y1 - y2;\r\n  norm = Math.sqrt(vx21 * vx21 + vy21 * vy21 + 0.0001) * 2.0;\r\n  vx21 = (vx21 / norm) * scaled_pen_thickness * p2;\r\n  vy21 = (vy21 / norm) * scaled_pen_thickness * p2;\r\n  n_x2 = -vy21;\r\n  n_y2 = vx21;\r\n  endPoint.x = x2 + n_x2;\r\n  endPoint.y = y2 + n_y2;\r\n  controlPoint1.x = x1 + n_x0;\r\n  controlPoint1.y = y1 + n_y0;\r\n  controlPoint2.x = x1 + n_x2;\r\n  controlPoint2.y = y1 + n_y2;\r\n  bezier += point3Curve(controlPoint1, controlPoint2, endPoint);\r\n  endPoint.x = x2 - n_x2;\r\n  endPoint.y = y2 - n_y2;\r\n  controlPoint1.x = x2 + n_x2 - vx21;\r\n  controlPoint1.y = y2 + n_y2 - vy21;\r\n  controlPoint2.x = x2 - n_x2 - vx21;\r\n  controlPoint2.y = y2 - n_y2 - vy21;\r\n  bezier += point3Curve(controlPoint1, controlPoint2, endPoint);\r\n\r\n  endPoint.x = x0 - n_x0;\r\n  endPoint.y = y0 - n_y0;\r\n  controlPoint1.x = x1 - n_x2;\r\n  controlPoint1.y = y1 - n_y2;\r\n  controlPoint2.x = x1 - n_x0;\r\n  controlPoint2.y = y1 - n_y0;\r\n  bezier += point3Curve(controlPoint1, controlPoint2, endPoint);\r\n\r\n  // Trace back to the starting points\r\n  // console.log(\"reverse start\", pathPointStore)\r\n  while (pathPointStore.length) {\r\n    var repath = pathPointStore.pop();\r\n    bezier += point3Curve(\r\n      repath.controlPoint1,\r\n      repath.controlPoint2,\r\n      repath.endPoint\r\n    );\r\n  }\r\n  return bezier;\r\n};\r\n\r\n\r\n\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\DataStructure\\NeoStroke.ts",["1198","1199","1200","1201","1202","1203","1204"],"import { uuidv4 } from \"../utils/UtilsFunc\";\r\nimport NeoDot from \"./NeoDot\";\r\nimport { IBrushType } from \"../DataStructure/Enums\"\r\n\r\nexport interface INeoStrokeProps {\r\n  section: number,\r\n  owner: number,\r\n  book: number,\r\n  page: number,\r\n\r\n  startTime: number,\r\n  mac: string,\r\n\r\n\r\n  brushType: IBrushType,\r\n  thickness: number,\r\n  color: string,\r\n};\r\n\r\n\r\n\r\nexport default class NeoStroke {\r\n  key: string;\r\n  color: string;\r\n\r\n  brushType: IBrushType;\r\n  dotCount: number;\r\n  dotsEncoded: string;    //'AACNjAw/heuxQXsUB0JuZ5ILANLRUT9cj7JBj8IHQpNokgwA+/p6PylcsUGuRwhCnWeSCwD9/Hw/cT2uQXsUCUKiaJIMAAAAgD97FKpBXI8KQp9mkgsAAACAPwrXo0H2KAxCoHGSDAAAAIA/cT2eQQrXDUKaZpELAAAAgD97FJZB4XoOQqZ8kQwAAACAP3sUkEFSuA5CoGSQDAAAAIA/9iiKQexRDkKgWo8KAAAAgD8UroNB7FEMQp9XjwwAAACAP/YogEEzMwpCmFuOOwAAAIA/SOGAQY/C/UGfTY4LAAAAgD+F64VBmpn5QaJUjwwAAACAP83MjEEpXPdBnk+PCwAAAIA/CteTQWZm9kGgU48XAAAAgD+F651BSOH4QZpTkQwAAACAP/YooEHsUfxBnFKRIwAAAIA/cT2iQdejBUKbWJIKAAAAgD+amaFBPQoJQppbkQwAAACAP7gen0EK1wxCmFmRDAAAAIA/ZmaaQSlcEEKXZpEMAP38fD8fhZVBj8IUQpJlkAsAvLs7P7gej0FcjxlCjXCQDADR0NA+ZmaIQaRwHUJxc48LAIWEhD5mZoJBFK4eQmxxkAwAlZQUPoXreUGF6x1CaW+QEQDx8PA9H4VzQY/CG0JoZZA='\r\n  mac: string;// '9c:7b:d2:53:09:66'\r\n  penTipMode: number = 0;   // 0: pen, 1: eraser\r\n  strokeType: number = 1;   // 1\r\n  thickness: number = 1;  // 0.20000000298023224\r\n  updated: number;  // 1597202355308\r\n\r\n  startTime: number;  // 1597202355308\r\n  endTime: number;  // 1597202355308\r\n  duration: number;  // last dot's time;  //first dot's time, it should be increase by 1 to use properly\r\n\r\n  section: number;  // 3\r\n  owner: number;  // 27\r\n  book: number;  // 1089\r\n  page: number;  // 1\r\n\r\n  max_force: number;  // 1\r\n  min_force: number;  // 1\r\n  avr_force: number;  // 1\r\n\r\n  max_speed: number;  // 1\r\n  min_speed: number;  // 1\r\n  avr_speed: number;  // 1\r\n\r\n  time_len: number;  // 1\r\n\r\n  dotArray: NeoDot[];\r\n  opened: boolean;\r\n\r\n\r\n  /**\r\n   *\r\n   * @param {string} [mac]\r\n   */\r\n  constructor(props: INeoStrokeProps ) {\r\n    const { section, owner, book, page, startTime, mac, thickness, brushType, color} = props;\r\n    let sourceId = uuidv4();\r\n    this.key = sourceId;\r\n    this.mac = mac;\r\n\r\n    this.section = section;\r\n    this.owner = owner;\r\n    this.book = book;\r\n    this.page = page;\r\n    this.startTime = startTime;\r\n    this.dotCount = 0;\r\n    this.dotArray = new Array(0);\r\n    this.opened = true;\r\n\r\n    this.thickness = thickness;\r\n    this.brushType = brushType;\r\n\r\n    this.color = color;\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param {NeoDot} dot\r\n   */\r\n  addDot(dot: NeoDot) {\r\n    this.dotArray.push(dot);\r\n    this.dotCount++;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n}\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\renderer\\pageviewer\\PenBasedRenderWorker.tsx",["1205","1206","1207","1208","1209","1210","1211","1212","1213","1214","1215","1216","1217","1218","1219","1220","1221","1222","1223","1224","1225","1226","1227","1228","1229","1230","1231","1232","1233","1234","1235","1236","1237","1238","1239","1240","1241","1242","1243","1244","1245","1246","1247","1248","1249","1250","1251","1252","1253","1254","1255","1256","1257","1258","1259","1260","1261","1262","1263","1264","1265","1266","1267","1268","1269","1270","1271","1272","1273"],"import \"../../types\";\r\nimport RenderWorkerBase, { IRenderWorkerOption } from \"./RenderWorkerBase\";\r\n\r\nimport { fabric } from \"fabric\";\r\n\r\n// import { PLAYSTATE } from \"./StorageRenderer\";\r\nimport { InkStorage } from \"../..\";\r\nimport { drawPath } from \"./DrawCurves\";\r\n// import { NCODE_TO_SCREEN_SCALE } from \"../../constants\";\r\nimport { paperInfo } from \"../../noteserver/PaperInfo\";\r\nimport { NeoDot, NeoStroke } from \"../../DataStructure\";\r\nimport { IBrushType } from \"../../DataStructure/Enums\";\r\nimport { INeoStrokeProps } from \"../../DataStructure/NeoStroke\";\r\nimport { IPageSOBP } from \"../../DataStructure/Structures\";\r\n\r\nimport jQuery from \"jquery\";\r\nlet $ = jQuery;\r\n\r\n// const timeTickDuration = 20; // ms\r\n// const DISABLED_STROKE_COLOR = \"rgba(0, 0, 0, 0.1)\";\r\n// const INVISIBLE_STROKE_COLOR = \"rgba(255, 255, 255, 0)\";\r\n// const INCOMPLETE_STROKE_COLOR = \"rgba(255, 0, 255, 0.4)\";\r\n// const CURRENT_POINT_STROKE_COLOR = \"rgba(255, 255, 255, 1)\";\r\n\r\nconst NUM_HOVER_POINTERS = 6;\r\nconst REMOVE_HOVER_POINTS_INTERVAL = 50; // 50ms\r\nconst REMOVE_HOVER_POINTS_WAIT = 20; // 20 * 50ms = 1sec\r\n\r\n/** @enum {string}  */\r\nexport const ZoomFitEnum = {\r\n  WIDTH: \"width\",\r\n  HEIGHT: \"height\",\r\n  FULL: \"full\",\r\n  ACTUAL: \"100%\",\r\n}\r\n\r\nconst STROKE_OBJECT_ID = \"ns\";\r\n// const GRID_OBJECT_ID = \"g\";\r\n\r\nexport default class PenBasedRenderWorker extends RenderWorkerBase {\r\n\r\n  /** @type {Array<fabric.Path>} */\r\n  localPathArray = new Array(0);\r\n\r\n\r\n  /** @type {Object.<string, {stroke:NeoStroke, path:fabric.Path}>} */\r\n  livePaths = {};\r\n\r\n\r\n  storage = InkStorage.getInstance();\r\n\r\n  visibleHoverPoints: number = NUM_HOVER_POINTERS;\r\n  pathHoverPoints: Array<fabric.Circle> = new Array(0);\r\n  \r\n\r\n  /**\r\n   * \r\n   * @param options \r\n   */\r\n  constructor(options: IRenderWorkerOption) {\r\n    super(options);\r\n\r\n    this.name = \"PenBasedRenderWorker\";\r\n\r\n    const { storage } = options;\r\n    if (storage !== undefined) {\r\n      if (!(storage instanceof InkStorage)) {\r\n        throw new Error(\"storage is not an instance of InkStorage\");\r\n      }\r\n      this.storage = storage;\r\n    }\r\n\r\n\r\n    const { section, owner, book, page } = this.surfaceInfo;\r\n    this.changePage(section, owner, book, page, true);\r\n\r\n    console.log(`constructor size ${options.width}, ${options.height}`)\r\n    this.resize({ width: options.width, height: options.height });\r\n  }\r\n\r\n  // /**\r\n  //  * @override\r\n  //  */\r\n  // init = () => {\r\n  //   super.init();\r\n  // }\r\n\r\n\r\n  /**\r\n   * Pen Down이 들어왔다. 그러나 아직 page 정보가 들어오지 않아서,\r\n   * 이 페이지에 붙여야 할 것인가 아니면, 새로운 페이지에 붙여야 할 것인가를 모른다.\r\n   *\r\n   * 렌더러 처리 순서\r\n   * 1) Pen Down: live stroke의 path를 생성\r\n   * 2) Page Info: 페이지를 전환하고, 잉크 스토리지에 있는 이전의 스트로크를 path로 등록한다.\r\n   *      2-1) 이 클래스를 new 하는 container에서 setPageStrokePath(strokes)를 불러줘야 한다.\r\n   * 3) Pen Move:\r\n   *      3-1) live stroke path의 처음 나오는 점이면, path를 canvas에 등록한다.\r\n   *      3-2) 두번째 점부터는 path에 append 한다.\r\n   * 4) Pen Up: Live stroke path는 없애고, 잉크스토리지에 2) 이후의 stroke를 받아 path에 추가 등록한다.\r\n   *\r\n   *\r\n   * 조심해야 할 것은, 위의 2의 처리를 container가 담당하고 있는데, 2에 앞서서 3이 처리되면\r\n   * 이전의 페이지에 획이 추가되고, 2-1에 의해 clear되어 버린다. 순서에 유의할 것\r\n   *\r\n   * @public\r\n   * @param {{strokeKey:string, mac:string, time:number, stroke:NeoStroke}} event\r\n   */\r\n  createLiveStroke = (event: any) => {\r\n    console.log(`Stroke created = ${event.strokeKey}`);\r\n    this.livePaths[event.strokeKey] = {\r\n      stroke: event.stroke,\r\n      path: null\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {{strokeKey:string, mac:string, stroke:NeoStroke, dot:NeoDot}} event\r\n   */\r\n  pushLiveDot = (event: any) => {\r\n    //pen tracker rendering\r\n    this.movePenTracker(event);\r\n    \r\n    let pathData = this.livePaths[event.strokeKey];\r\n    const { path, stroke } = pathData;\r\n    const dot = event.dot;\r\n\r\n    if (path) {\r\n      this.canvasFb.remove(path);\r\n    }\r\n    \r\n    \r\n\r\n    //지우개 구현\r\n    const canvas_xy = this.getCanvasXY(dot);\r\n    const screen_xy = this.getScreenXY(canvas_xy);\r\n    const pen = event.pen;\r\n    if (pen.penRendererType === IBrushType.ERASER) {\r\n      console.log('ERASE');\r\n      if (Object.keys(pen.eraserLastPoint).length) {\r\n        this.eraseOnLine(pen.eraserLastPoint.x, pen.eraserLastPoint.y, screen_xy.x, screen_xy.y, stroke);\r\n      }\r\n\r\n      pen.eraserLastPoint = { x: screen_xy.x, y: screen_xy.y };\r\n    }\r\n    else {\r\n      let new_path = this.createPenPathFromStroke(stroke);\r\n      \r\n      if (this.canvasFb) {\r\n        this.canvasFb.add(new_path);\r\n        pathData.path = new_path;\r\n      }\r\n      \r\n      \r\n      this.focusToDot(dot);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {{strokeKey:string, mac:string, stroke, section:number, owner:number, book:number, page:number}} event\r\n   */\r\n  closeLiveStroke = (event) => {\r\n    let pathData = this.livePaths[event.strokeKey];\r\n\r\n    if (!pathData || pathData.path === undefined) {\r\n      console.log(`undefined path`);\r\n    }\r\n\r\n    let path = pathData.path;\r\n\r\n    if (path) {\r\n      this.localPathArray.push(path);\r\n      path.fill = path.color;\r\n      path.stroke = path.color;\r\n      // this.canvas.renderAll();\r\n    }\r\n\r\n    delete this.livePaths[event.strokeKey];\r\n  }\r\n\r\n  movePenTracker = (event:any) => {\r\n    const dot = event.dot;\r\n    const canvas_xy = this.getCanvasXY(dot);\r\n    const screen_xy = this.getScreenXY(canvas_xy);\r\n    const penTracker = event.pen.pathPenTracker;\r\n    \r\n    let objects = this.canvasFb.getObjects();\r\n    let penTrackerObj = objects.filter(obj => obj.data === 'pt');\r\n\r\n    if (penTrackerObj.length === 0) {\r\n        this.canvasFb.add(event.pen.pathPenTracker);\r\n      }\r\n    else {\r\n    }\r\n\r\n    var radius = penTracker.radius;\r\n    penTracker.visible = true;\r\n    penTracker.set({left : screen_xy.x - radius, top: screen_xy.y - radius});\r\n    penTracker.setCoords();\r\n    this.canvasFb.renderAll();\r\n\r\n    const pen = event.pen;\r\n\r\n    pen.waitCount = REMOVE_HOVER_POINTS_WAIT;\r\n    pen.visibleHoverPoints--;\r\n    if (pen.visibleHoverPoints >= 0) {\r\n      pen.pathHoverPoints[pen.visibleHoverPoints].visible = false;\r\n    }\r\n\r\n    if (pen.timeOut) {\r\n        clearInterval(pen.timeOut);\r\n        pen.timeOut = null;\r\n    }\r\n\r\n\r\n  }\r\n\r\n  eraseOnLine(ink_x0, ink_y0, ink_x1, ink_y1, stroke) {\r\n    var pathData = 'M ' + ink_x0 + ' ' + ink_y0 + ' L ' + ink_x1 + ' ' + ink_y1;\r\n    var eraserPath = new fabric.Path(pathData);\r\n    eraserPath.set({left : ink_x0, top: ink_y0, opacity: 0});\r\n\r\n    let paths = this.canvasFb.getObjects().filter(obj => obj.data === 'ns');\r\n\r\n    for (var i = 0; i < this.localPathArray.length; i++) {\r\n      var path = this.localPathArray[i];\r\n      \r\n      if (path.intersectsWithObject(eraserPath)) {\r\n        this.canvasFb.remove(path);\r\n\r\n        const { section, book, owner, page } = stroke;\r\n        const pageId = InkStorage.getPageId({ section, book, owner, page });\r\n\r\n        this.storage.completed = this.storage.completedOnPage.get(pageId)\r\n        const idx = this.storage.completed.findIndex(ns => ns.key === path.key);\r\n        this.storage.completed.splice(idx, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  addHoverPoints = (e) => {\r\n    for (var i=0; i<e.pen.pathHoverPoints.length; i++) {\r\n      this.canvasFb.add(e.pen.pathHoverPoints[i]);\r\n    }\r\n    \r\n    this.canvasFb.add(e.pen.pathPenTracker);\r\n    console.log('hover points & pen tracker added')\r\n  }\r\n\r\n  moveHoverPoint = (e) => {\r\n\r\n    let objects = this.canvasFb.getObjects();\r\n    let hoverPoints = objects.filter(obj => obj.data === 'hp');\r\n\r\n    if (hoverPoints.length === 0) {\r\n      for (var i=0; i<e.pen.pathHoverPoints.length; i++) {\r\n        this.canvasFb.add(e.pen.pathHoverPoints[i]);\r\n      }\r\n    }\r\n    else {\r\n    }\r\n\r\n    const dot = {x:e.event.x, y:e.event.y}\r\n    const canvas_xy = this.getCanvasXY(dot);\r\n    \r\n    var i: number;\r\n    for (i = NUM_HOVER_POINTERS - 1; i > 0; i--) {\r\n      e.pen.pathHoverPoints[i].left = e.pen.pathHoverPoints[i-1].left;\r\n      e.pen.pathHoverPoints[i].top = e.pen.pathHoverPoints[i-1].top;\r\n      e.pen.pathHoverPoints[i].setCoords();\r\n      this.canvasFb.renderAll();\r\n    }\r\n\r\n    e.pen.pathHoverPoints[0].left = canvas_xy.x;\r\n    e.pen.pathHoverPoints[0].top = canvas_xy.y;\r\n    e.pen.pathHoverPoints[0].setCoords();\r\n    this.canvasFb.renderAll();\r\n\r\n    var isPointerVisible = $(\"#btn_tracepoint\").find(\".c2\").hasClass(\"checked\");\r\n\r\n    e.pen.visibleHoverPoints = NUM_HOVER_POINTERS;\r\n\r\n    for (i = 0; i < e.pen.visibleHoverPoints; i++) {\r\n      e.pen.pathHoverPoints[i].visible = isPointerVisible;\r\n      this.canvasFb.renderAll();\r\n    }\r\n\r\n    if (e.pen.timeOut) {\r\n        clearInterval(e.pen.timeOut);\r\n        e.pen.timeOut = null;\r\n    }\r\n    e.pen.waitCount = 0;\r\n\r\n    var pen = e.pen;\r\n    var self = this;\r\n\r\n    e.pen.timeOut = setInterval(() => {\r\n      pen.waitCount++;\r\n        // 1초 뒤\r\n        if (pen.waitCount > 20) {\r\n            for (i = NUM_HOVER_POINTERS - 1; i > 0; i--) {\r\n                pen.pathHoverPoints[i].left = pen.pathHoverPoints[i - 1].left;\r\n                pen.pathHoverPoints[i].top = pen.pathHoverPoints[i - 1].top;\r\n            }\r\n            pen.pathHoverPoints[0].left = -30;\r\n            pen.pathHoverPoints[0].top = -30;\r\n\r\n            pen.visibleHoverPoints--;\r\n            if (pen.visibleHoverPoints >= 0) {\r\n                pen.pathHoverPoints[pen.visibleHoverPoints].visible = false;\r\n                self.canvasFb.renderAll();\r\n            } else {\r\n                clearInterval(pen.timeOut);\r\n            }\r\n        }\r\n    }, REMOVE_HOVER_POINTS_INTERVAL);\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param {number} section\r\n   * @param {number} owner\r\n   * @param {number} book\r\n   * @param {number} page\r\n   * @param {boolean} forceToRefresh\r\n   */\r\n  changePage = (section: number, owner: number, book: number, page: number, forceToRefresh: boolean) => {\r\n    console.log(\"changePage\");\r\n    let currPage = this.surfaceInfo;\r\n\r\n    if ((!forceToRefresh)\r\n      && (section === currPage.section\r\n        && owner === currPage.owner\r\n        && book === currPage.book\r\n        && page === currPage.page)) return;\r\n\r\n\r\n    // 페이지 정보와 scale을 조정한다.\r\n    let info = paperInfo.getPaperInfo({ section, owner, book, page });\r\n    if (info) {\r\n      this.surfaceInfo = {\r\n        section, owner, book, page,\r\n        Xmin: info.Xmin, Ymin: info.Ymin, Xmax: info.Xmax, Ymax: info.Ymax,\r\n        Mag: info.Mag\r\n      };\r\n\r\n    }\r\n    let szPaper = paperInfo.getPaperSize({ section, owner, book, page });\r\n    this.scale = this.calcScaleFactor(this.viewFit, szPaper, this.base_scale);\r\n\r\n    // 현재 모든 stroke를 지운다.\r\n    this.removeAllCanvasObject();\r\n    this.resetLocalPathArray();\r\n\r\n    // grid를 그려준다\r\n    this.drawPageLayout();\r\n\r\n    // page에 있는 stroke를 가져온다\r\n    let pageInfo = { section, owner, book, page };\r\n    let strokes = this.storage.getPageStrokes(pageInfo);\r\n\r\n    //test\r\n    const testStroke = this.generateA4CornerStrokeForTest(pageInfo);\r\n    strokes.push(testStroke);\r\n\r\n    // 페이지의 stroke를 fabric.Path로 바꾼다.\r\n    this.addStrokePaths(strokes);\r\n\r\n    // page refresh\r\n    this.canvasFb.requestRenderAll();\r\n  }\r\n\r\n  private generateDotForTest(x: number, y: number): NeoDot {\r\n    const dot = new NeoDot({\r\n      dotType: 2,   // moving\r\n      deltaTime: 2,\r\n      time: 0,\r\n      f: 255,\r\n      x, y,\r\n    });\r\n\r\n    return dot;\r\n  }\r\n\r\n  private generateA4CornerStrokeForTest(pageInfo: IPageSOBP): NeoStroke {\r\n    // for debug\r\n    const { section, owner, book, page } = pageInfo;\r\n    const strokeArg: INeoStrokeProps = {\r\n      section, owner, book, page,\r\n      startTime: 0,\r\n      mac: \"00:00:00:00:00:00\",\r\n      color: \"rgba(0,0,255,255)\",\r\n      brushType: IBrushType.PEN,\r\n      thickness: 1,\r\n    }\r\n    const defaultStroke = new NeoStroke(strokeArg);\r\n\r\n    let dot: NeoDot;\r\n\r\n    let dot0 = this.generateDotForTest(0, 0);\r\n    defaultStroke.addDot(dot0);\r\n\r\n    dot = this.generateDotForTest(88.56, 0);\r\n    defaultStroke.addDot(dot);\r\n    defaultStroke.addDot(dot);\r\n\r\n    dot = this.generateDotForTest(88.56, 125.24);\r\n    defaultStroke.addDot(dot);\r\n    defaultStroke.addDot(dot);\r\n\r\n    dot = this.generateDotForTest(0, 125.24);\r\n    defaultStroke.addDot(dot);\r\n    defaultStroke.addDot(dot);\r\n\r\n    dot = this.generateDotForTest(0, 0);\r\n    defaultStroke.addDot(dot);\r\n\r\n    return defaultStroke;\r\n  }\r\n\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  resetLocalPathArray = () => {\r\n    this.localPathArray = new Array(0);\r\n\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  removeAllPaths = () => {\r\n    if (!this.canvasFb) return;\r\n    this.localPathArray.forEach(path => {\r\n      this.canvasFb.remove(path);\r\n    });\r\n\r\n    this.localPathArray = new Array(0);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  removeAllStrokeObject = () => {\r\n    if (this.canvasFb) {\r\n      let objects = this.canvasFb.getObjects();\r\n      let strokes = objects.filter(obj => obj.data === STROKE_OBJECT_ID);\r\n\r\n      strokes.forEach((path) => {\r\n        this.canvasFb.remove(path);\r\n      });\r\n    }\r\n  };\r\n\r\n  removeAllCanvasObject = () => {\r\n    if (this.canvasFb) {\r\n      this.canvasFb.clear();\r\n    }\r\n  };\r\n\r\n\r\n  /**\r\n   * @private\r\n   * @param {Array<NeoStroke>} strokes\r\n   */\r\n  addStrokePaths = (strokes) => {\r\n    if (!this.canvasFb) return;\r\n\r\n    strokes.forEach((stroke) => {\r\n      if (stroke.dotArray.length > 0) {\r\n        let path = this.createPenPathFromStroke(stroke);\r\n        this.canvasFb.add(path);\r\n        this.localPathArray.push(path);\r\n      }\r\n    });\r\n  }\r\n\r\n  createPenPathFromStroke = (stroke: NeoStroke) => {\r\n    const { dotArray, color, thickness, brushType, key } = stroke;\r\n\r\n    let pointArray = [];\r\n    dotArray.forEach((dot) => {\r\n      let pt = this.getCanvasXY_scaled(dot);\r\n      pointArray.push(pt);\r\n    });\r\n\r\n    var opacity: number;\r\n    switch (brushType) {\r\n      case 0 : opacity = 1; break;\r\n      case 1 : opacity = 0.3; break;\r\n      default: opacity = 1; break;\r\n    }\r\n\r\n    const pathOption = {\r\n      objectCaching: false,\r\n      stroke: color, //\"rgba(0,0,0,255)\"\r\n      fill: color, //위에 두놈은 그려지는 순간의 color\r\n      color: color, //얘가 canvas에 저장되는 color\r\n      opacity: opacity,\r\n      // strokeWidth: 10,\r\n      originX: 'left',\r\n      originY: 'top',\r\n      selectable: false,\r\n\r\n      data: STROKE_OBJECT_ID,    // neostroke\r\n      evented: true,\r\n      key : key,\r\n    };\r\n\r\n    let strokeThickness = thickness / 64;\r\n    let pathData = drawPath(pointArray, strokeThickness);\r\n    let path = new fabric.Path(pathData, pathOption);\r\n\r\n    return path;\r\n  }\r\n\r\n}\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NeoPdf\\NeoPdfManager.ts",["1274","1275","1276"],"import { openFileBrowser } from \"./FileBrowser\";\r\nimport NeoPdfDocument, { IGetDocumentOptions } from \"./NeoPdfDocument\";\r\n\r\nexport default class NeoPdfManager {\r\n  static getDocument = async (options: IGetDocumentOptions) => {\r\n    if (options.url && !options.fingerprint) {\r\n      const doc = new NeoPdfDocument();\r\n      return await doc.load(options);\r\n    }\r\n    else {\r\n      if (!options.fingerprint) {\r\n        throw new Error(`PDF Manager: URL or fingerprint should be passed to load a document`);\r\n      }\r\n\r\n      // 이 부분을 수정할 것 (구글 드라이브에서 로드하려면)\r\n      // google drive, 2020/12/05\r\n      const status = await NeoPdfManager.getUrl(options);\r\n\r\n      if (status.result === \"success\") {\r\n        const doc = new NeoPdfDocument();\r\n        return await doc.load({ url: status.url });\r\n      }\r\n\r\n      if (status.result === \"not match\") {\r\n        console.log(\"같은 파일이 아닙니다. 다시 여시겠습니까...라는 다이얼로그를 넣어서 루프를 돌 것\");\r\n        alert(\"같은 파일이 아닙니다. 다시 여시겠습니까...라는 다이얼로그를 넣어서 루프를 돌 것\");\r\n        return null;\r\n      }\r\n\r\n      return null;\r\n    }\r\n  }\r\n\r\n\r\n  static getUrl = async (options: IGetDocumentOptions) => {\r\n    const fingerprint = options.fingerprint;\r\n\r\n    if (!fingerprint) {\r\n      throw new Error(`PDF Manager: Fingerprint has not been passed`);\r\n    }\r\n\r\n    const result = await openFileBrowser();\r\n    console.log(result.result);\r\n\r\n    if (result.result === \"success\") {\r\n      const url = result.url;\r\n      console.log(url);\r\n      const isSame = NeoPdfManager.checkFingerprint({ url }, fingerprint);\r\n      if (isSame)\r\n        return { result: \"success\", url };\r\n      return { result: \"not match\", url, file: result.file };\r\n    }\r\n    else {\r\n      alert(\"파일 열기를 취소 했습니다\");\r\n      return { result: \"canceled\", url: null };\r\n\r\n      // alert(\"파일 열기가 실패했습니다\");\r\n      // return { result: \"failed\", url: null };\r\n    }\r\n  }\r\n\r\n  static checkFingerprint = async (options: IGetDocumentOptions, fingerprint: string) => {\r\n\r\n    let doc = new NeoPdfDocument();\r\n    await doc.load(options);\r\n\r\n    const docFingerprint = doc.fingerprint;\r\n\r\n    doc.destroy();\r\n    doc = null;\r\n\r\n    if (fingerprint !== docFingerprint) return false;\r\n    return true;\r\n  }\r\n}\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\renderer\\pdf\\NeoPdfViewer.tsx",["1277","1278","1279","1280","1281","1282","1283","1284","1285","1286","1287","1288","1289"],"/// <reference types=\"pdfjs-dist\" />\r\n\r\nimport React, { CSSProperties } from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport { Page } from './Page';\r\nimport * as PdfJs from \"pdfjs-dist\";\r\n\r\nPdfJs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${PdfJs.version}/pdf.worker.js`;\r\n// const PDF_URL = 'https://mozilla.github.io/pdf.js/web/compressed.tracemonkey-pldi-09.pdf';\r\n// const PDF_URL = \"./2020학년도 서울대학교 수시모집 일반전형 면접 및 구술고사 문항.pdf\";\r\n// const PDF_URL = \"https://uploads.codesandbox.io/uploads/user/faa4155a-f802-458d-81ad-90b4709d0cf8/4ETB-10.1.1.324.5566.pdf\";\r\nvar CMAP_URL = \"pdfjs-dist/cmaps/\";\r\nvar CMAP_PACKED = true;\r\n\r\n\r\ninterface Props {\r\n  url: string,\r\n  pageNo: number,\r\n  onReportPdfInfo: Function,\r\n  position: { offsetX: number, offsetY: number, zoom: number },\r\n}\r\n\r\ninterface State {\r\n  pdf: PdfJs.PDFDocumentProxy,\r\n  scale: number,\r\n  documentZoom: number,\r\n  status: string,\r\n}\r\n\r\nexport default class NeoPdfViewer extends React.Component<Props, State> {\r\n  static displayName = \"Viewer\";\r\n  documentContainer = React.createRef();\r\n  document = React.createRef();\r\n  scroller = React.createRef();\r\n\r\n  constructor(Props: Props) {\r\n    super(Props);\r\n    this.state = {\r\n      pdf: null,\r\n      scale: 1.0,\r\n      documentZoom: 1.0,\r\n      status: \"N/A\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadDocument(this.props.url);\r\n  }\r\n\r\n  loadDocument = (url: string) => {\r\n    // const { documentZoom } = this.state;\r\n\r\n    let loadingTask = PdfJs.getDocument({\r\n      url,\r\n      cMapUrl: CMAP_URL,\r\n      cMapPacked: CMAP_PACKED,\r\n    }\r\n    );\r\n\r\n    let self = this;\r\n    this.setState({ status: \"loading\" });\r\n\r\n    loadingTask.promise.then(\r\n      (pdf: PdfJs.PDFDocumentProxy) => {\r\n        self.props.onReportPdfInfo(pdf);\r\n        // console.log(pdf);\r\n        this.setState({ pdf });\r\n        this.setState({ status: \"loaded\" });\r\n\r\n        console.log(\"pdf loaded\");\r\n      });\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps: Props, nextState: State) {\r\n    if (nextProps.url !== this.props.url) {\r\n      this.loadDocument(nextProps.url);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.state.pdf) {\r\n      const pdf = this.state.pdf;\r\n      pdf.destroy();\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const { pdf } = this.state;\r\n    console.log(\"Pdf Viewer Renderer\");\r\n    console.log(this.props.position);\r\n\r\n    const pdfCanvas: CSSProperties = {\r\n      zoom: this.props.position.zoom,\r\n    }\r\n\r\n    if (pdf) {\r\n      return (\r\n        <div className=\"pdf-viewer\" style={pdfCanvas}>\r\n          <Page\r\n            pdf={pdf} index={this.props.pageNo}\r\n            key={`document-page-${this.props.pageNo}`}\r\n\r\n            position={this.props.position}\r\n          />\r\n        </div>\r\n      );\r\n\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\n\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PrintPdfMain.tsx",["1290","1291","1292","1293","1294","1295","1296","1297","1298","1299","1300","1301","1302","1303","1304","1305","1306","1307","1308","1309","1310","1311","1312","1313"],"import * as React from \"react\";\r\n\r\nimport { IPageOverview, PagesForPrint } from \"./PagesForPrint\";\r\nimport ReactToPrint from 'react-to-print';\r\nimport { IPrintingProgress, IPrintOption } from \"./PrintDataTypes\";\r\nimport { compareObject } from \"./UtilFunc\";\r\nimport { getCellMatrixShape } from \"../NcodeSurface/SurfaceSplitter\";\r\nimport { LandscapeOrientation, PortraitOrientation } from \"./PageOrientation\";\r\nimport NeoPdfDocument from \"../NeoPdf/NeoPdfDocument\";\r\n\r\n// let globalPagesCnt = 0;\r\ninterface Props {\r\n  pdf: NeoPdfDocument,\r\n  printOption: IPrintOption,\r\n  updatePrintProgress: Function,\r\n\r\n  /** 숫자가 바뀌면, 프린트한다 */\r\n  printTrigger: number,\r\n\r\n  pagesOverview: IPageOverview[],\r\n\r\n  /** 인쇄가 끝나고 나면 부를 콜백 */\r\n  onAfterPrint?: Function,\r\n}\r\n\r\ninterface State {\r\n  text: string,\r\n  isLoading: boolean,\r\n  shouldRenderPage: boolean,\r\n  renderingCompleted: boolean,\r\n  shouldPrint: boolean,\r\n  // renderPromise: Promise<any>,\r\n}\r\n\r\n/**\r\n * Class\r\n */\r\nexport class PrintPdfMain extends React.Component<Props, State> {\r\n  componentRef: PagesForPrint | null = null;\r\n  printRef: ReactToPrint;\r\n  onAfterPrint: Function;\r\n\r\n  title: string = \"\";\r\n\r\n\r\n  renderedSheets: number[];\r\n  renderedPages: number[];\r\n\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.onAfterPrint = props.onAfterPrint;\r\n\r\n    this.state = {\r\n      text: \"normal\",\r\n      isLoading: false,\r\n      shouldRenderPage: true,\r\n      renderingCompleted: false,\r\n      shouldPrint: false,\r\n      // renderPromise: pr,\r\n    };\r\n    this.clearRenderedPagesArray();\r\n  }\r\n\r\n  private clearRenderedPagesArray = () => {\r\n    this.renderedSheets = [];\r\n    this.renderedPages = [];\r\n  }\r\n\r\n  handleAfterPrint = () => {\r\n    console.log(\"[PrintPdfMain] onAfterPrint called\"); // tslint:disable-line no-console\r\n    this.onAfterPrint();\r\n\r\n  }\r\n\r\n  handleBeforePrint = () => {\r\n    console.log(\"[PrintPdfMain] onBeforePrint called\"); // tslint:disable-line no-console\r\n    return new Promise((resolve: any) => {\r\n      resolve();\r\n      /** 문서의 제목을 얻어오자 */\r\n      const pdf = this.props.pdf;\r\n      pdf.getMetadata().then(stuff => {\r\n        // console.log(stuff); // Metadata object here\r\n        this.title = stuff.info.title ? stuff.info.title : \"\";\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n\r\n  handleOnBeforeGetContent = () => {\r\n    console.log(\"[PrintPdfMain] onBeforeGetContent called\"); // tslint:disable-line no-console\r\n    this.clearRenderedPagesArray();\r\n\r\n    this.setState({ text: \"Loading new text...\", isLoading: true, shouldRenderPage: true });\r\n    return new Promise((resolve: any) => { resolve(); });\r\n  };\r\n\r\n  shouldComponentUpdate(nextProps: Props, nextState: State) {\r\n    if (this.props.printTrigger !== nextProps.printTrigger) {\r\n      this.clearRenderedPagesArray();\r\n      this.setState({ shouldPrint: true });\r\n\r\n      return true;\r\n    }\r\n\r\n    if (nextState.shouldPrint) return true;\r\n\r\n    if (this.props.pdf !== nextProps.pdf) {\r\n      return true;\r\n    }\r\n\r\n    console.log(\"[PrintPdfMain] CHECK START props\");\r\n    compareObject(this.props, nextProps, \"PrintPdfMain\");\r\n\r\n    console.log(\"[PrintPdfMain] CHECK START state\");\r\n    compareObject(this.state, nextState, \"PrintPdfMain\");\r\n\r\n    return false;\r\n  }\r\n\r\n  public OnPagePrepared = (event: { sheetIndex: number, pageNums: number[], completion: number }) => {\r\n    const { sheetIndex, pageNums, completion } = event;\r\n\r\n    const { targetPages, pagesPerSheet } = this.props.printOption;\r\n\r\n    if (completion === 100) {\r\n      if (this.renderedSheets.indexOf(sheetIndex) < 0) {\r\n        this.renderedSheets.push(sheetIndex);\r\n      }\r\n\r\n      this.renderedPages.push(...pageNums);\r\n    }\r\n\r\n    const numCompleted = Object.keys(this.renderedSheets).length;\r\n\r\n    /** callback을 불러준다 */\r\n    if (this.props.updatePrintProgress) {\r\n      const event: IPrintingProgress = {\r\n        preparedPages: [...this.renderedPages],\r\n        numSheetsPrepared: numCompleted,\r\n        completion,\r\n      }\r\n      this.props.updatePrintProgress(event);\r\n    }\r\n\r\n    /** 모든 페이지의 렌더링이 끝났는지 확인한다.  */\r\n    const numSheets = Math.ceil(targetPages.length / pagesPerSheet);\r\n    const pageNo = targetPages[sheetIndex];\r\n\r\n    // const numPages = endPage - startPage + 1;\r\n    console.log(`[PrintPdfMain] Page rendered: ${pageNo} : ${numCompleted}/${numSheets}`);\r\n    if (numCompleted === numSheets) {\r\n      console.log(\"[PrintPdfMain] Print!!!\");\r\n      // console.timeEnd('Function #1');\r\n      this.onPageRenderCompleted();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  setComponentRef = (ref: PagesForPrint) => {\r\n    this.componentRef = ref;\r\n  }\r\n\r\n  setPrinttRef = (ref: ReactToPrint) => {\r\n    this.printRef = ref;\r\n  }\r\n\r\n\r\n  reactToPrintContent = () => {\r\n    return this.componentRef;\r\n  }\r\n\r\n  reactToPrintTrigger = () => {\r\n    // NOTE: could just as easily return <SomeComponent />. Do NOT pass an `onClick` prop\r\n    // to the root node of the returned component as it will be overwritten.\r\n\r\n    // Bad: the `onClick` here will be overwritten by `react-to-print`\r\n    // return <a href=\"#\" onClick={() => alert('This will not work')}>Print this out!</a>;\r\n\r\n    // Good\r\n    // return <a href=\"#\">Print using a Class Component</a>;\r\n    // return <a href=\"#\">Print using a Class Component</a>;\r\n    return \"\";\r\n  }\r\n\r\n  getSnapshotBeforeUpdate = (prevProps: Props, prevState: State) => {\r\n    console.log(\"[PrintPdfMain] getSnapshotBeforeUpdate\");\r\n\r\n    return null;\r\n  }\r\n\r\n\r\n  onPageRenderCompleted = () => {\r\n    this.setState({\r\n      text: \"Rendering Completed\",\r\n      renderingCompleted: true,\r\n    });\r\n  }\r\n\r\n\r\n  componentDidUpdate(prevProps: Props, prevState: State) {\r\n    console.log(\"[PrintPdfMain] componentDidUpdate\");\r\n\r\n    // if (this.state.renderingCompleted !== prevState.renderingCompleted) {\r\n    if (this.state.renderingCompleted) {\r\n      /** 페이지 렌더링이 끝나고 나면 ReactToPrint Component에 handlePrint를 부른다 */\r\n      this.setState({\r\n        text: \"Print start\",\r\n        renderingCompleted: false,\r\n      });\r\n      this.startPrintOnRenderCompleted();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 페이지 렌더링이 끝나고 나면 ReactToPrint Component에 handlePrint를 부른다\r\n   */\r\n  startPrintOnRenderCompleted = () => {\r\n    if (this.printRef) {\r\n      this.printRef.handlePrint();\r\n      this.setState({\r\n        text: \"Print started\",\r\n        shouldPrint: false,\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const { pdf, printOption, pagesOverview } = this.props;\r\n    const { shouldRenderPage, shouldPrint } = this.state;\r\n\r\n    const { pagesPerSheet, direction } = printOption;\r\n    let isLandscape = (direction === \"landscape\");\r\n\r\n    const { rotation } = getCellMatrixShape(pagesPerSheet, direction);\r\n    const isRotationNeeded = rotation === 90;\r\n    if (isRotationNeeded) isLandscape = !isLandscape;\r\n\r\n    // globalPagesCnt++;\r\n    // const { startPage, endPage } = printOption;\r\n\r\n    return (\r\n      <div>\r\n        { shouldPrint ?\r\n          (\r\n            <div style={{ display: \"none\" }}>\r\n              { isLandscape ? (<LandscapeOrientation />) : (<PortraitOrientation />)}\r\n\r\n              <ReactToPrint\r\n                // key={`action-${pdf.fingerprint}-${globalPagesCnt}`}\r\n                ref={this.setPrinttRef}\r\n                content={this.reactToPrintContent}\r\n                documentTitle={this.title}\r\n                onAfterPrint={this.handleAfterPrint}\r\n                onBeforeGetContent={this.handleOnBeforeGetContent}\r\n                onBeforePrint={this.handleBeforePrint}\r\n                removeAfterPrint\r\n              // trigger={this.reactToPrintTrigger}\r\n              />\r\n              {/* <PagesForPrint ref={this.setComponentRef} text={this.state.text}\r\n                // key={`print-${pdf.fingerprint}-${globalPagesCnt}`}\r\n                pdf={pdf}\r\n                shouldRenderPage={shouldRenderPage}\r\n                OnPagePrepared={this.OnPagePrepared}\r\n                printOption={printOption}\r\n              /> */}\r\n            </div>\r\n          ) : (<></>)\r\n        }\r\n\r\n        <PagesForPrint ref={this.setComponentRef} text={this.state.text}\r\n          // key={`screen-${pdf.fingerprint}-${globalPagesCnt}`}\r\n          pdf={pdf}\r\n          pagesOverview={pagesOverview}\r\n          shouldRenderPage={shouldRenderPage}\r\n          OnPagePrepared={null}\r\n          printOption={printOption}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NeoPdf\\FileBrowser.tsx",["1314","1315","1316","1317","1318","1319","1320","1321","1322"],"import { uuidv4 } from \"../NcodePrint\";\r\n\r\nexport const _uuid: string = uuidv4();\r\nconst _fileInputId = _uuid;\r\n\r\nlet _fileOpenPromise: Promise<IFileBrowserResult> = null;\r\nlet _resolveFunc = null;\r\nlet _filename = \"\";\r\n\r\n\r\nexport type IFileBrowserResult = {\r\n  result: \"success\" | \"canceled\" | \"failed\",\r\n  file: any,\r\n  url?: any\r\n}\r\n\r\n\r\nexport async function openFileBrowser(): Promise<IFileBrowserResult> {\r\n  let result = await performClick(_fileInputId);\r\n  const file = result.file;\r\n  if (file) {\r\n    const url = URL.createObjectURL(file);\r\n    result = {\r\n      ...result,\r\n      url,\r\n    }\r\n    console.log(file.name);\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n\r\nasync function performClick(elemId): Promise<IFileBrowserResult> {\r\n  _filename = \"\";\r\n\r\n\r\n  _fileOpenPromise = new Promise(resolve => {\r\n    const elem = document.getElementById(elemId);\r\n    if (elem && document.createEvent) {\r\n      const evt = document.createEvent(\"MouseEvents\");\r\n      evt.initEvent(\"click\", true, false);\r\n      elem.dispatchEvent(evt);\r\n      _resolveFunc = resolve;\r\n\r\n      return _fileOpenPromise;\r\n    }\r\n    else {\r\n      resolve({ result: \"failed\", file: null });\r\n    }\r\n  });\r\n\r\n  return _fileOpenPromise;\r\n}\r\n\r\n\r\nasync function performClick_old(elemId): Promise<IFileBrowserResult> {\r\n  _filename = \"\";\r\n  const elem = document.getElementById(elemId);\r\n  if (elem && document.createEvent) {\r\n    _fileOpenPromise = new Promise(resolve => {\r\n      const evt = document.createEvent(\"MouseEvents\");\r\n      evt.initEvent(\"click\", true, false);\r\n      elem.dispatchEvent(evt);\r\n      _resolveFunc = resolve;\r\n    });\r\n\r\n    return _fileOpenPromise;\r\n  }\r\n\r\n  return Promise.resolve({ result: \"failed\", file: null });\r\n}\r\n\r\nexport function onSuccess(e) {\r\n  window.removeEventListener('focus', handleFocusBack);\r\n\r\n  const file = e.target.files[0];\r\n  console.log(\"OK : \" + file.name);\r\n\r\n  _filename = file.name;\r\n  e.target.value = null;\r\n\r\n  _resolveFunc({ result: \"success\", file });\r\n}\r\n\r\nfunction handleFocusBack(e) {\r\n  // console.log('focus-back');\r\n  setTimeout(() => {\r\n    if (_filename.length) {\r\n      // 이것은 time delay를 주어야 동작한다.\r\n      console.log('Files Loaded');\r\n    }\r\n    // Alert the user if the number\r\n    // of file is zero\r\n    else {\r\n      console.log('Cancel clicked');\r\n      _resolveFunc(\"\");\r\n    }\r\n  }, 300);\r\n\r\n  document.body.onfocus = null;\r\n  // window.removeEventListener('focus', handleFocusBack);\r\n}\r\n\r\nexport function onOpenClicked(e) {\r\n  document.body.onfocus = handleFocusBack;\r\n  // window.addEventListener('focus', handleFocusBack);\r\n}\r\n\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\SurfaceMapper\\Calibration\\CalibrationDialog.tsx",["1323","1324","1325","1326","1327","1328","1329","1330","1331"],"import React, { useState } from \"react\";\r\n\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Button, makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from \"@material-ui/core\";\r\nimport { t } from \"../../Locales/i18n\";\r\n\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   form: {\r\n//     display: 'flex',\r\n//     flexDirection: 'column',\r\n//     margin: 'auto',\r\n//     width: 'fit-content',\r\n//   },\r\n//   formControl: {\r\n//     marginTop: theme.spacing(2),\r\n//     minWidth: 120,\r\n//   },\r\n//   formControlLabel: {\r\n//     marginTop: theme.spacing(1),\r\n//   },\r\n// }));\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 400,\r\n  },\r\n});\r\n\r\n\r\nconst useStyles2 = makeStyles({\r\n  table: {\r\n    minWidth: 2000,\r\n  },\r\n});\r\n\r\n\r\ntype Props = {\r\n  open: boolean,\r\n  handleClose: any,\r\n  pageNo: number,\r\n}\r\n\r\n\r\n\r\n\r\nconst TAX_RATE = 0.07;\r\n\r\n\r\nfunction ccyFormat(num: number) {\r\n  return `${num.toFixed(2)}`;\r\n}\r\n\r\nfunction priceRow(qty: number, unit: number) {\r\n  return qty * unit;\r\n}\r\n\r\nfunction createRow(desc: string, qty: number, unit: number) {\r\n  const price = priceRow(qty, unit);\r\n  return { desc, qty, unit, price };\r\n}\r\n\r\ninterface Row {\r\n  desc: string;\r\n  qty: number;\r\n  unit: number;\r\n  price: number;\r\n}\r\n\r\nfunction subtotal(items: Row[]) {\r\n  return items.map(({ price }) => price).reduce((sum, i) => sum + i, 0);\r\n}\r\n\r\nconst rows = [\r\n  createRow('Paperclips (Box)', 100, 1.15),\r\n  createRow('Paper (Case)', 10, 45.99),\r\n  createRow('Waste Basket', 2, 17.99),\r\n];\r\n\r\nconst invoiceSubtotal = subtotal(rows);\r\nconst invoiceTaxes = TAX_RATE * invoiceSubtotal;\r\nconst invoiceTotal = invoiceTaxes + invoiceSubtotal;\r\n\r\ntype maxWidthType = \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\";\r\n\r\nexport default function CalibrationDialog(props: Props) {\r\n  const { open, handleClose, pageNo } = props;\r\n  const classes = useStyles();\r\n  const classes2 = useStyles2();\r\n\r\n  const handleSave = (e) => {\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    console.log(e.target.value);\r\n  }\r\n\r\n\r\n  const maxWidth = \"md\";\r\n\r\n  const img_src = \"https://www.k-voucher.kr/bbs/service/2020-09/16010263390201_1_1601026339.PNG\";\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={handleClose}\r\n        fullWidth={true}\r\n        maxWidth={maxWidth}\r\n        aria-labelledby=\"form-dialog-title\">\r\n\r\n        <DialogTitle id=\"form-dialog-title\">{t('calibration_dlg_title')}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Dialog의 Body\r\n          </DialogContentText>\r\n        </DialogContent>\r\n\r\n\r\n\r\n\r\n\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"spanning table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"center\" colSpan={3}>\r\n                  Details\r\n            </TableCell>\r\n                <TableCell align=\"right\">Price</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Desc</TableCell>\r\n                <TableCell align=\"right\">Qty.</TableCell>\r\n                <TableCell align=\"right\">Unit</TableCell>\r\n                <TableCell align=\"right\">Sum</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row) => (\r\n                <TableRow key={row.desc}>\r\n                  <TableCell>{row.desc}</TableCell>\r\n                  <TableCell align=\"right\">{row.qty}</TableCell>\r\n                  <TableCell align=\"right\">{row.unit}</TableCell>\r\n                  <TableCell align=\"right\">{ccyFormat(row.price)}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n              <TableRow>\r\n                <TableCell rowSpan={3} />\r\n                <TableCell colSpan={2}>Subtotal</TableCell>\r\n                <TableCell align=\"right\">{ccyFormat(invoiceSubtotal)}</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Tax</TableCell>\r\n                <TableCell align=\"right\">{`${(TAX_RATE * 100).toFixed(0)} %`}</TableCell>\r\n                <TableCell align=\"right\">{ccyFormat(invoiceTaxes)}</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell colSpan={2}>Total</TableCell>\r\n                <TableCell align=\"right\">{ccyFormat(invoiceTotal)}</TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes2.table} aria-label=\"spanning table\">\r\n\r\n\r\n            <TableBody>\r\n              <TableRow>\r\n                <TableCell>\r\n                  <img src={img_src} style={{ width: \"400px\", height: \"400px\" }} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <img src={img_src} style={{ width: \"400px\", height: \"400px\" }} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <img src={img_src} style={{ width: \"400px\", height: \"400px\" }} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <img src={img_src} style={{ width: \"400px\", height: \"400px\" }} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n\r\n\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            취소\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\pencomm\\pencomm_base.ts",["1332","1333","1334","1335","1336","1337","1338","1339","1340","1341","1342","1343","1344","1345","1346","1347","1348","1349","1350","1351","1352","1353","1354","1355","1356","1357"],"/// <reference types=\"web-bluetooth\" />\r\n\r\nimport {\r\n  PEN_PACKET_START,\r\n  PEN_PACKET_END,\r\n  PEN_SERVICE_UUID_16,\r\n  PEN_CHARACTERISTICS_WRITE_UUID_16,\r\n  PEN_CHARACTERISTICS_NOTIFICATION_UUID_16,\r\n  PEN_SERVICE_UUID_128,\r\n  PEN_CHARACTERISTICS_WRITE_UUID_128,\r\n  PEN_CHARACTERISTICS_NOTIFICATION_UUID_128,\r\n} from \"./pencomm_const\";\r\n\r\nimport { unescapePacket } from \"./pen_util_func\";\r\n// import * as Bluetooth from 'react-bluetooth';\r\nimport \"../types\";\r\n\r\nexport async function deviceSelectDlg(): Promise<BluetoothDevice> {\r\n  console.log(\"********* Requesting any Bluetooth Device... **********\");\r\n\r\n  let options = {\r\n    // acceptAllDevices: true,\r\n    filters: [\r\n      { services: [PEN_SERVICE_UUID_16, PEN_SERVICE_UUID_128] },\r\n      // { services: [PEN_SERVICE_UUID_128] },\r\n      { namePrefix: \"Neosmartpen\" },\r\n      { namePrefix: \"Smartpen\" }\r\n    ]\r\n  }\r\n  // let result = await Bluetooth.requestDeviceAsync(options);\r\n\r\n  let result = { device: null, type: \"null\" };\r\n\r\n  try {\r\n    // let mobileNavigatorObject: any = window.navigator;\r\n    const device = await navigator.bluetooth.requestDevice(options);\r\n    result = { type: 'success', device };\r\n  }\r\n  catch (error) {\r\n    if (error.code === 8) {\r\n      // User Cancelled\r\n      result = { device: null, type: 'cancel' };\r\n    }\r\n    throw error;\r\n  }\r\n\r\n  if (result.type === 'cancel') {\r\n    return null;\r\n  }\r\n\r\n  return result.device;\r\n}\r\n\r\nenum DEVICE_STATE {\r\n  disconnected = 0,\r\n  connecting = 1,\r\n  connected = 2,\r\n};\r\n\r\ntype GetServiceReturnType = {\r\n  service: BluetoothRemoteGATTService,\r\n  writeSocket: BluetoothRemoteGATTCharacteristic,\r\n  notifyIndicate: BluetoothRemoteGATTCharacteristic,\r\n};\r\n\r\ntype BT_UUID_DEFINITION = {\r\n  service: string | number,\r\n  write: string | number,\r\n  noti: string | number,\r\n};\r\n\r\nconst PEN_BT_UUID: { [key: string]: BT_UUID_DEFINITION } = {\r\n  // for F30, and future devices\r\n  \"new\": {\r\n    service: PEN_SERVICE_UUID_128,\r\n    write: PEN_CHARACTERISTICS_WRITE_UUID_128,\r\n    noti: PEN_CHARACTERISTICS_NOTIFICATION_UUID_128,\r\n  },\r\n\r\n  // for F51, F50, F121, F120\r\n  \"old\": {\r\n    service: PEN_SERVICE_UUID_16,\r\n    write: PEN_CHARACTERISTICS_WRITE_UUID_16,\r\n    noti: PEN_CHARACTERISTICS_NOTIFICATION_UUID_16,\r\n  }\r\n}\r\n\r\nexport class PenCommBase {\r\n\r\n  protocolHandler: ProtocolHandlerBase = null;\r\n  btDevice: BluetoothDevice = null;\r\n\r\n  _btWriteSocket: BluetoothRemoteGATTCharacteristic = null;\r\n  _btNotifyIndicate: BluetoothRemoteGATTCharacteristic = null;\r\n\r\n  // this._bluetooth_MTU = 1024;\r\n\r\n  _bt_buffer = new Uint8Array(0);\r\n  // this.modelNameString = null;\r\n\r\n  inConnecting = false;\r\n  inDisconnecting = false;\r\n  connected = false;\r\n\r\n  _state = DEVICE_STATE.disconnected;\r\n\r\n  btServer: BluetoothRemoteGATTServer = null;\r\n\r\n\r\n  /**\r\n   * \r\n   * @param protocolHandler \r\n   */\r\n  constructor(protocolHandler: ProtocolHandlerBase) {\r\n    this.protocolHandler = protocolHandler;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * \r\n   * @param uuids \r\n   * @param server \r\n   */\r\n  async getServiceProcess(uuids: BT_UUID_DEFINITION, server: BluetoothRemoteGATTServer): Promise<GetServiceReturnType> {\r\n    console.log(`  2-1. M1 getPrimaryService, connected:${server.connected}`);\r\n    const service = await server.getPrimaryService(uuids.service);\r\n\r\n    console.log(`  2-2. M1 getCharacteristic, connected:${server.connected}`);\r\n    const writeSocket = await service.getCharacteristic(uuids.write);\r\n\r\n    console.log(`  2-3. M1 getCharacteristic, connected:${server.connected}`);\r\n    const notifyIndicate = await service.getCharacteristic(uuids.noti);\r\n\r\n    return { service, writeSocket, notifyIndicate };\r\n  }\r\n\r\n\r\n  /**\r\n   * \r\n   * @param server \r\n   */\r\n  getService = async (server: BluetoothRemoteGATTServer): Promise<GetServiceReturnType> => {\r\n    let uuids = [PEN_BT_UUID.old, PEN_BT_UUID.new];\r\n    if (server.device.name === \"Smartpen dimo_d\") {\r\n      uuids = [PEN_BT_UUID.new, PEN_BT_UUID.old];\r\n    }\r\n\r\n    try {\r\n      let result = await this.getServiceProcess(uuids[0], server);\r\n      return result;\r\n    } catch (e) {\r\n      console.log(`  ==> failed`);\r\n      if (e.message.indexOf(\"No Services matching UUID\") > -1) {\r\n        let result = await this.getServiceProcess(uuids[1], server);\r\n        return result;\r\n      } else {\r\n        throw e;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * \r\n   * @param btDevice \r\n   * @param protocolStartCallback \r\n   */\r\n  connect = async (btDevice: BluetoothDevice, protocolStartCallback: Function): Promise<boolean> => {\r\n    if (this._state !== DEVICE_STATE.disconnected)\r\n      return false;\r\n\r\n    this.connected = false;\r\n    this.inConnecting = true;\r\n\r\n    let server: BluetoothRemoteGATTServer = null;\r\n    this.btServer = server;\r\n\r\n    try {\r\n      console.log(\"1. Connecting to GATT Server...\");\r\n      btDevice.addEventListener(\"gattserverdisconnected\", this.onDeviceDisconnected);\r\n      server = await btDevice.gatt.connect();\r\n    }\r\n    catch (e) {\r\n      let isBTdevice = e.message.indexOf(\"adapter\");\r\n      if (isBTdevice > -1) console.log(\"Bluetooth LE dongle is not found\");\r\n\r\n      console.error(e);\r\n      return false;\r\n    }\r\n\r\n    console.log(`2. get Service and Sockets, connected:${server.connected}`);\r\n\r\n    try {\r\n      let { writeSocket, notifyIndicate } = await this.getService(server);\r\n\r\n      console.log(\"3. Add Event listeners\");\r\n      notifyIndicate.addEventListener(\"characteristicvaluechanged\", this.onPenPacketReceived);\r\n      await notifyIndicate.startNotifications();\r\n\r\n      this.btDevice = btDevice;\r\n      this._btWriteSocket = writeSocket;\r\n      this._btNotifyIndicate = notifyIndicate;\r\n      console.log(\"BLE Connected...\");\r\n\r\n      this.connected = true;\r\n      this.inConnecting = false;\r\n\r\n\r\n    }\r\n    catch (e) {\r\n      let isBTdevice = e.message.indexOf(\"adapter\");\r\n      if (isBTdevice > -1) console.log(\"Bluetooth LE dongle is not found\");\r\n      console.error(e);\r\n      return false;\r\n    }\r\n\r\n    protocolStartCallback();\r\n    // this.protocolHandler.onPhysicallyConnected();\r\n    return true;\r\n  }\r\n\r\n\r\n  /**\r\n   * disconnect function:\r\n   */\r\n  disconnect = () => {\r\n    console.log(`     DISCONNECT operation`);\r\n    this.inDisconnecting = true;\r\n    let self = this;\r\n    if (!self.connected || self.btDevice === null) {\r\n      return;\r\n    }\r\n\r\n    if (self.btDevice !== null) {\r\n      self.btDevice.gatt.disconnect();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   */\r\n  preDisconnected = () => {\r\n    throw new Error(\"Not implemented: preDisconnected\");\r\n  }\r\n\r\n  /**\r\n   * \r\n   */\r\n  onDeviceDisconnected = () => {\r\n    this.inDisconnecting = false;\r\n    this.btDevice = null;\r\n    this.btServer = null;\r\n\r\n    this._btWriteSocket = null;\r\n    this._btNotifyIndicate = null;\r\n\r\n    this._bt_buffer = new Uint8Array(0);\r\n\r\n    // 상위로 전달\r\n    let handler = this.protocolHandler;\r\n    if (handler) handler.onDisconnected();\r\n    // this.protocolHandler = null;\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param buf \r\n   */\r\n  write = (buf: Uint8Array): Promise<void> => {\r\n    try {\r\n      return this._btWriteSocket.writeValue(buf);\r\n    }\r\n    catch (e) {\r\n      throw e;\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * PEN PACKET PROCESSOR\r\n   * \r\n   * process raw packets from pen\r\n   * slice packets in to a unit packet\r\n   * process the unit packet command code\r\n   * @param event \r\n   */\r\n  onPenPacketReceived = (event: any) => {\r\n    // console.log(\"    handle Data\");\r\n    let self = this;\r\n\r\n    const value = event.target.value;\r\n    const data_length = event.target.value.byteLength;\r\n\r\n    // 이전에 있던 buf에 concatenate\r\n    const prev_buf = self._bt_buffer;\r\n    const prev_len = prev_buf.length;\r\n    let buffer = new Uint8Array(prev_buf.length + data_length);\r\n\r\n    // https://stackoverflow.com/questions/14071463/how-can-i-merge-typedarrays-in-javascript\r\n    buffer.set(prev_buf);\r\n    for (let i = 0; i < value.byteLength; i++) {\r\n      buffer[prev_len + i] = value.getUint8(i);\r\n    }\r\n\r\n    let start = buffer.indexOf(PEN_PACKET_START);\r\n    let end = buffer.indexOf(PEN_PACKET_END);\r\n\r\n    // let idx = 0;\r\n    // let cnt = 0;\r\n\r\n    // console.log(\"packet length: \" + data_length);\r\n    while (start !== -1 && end !== -1) {\r\n      // console.log(\"   [\" + cnt + \"]  packet found: (\" + (idx + start) + \", \" + (idx + end) + \")\");\r\n\r\n      // buffer 잘라 주기\r\n      const curCmdPacket = buffer.slice(start, end + 1);\r\n      // idx += end;\r\n\r\n      // escape code 처리\r\n      const unescapedBuf = unescapePacket(curCmdPacket);\r\n\r\n      // packet 처리\r\n      if (unescapedBuf[0] === PEN_PACKET_START) {\r\n        // pen command 처리\r\n        this.protocolHandler.processUnitPacket(unescapedBuf);\r\n      } else {\r\n        // 위의 slice 처리가 이상하든지 메모리가 깨졌다.\r\n      }\r\n\r\n      // buffer 정리\r\n      // cnt++;\r\n      buffer = buffer.slice(end + 1);\r\n      start = buffer.indexOf(PEN_PACKET_START);\r\n      end = buffer.indexOf(PEN_PACKET_END);\r\n    }\r\n\r\n    self._bt_buffer = buffer;\r\n  }\r\n}\r\n\r\nexport class ProtocolHandlerBase {\r\n  onPhysicallyConnected() {\r\n    throw new Error(\"Not implemented: processUnitPacket\");\r\n\r\n  }\r\n  onDisconnected() {\r\n    throw new Error(\"Not implemented: processUnitPacket\");\r\n  }\r\n  processUnitPacket(buf) {\r\n    throw new Error(\"Not implemented: processUnitPacket\");\r\n  }\r\n}\r\n\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\pencomm\\pencomm_enum.ts",["1358","1359"],"\r\n/** @enum {string} */\r\nexport enum DeviceTypeEnum {\r\n  PEN = \"pen\",\r\n  ERASER = \"eraser\",\r\n  PLAYER = \"player\",\r\n  STYLUS = \"stylus\",\r\n  FSIR = \"fsir\",\r\n  NONE = \"none\",\r\n};\r\n\r\n\r\nexport enum PenModelEnum {\r\n  F121 = DeviceTypeEnum.PEN,\r\n  F120 = DeviceTypeEnum.PEN,\r\n  F51 = DeviceTypeEnum.PEN,\r\n  F50 = DeviceTypeEnum.PEN,\r\n  F30 = DeviceTypeEnum.PEN,\r\n\r\n  E100 = DeviceTypeEnum.ERASER,\r\n  E101 = DeviceTypeEnum.ERASER,\r\n\r\n  X100 = DeviceTypeEnum.STYLUS,\r\n};\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\pencomm\\pencomm_const.ts",[],"C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\pencomm\\pen_util_func.ts",["1360"],"\r\n/**\r\n * pen packet에 있는 escape code를 처리\r\n * @param packet \r\n */\r\nexport function unescapePacket(packet: Uint8Array): Uint8Array {\r\n  const len = packet.length;\r\n  const unescapedBuf = new Uint8Array(len);\r\n\r\n  let cnt = 0;\r\n  for (let i = 0; i < len; i++) {\r\n    if (packet[i] === 0x7d) {\r\n      unescapedBuf[cnt++] = packet[i + 1] ^ 0x20;\r\n      i++;\r\n    } else {\r\n      unescapedBuf[cnt++] = packet[i];\r\n    }\r\n  }\r\n\r\n  return unescapedBuf.subarray(0, cnt);\r\n}\r\n\r\n/**\r\n * return little endian value from start with length\r\n * @param data - byte array\r\n * @param start \r\n * @param length \r\n */\r\nexport function intFromBytes(data: Uint8Array, start: number, length: number): number {\r\n  let val = 0;\r\n  for (let i = start + length - 1; i >= start; --i) {\r\n    val += data[i];\r\n    if (i > start) {\r\n      val = val << 8;\r\n    }\r\n  }\r\n  return val;\r\n}\r\n\r\n/*\r\n\r\nexport async function sleep(ms: number) {\r\n  return new Promise(function (resolve) {\r\n    setTimeout(() => {\r\n      resolve();\r\n    }, ms);\r\n  });\r\n}\r\n\r\n\r\n/**\r\n * \r\n * @param val - integer number\r\n * @param padding - how many hex digits\r\n */\r\nexport function decimalToHex(val: number, padding: number) {\r\n  let hex = Number(val).toString(16);\r\n  padding = typeof (padding) === \"undefined\" || padding === null ? padding = 2 : padding;\r\n\r\n  while (hex.length < padding) {\r\n    hex = \"0\" + hex;\r\n  }\r\n\r\n  return hex.toUpperCase();\r\n}","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\pencomm\\pencomm_event.ts",["1361","1362","1363"],"import { DeviceTypeEnum } from \"./pencomm_enum\";\r\nimport { IPenEvent } from \"../DataStructure/Structures\";\r\n\r\nimport \"../types\";\r\n// import { convertCompilerOptionsFromJson } from \"typescript\";\r\n\r\nexport const PenEventEnum = {\r\n  PEN_UP: \"pen_up\",\r\n  PEN_MOVE: \"pen_move\",\r\n  PEN_MOVE_HOVER: \"pen_move_hover\",\r\n  PEN_DOWN: \"pen_down\",\r\n\r\n  PAGE_INFO: \"page_info\",\r\n  PAGE_INFO_HOVER: \"page_info_hover\",\r\n\r\n  PASSWORD_REQUIRED: \"pass_required\",\r\n  FIRMWARE_UPDATE_REQUIRED: \"firmware_update_needed\",\r\n\r\n  DISCONNECTED: \"disconnected\",\r\n  CONNECTED: \"connected\",\r\n  ON_CONNECTED: \"on_connected\",\r\n  ON_DISCONNECTED: \"on_disconnected\",\r\n\r\n  CODE_ERROR: \"recognize error\",\r\n  ERROR: \"error\",\r\n  NONE: \"none\"\r\n};\r\n\r\n/**\r\n * \r\n */\r\nfunction getTimeTicks(): number {\r\n  // 0.1 milliseconds tick\r\n  var d = new Date();\r\n\r\n  // https://stackoverflow.com/questions/7966559/how-to-convert-javascript-date-object-to-ticks\r\n  //\r\n  // The JavaScript Date type's origin is the Unix epoch: midnight on 1 January 1970.\r\n  // The .NET DateTime type's origin is midnight on 1 January 0001.\r\n  // var epochTicks = 621355968000000000;\r\n  // var ticks = d.getTime() * 10000 + epochTicks;\r\n  var ticks = d.getTime() * 10000;\r\n  return ticks;\r\n}\r\n\r\n\r\n/**\r\n * \r\n * @param penType \r\n * @param eventName \r\n * @param options \r\n */\r\nexport function makePenEvent(penType: DeviceTypeEnum, eventName: string, options: IPenEvent): IPenEvent {\r\n  if ( !options || options.timeStamp === undefined ) {\r\n    console.error(\"timeStamp has not been provided\");\r\n  }\r\n\r\n  let timeStamp = options.timeStamp;\r\n  // if (!timeStamp) timeStamp = getTimeTicks();\r\n\r\n  const event: IPenEvent = {\r\n    timeStamp,\r\n    event: eventName,\r\n    systemTime: getTimeTicks(),\r\n    penType,\r\n    isFirstDot: false,\r\n    ...options,\r\n  };\r\n\r\n  return event;\r\n}\r\n\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NeoPdf\\NeoPdfDocument.ts",["1364","1365","1366","1367","1368","1369","1370","1371","1372","1373","1374","1375","1376","1377","1378","1379","1380","1381","1382"],"import * as PdfJs from \"pdfjs-dist\";\r\nimport { CoordinateTanslater, IPolygonArea } from \"../Coordinates\";\r\nimport { stringToDpiNum, } from \"../DataStructure/Structures\";\r\nimport { getDocumentId, } from \"../NcodePrint\";\r\nimport { IPageOverview } from \"../NcodePrint/PagesForPrint\";\r\nimport { ColorConvertMethod } from \"../NcodeSurface/CanvasColorConverter\";\r\nimport { getNcodeAtCanvasPixel, getNcodeRectAtCanvasPixel, ICellsOnSheetDesc } from \"../NcodeSurface/NcodeRasterizer\";\r\nimport { MappingItem } from \"../SurfaceMapper/MappingItem\";\r\nimport MappingStorage from \"../SurfaceMapper/MappingStorage\";\r\nimport NeoPdfPage, { IPdfPageCanvasDesc, PDF_VIEWPORT_DESC } from \"./NeoPdfPage\";\r\n\r\nPdfJs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${PdfJs.version}/pdf.worker.js`;\r\nvar CMAP_URL = \"./cmaps/\";\r\nvar CMAP_PACKED = true;\r\n\r\nexport type IGetDocumentOptions = {\r\n  url?: string,\r\n  fingerprint?: string,\r\n  cMapUrl?: string,\r\n  cMapPacked?: boolean,\r\n}\r\n\r\nexport type IPdfDocDesc = {\r\n  /** PDF url */\r\n  url: string,\r\n\r\n  /** PDF finger print */\r\n  fingerprint: string,\r\n\r\n  /** POD id = fingerprint + \"/\" + pagesPerSheet */\r\n  id: string,\r\n\r\n  /** total pages in pdf file */\r\n  numPages: number,\r\n};\r\n\r\n\r\n\r\n\r\nexport default class NeoPdfDocument {\r\n  _pdfDoc: PdfJs.PDFDocumentProxy = null;\r\n\r\n  _ready: PdfJs.PDFLoadingTask<PdfJs.PDFDocumentProxy>;\r\n\r\n  _url: string;\r\n\r\n  _fingerprint: string;\r\n\r\n  _id: string;\r\n\r\n  private _pages: NeoPdfPage[];\r\n\r\n  pagesOverview: IPageOverview[];\r\n\r\n  direction: \"portrait\" | \"landscape\";\r\n\r\n  load = async (options: IGetDocumentOptions) => {\r\n    await this.justLoad(options);\r\n\r\n    // const { url, cMapUrl, cMapPacked } = options;\r\n\r\n    // this._url = url;\r\n    // this._ready = PdfJs.getDocument(\r\n    //   {\r\n    //     url: url,\r\n    //     cMapUrl: cMapUrl ? cMapUrl : CMAP_URL,\r\n    //     cMapPacked: cMapPacked ? cMapPacked : CMAP_PACKED,\r\n    //   });\r\n\r\n    // const _pdfDoc = await this._ready.promise;\r\n    // this._pdfDoc = _pdfDoc;\r\n    // this._fingerprint = _pdfDoc.fingerprint;\r\n\r\n    // page를 로드한다\r\n    this._pages = [];\r\n    for (let i = 1; i <= this._pdfDoc.numPages; i++) {\r\n      const neoPage = new NeoPdfPage(this, i);\r\n      this._pages.push(neoPage);\r\n    }\r\n\r\n    await this.setPageOverview(this);\r\n    return this;\r\n  }\r\n\r\n  destroy = () => {\r\n    this._pages = [];\r\n    this._pdfDoc.destroy();\r\n  }\r\n\r\n  justLoad = async (options: IGetDocumentOptions) => {\r\n    const { url, cMapUrl, cMapPacked } = options;\r\n\r\n    this._url = url;\r\n    this._ready = PdfJs.getDocument(\r\n      {\r\n        url: url,\r\n        cMapUrl: cMapUrl ? cMapUrl : CMAP_URL,\r\n        cMapPacked: cMapPacked ? cMapPacked : CMAP_PACKED,\r\n      });\r\n\r\n    const pdfDoc = await this._ready.promise;\r\n    this._pdfDoc = pdfDoc;\r\n    this._fingerprint = pdfDoc.fingerprint;\r\n\r\n    return this;\r\n  }\r\n\r\n  get numPages() {\r\n    return this._pdfDoc.numPages;\r\n  }\r\n\r\n  get url() {\r\n    return this._url;\r\n  }\r\n\r\n  get fingerprint() {\r\n    return this._fingerprint;\r\n  }\r\n\r\n  getPageAsync = async (pageNo: number) => {\r\n    await this._pages[pageNo - 1]._ready;\r\n    return this._pages[pageNo - 1];\r\n  }\r\n\r\n  /** page가 로드된 것이 확실할 때만 쓸 것! */\r\n  getPage = (pageNo: number) => {\r\n    if (!this._pages[pageNo - 1]._loaded) {\r\n      throw new Error(`PDF page ${pageNo} has not been loaded`);\r\n    }\r\n\r\n    return this._pages[pageNo - 1];\r\n  }\r\n\r\n  getMetadata = async () => {\r\n    return this._pdfDoc.getMetadata();\r\n  }\r\n\r\n  public renderPages_dpi = async (pageNums: number[], dpi: number, colorConvertMode?: ColorConvertMethod)\r\n    : Promise<IPdfPageCanvasDesc[]> => {\r\n    const pdfDpi = dpi;\r\n\r\n    const promises: Promise<IPdfPageCanvasDesc>[] = [];\r\n    for (let i = 0; i < pageNums.length; i++) {\r\n      const pageNo = pageNums[i];\r\n      const neoPage = await this.getPageAsync(pageNo);\r\n      const pr = neoPage.render_dpi(i, pdfDpi).then(async (canvasDesc) => {\r\n        return await neoPage.convertColor(canvasDesc, colorConvertMode);\r\n      })\r\n      promises.push(pr);\r\n    }\r\n    const descs = await Promise.all(promises);\r\n\r\n    const pageImageDescs: IPdfPageCanvasDesc[] = new Array(descs.length);\r\n    descs.forEach(async (canvasDesc) => {\r\n      const { index } = canvasDesc;\r\n      pageImageDescs[index] = canvasDesc;\r\n      // console.log(`[Multipage] page rendered ${canvasDesc.pdfPageInfo.pageNo}, index ${index}`);\r\n    });\r\n\r\n    // let converterPromises = [];\r\n    // descs.forEach(async (canvasDesc) => {\r\n    //   const { index } = canvasDesc;\r\n    //   pageImageDescs[index] = canvasDesc;\r\n\r\n    //   const pdfCanvas = canvasDesc.canvas;\r\n    //   const converter = new CanvasColorConverter(pdfCanvas);\r\n    //   const pr = converter.convert(colorConvertMode);\r\n    //   converterPromises.push(pr);\r\n    // });\r\n    return pageImageDescs;\r\n  }\r\n\r\n\r\n  registerMappingItem = (pageImagesDesc: IPdfPageCanvasDesc[], ncodePlane: ICellsOnSheetDesc, assignNewCode: boolean) => {\r\n    for (let i = 0; i < ncodePlane.ncodeAreas.length; i++) {\r\n      const desc = pageImagesDesc[i];\r\n      const pdfRect = desc.drawnRect;\r\n      const ncode = ncodePlane.ncodeAreas[i];\r\n\r\n      const mapData = new MappingItem();\r\n\r\n      /** canvas 좌표계 */\r\n      const { x, y, unit, width, height } = pdfRect;\r\n      const dpi = stringToDpiNum(unit);\r\n\r\n      /** Ncode 좌표계 */\r\n      const pt0_nu = getNcodeAtCanvasPixel({ x, y, dpi }, ncodePlane);\r\n      const pt1_nu = getNcodeAtCanvasPixel({ x: x + width, y: y + height, dpi }, ncodePlane);\r\n\r\n      const pdfRect_nu = getNcodeRectAtCanvasPixel({ dpi, x, y, width, height }, ncodePlane);\r\n\r\n      /** 페이지에 해당하는 ncode가 인쇄된 영역 */\r\n      const r_nu = ncode.rect;\r\n      const polygon: IPolygonArea = [\r\n        { x: r_nu.x, y: r_nu.y },\r\n        { x: r_nu.x + r_nu.width, y: r_nu.y },\r\n        { x: r_nu.x + r_nu.width, y: r_nu.y + r_nu.height },\r\n        { x: r_nu.x, y: r_nu.y + r_nu.height },\r\n      ];\r\n\r\n      mapData.setNcodeArea({\r\n        pageInfo: ncode.pageInfo,\r\n        pdfDrawnRect: { ...pdfRect_nu },\r\n        npageArea: polygon,\r\n      });\r\n\r\n\r\n      /** PDF 좌표계 */\r\n      mapData.setPdfArea({\r\n        pdfPageInfo: { ...desc.pdfPageInfo },\r\n        rect: {\r\n          unit: \"pu\",\r\n          x: 0, y: 0,\r\n          width: desc.width_pu,\r\n          height: desc.height_pu,\r\n        }\r\n      });\r\n\r\n      const trans = new CoordinateTanslater();\r\n      trans.calc(mapData);\r\n      const pageNo = desc.pdfPageInfo.pageNo;\r\n      const page = this.getPage(pageNo);\r\n      page.setTranslater(trans);\r\n\r\n      if (assignNewCode) {\r\n        const st = MappingStorage.getInstance();\r\n        st.register(trans);\r\n\r\n\r\n      }\r\n      // trans.dump(`[dump-${this._url}]-${i} `);\r\n    }\r\n\r\n    if (assignNewCode) {\r\n      const st = MappingStorage.getInstance();\r\n      // st.dump(\"MAP\");\r\n    }\r\n  }\r\n\r\n  setDocumentId = (pagesPerSheet: number) => {\r\n    this._id = getDocumentId(this._fingerprint, pagesPerSheet);\r\n  }\r\n\r\n  get id() {\r\n    return this._id;\r\n  }\r\n\r\n  setPageOverview = async (pdf) => {\r\n    // const pdf = this.props.pdf;\r\n    this.pagesOverview = new Array(pdf.numPages + 1);\r\n    // const { pagesPerSheet } = this.printOption;\r\n\r\n    let numPortraitPages = 0;\r\n    let numLandscapePages = 0;\r\n\r\n    for (let i = 0; i < pdf.numPages; i++) {\r\n      const page = await pdf.getPageAsync(i + 1);\r\n      const vpt: PDF_VIEWPORT_DESC = page.getViewport({ scale: 1, rotation: 0 });\r\n      const { width, height } = vpt;\r\n\r\n      const landscape = width > height;\r\n      landscape ? numLandscapePages++ : numPortraitPages++;\r\n\r\n      const pageOverview = {\r\n        rotation: vpt.rotation,\r\n        landscape,\r\n        sizePu: { width, height },\r\n      }\r\n      this.pagesOverview[i] = pageOverview;\r\n    }\r\n\r\n\r\n    if (numPortraitPages >= numLandscapePages) {\r\n      this.direction = \"portrait\";\r\n    } else {\r\n      this.direction = \"landscape\";\r\n    }\r\n\r\n    return this.direction;\r\n  }\r\n}\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\SurfaceSplitter.ts",["1383","1384","1385"],"\r\nimport { IRectDpi, ISize } from \"../DataStructure/Structures\";\r\nimport { IPrintOption, MediaSize } from \"../NcodePrint/PrintDataTypes\";\r\nimport { IAreasDesc } from \"./NcodeRasterizer\";\r\nimport { getSurfaceSize_px_600dpi } from \"./SurfaceInfo\";\r\n// import { isPortrait } from \"./SurfaceInfo\";\r\nexport const PAGES_CELL_SPACING = 120; // 600dpi px, 5.08mm\r\n\r\n// http://www.javascripter.net/math/primes/factorization.htm\r\nfunction factor(n: number) {\r\n  if (isNaN(n) || !isFinite(n) || n % 1 !== 0 || n === 0) return '' + n;\r\n  if (n < 0) return '-' + factor(-n);\r\n  let minFactor = leastFactor(n);\r\n  if (n === minFactor) return n;\r\n\r\n  const recursive = factor(n / minFactor);\r\n  // console.log(`[recursive] ${typeof recursive}`);\r\n\r\n  return [minFactor].concat(recursive);\r\n}\r\n\r\n// find the least factor in n by trial division\r\nfunction leastFactor(n: number) {\r\n  if (isNaN(n) || !isFinite(n)) return NaN;\r\n  if (n === 0) return 0;\r\n  if (n % 1 || n * n < 2) return 1;\r\n  if (n % 2 === 0) return 2;\r\n  if (n % 3 === 0) return 3;\r\n  if (n % 5 === 0) return 5;\r\n  let m = Math.sqrt(n);\r\n  for (let i = 7; i <= m; i += 30) {\r\n    if (n % i === 0) return i;\r\n    if (n % (i + 4) === 0) return i + 4;\r\n    if (n % (i + 6) === 0) return i + 6;\r\n    if (n % (i + 10) === 0) return i + 10;\r\n    if (n % (i + 12) === 0) return i + 12;\r\n    if (n % (i + 16) === 0) return i + 16;\r\n    if (n % (i + 22) === 0) return i + 22;\r\n    if (n % (i + 24) === 0) return i + 24;\r\n  }\r\n  return n;\r\n}\r\n\r\nfunction findBestCombination(factored: number[]) {\r\n  let min_left = 1, min_right = 1;\r\n\r\n  const reducer = (mul: number, curr: number) => mul * curr;\r\n\r\n  for (let i = 1; i < factored.length; i++) {\r\n    const left = factored.slice(0, i).reduce(reducer, 1);\r\n    const right = factored.slice(i, factored.length + 1).reduce(reducer, 1);\r\n\r\n    if (left > right) break;\r\n    min_left = left;\r\n    min_right = right;\r\n  }\r\n\r\n  return [min_left, min_right];\r\n}\r\n\r\nfunction findRotation(rows: number, cols: number, srcDirection: string): number {\r\n  const srcSize = getSurfaceSize_px_600dpi(MediaSize.A4, srcDirection === \"landscape\");\r\n  let rotation = 0;\r\n\r\n  const cellSize = {\r\n    width: srcSize.width / cols,\r\n    height: srcSize.height / rows,\r\n  };\r\n\r\n  let cellSize_90 = {\r\n    width: srcSize.height / cols,\r\n    height: srcSize.width / rows,\r\n  };\r\n\r\n  if (srcDirection === \"landscape\") {\r\n    cellSize_90 = {\r\n      width: srcSize.height / rows,\r\n      height: srcSize.width / cols,\r\n    };\r\n  }\r\n\r\n\r\n  const scale_x = cellSize.width / srcSize.width;\r\n  const scale_y = cellSize.height / srcSize.width;\r\n  const scale_normal = Math.min(scale_x, scale_y);\r\n\r\n  const scale_rev_x = cellSize_90.width / srcSize.width;\r\n  const scale_rev_y = cellSize_90.height / srcSize.height;\r\n  const scale_rev = Math.min(scale_rev_x, scale_rev_y);\r\n\r\n  if (scale_rev > scale_normal) {\r\n    rotation = 90;\r\n  }\r\n\r\n  return rotation;\r\n}\r\n\r\n\r\nexport function getCellMatrixShape(numItems: number, srcDirection: string): { rows: number, cols: number, rotation: number } {\r\n  const factored = [1].concat(factor(numItems));\r\n  let [rows, cols] = findBestCombination(factored);\r\n\r\n  let rotation = findRotation(rows, cols, srcDirection);\r\n\r\n  /**\r\n   * 정수 제곱 개의 cell을 가지는 경우에는 90도 돌려서 출력할 필요 없음\r\n   */\r\n  if (numItems === 1) { rows = 1; cols = 1; rotation = 0; }\r\n  else if (numItems === 4) { rows = 2; cols = 2; rotation = 0; }\r\n  else if (numItems === 9) { rows = 3; cols = 3; rotation = 0; }\r\n  else if (numItems === 16) { rows = 4; cols = 4; rotation = 0; }\r\n  else if (numItems === 25) { rows = 5; cols = 5; rotation = 0; }\r\n  /**\r\n   * 아래의 면분할 숫자들은, 각 cell을 출력할 때 90도 돌려서 출력\r\n   * 90도 돌려서 출력하는 것은 ctx.rotate를 쓰도록 한다.\r\n   *    ctx.save();\r\n   *    ctx.translate(canvas.width, 0);\r\n   *    ctx.rotate( -90 * Math.PI/180);\r\n   *    ... drawing operation ...\r\n   *    ctx.restore();\r\n   *\r\n   * rows, cols는 90도 돌아갔다고 가정하고 나눈 면을 뜻한다.\r\n   *\r\n   *    r=1, c=1\r\n   *    +-----+           r=1, c=2\r\n   *    |     |           +---+---+\r\n   *    |  1  |     =>    | 1 | 2 |\r\n   *    |     |           +---+---+\r\n   *    +-----+\r\n   */\r\n  else if (numItems === 2) { rows = 1; cols = 2; rotation = 90; }\r\n  else if (numItems === 8) { rows = 2; cols = 4; rotation = 90; }\r\n  else if (numItems === 18) { rows = 3; cols = 6; rotation = 90; }\r\n  else if (numItems === 32) { rows = 4; cols = 8; rotation = 90; }\r\n\r\n  // else if (numItems === 3) { rows = 1; cols = 3; rotation = 90; }\r\n\r\n  return { rows, cols, rotation };\r\n}\r\n\r\nexport function devideSurfaceAreaTo(printOptions: IPrintOption, szSrc: ISize, numItems: number)\r\n  : IAreasDesc {\r\n  const cellSpace = PAGES_CELL_SPACING;\r\n\r\n  let { rows, cols, rotation } = getCellMatrixShape(numItems, printOptions.direction);\r\n\r\n  // if (rotation === 90) {\r\n  //   const { width, height } = szSrc;\r\n  //   szSrc = { width: height, height: width };\r\n  // }\r\n\r\n  // sheet가 landscape이면 면을 나누는 row, col을 바꾼다.\r\n  if (printOptions.direction === \"landscape\") {\r\n    const temp = rows;\r\n    rows = cols;\r\n    cols = temp;\r\n  }\r\n\r\n  const rcSrc = { x: 0, y: 0, ...szSrc };\r\n  const areas: IRectDpi[] = devideSurfaceAreaToMxN(rcSrc, rows, cols, cellSpace);\r\n  return { rotation, areas };\r\n}\r\n\r\n\r\n\r\nfunction devideSurfaceAreaToMxN(rcSrc: IRectDpi, rows: number, cols: number, cellSpace: number): IRectDpi[] {\r\n  const retAreas = [];\r\n  const areas = devideVertical(rcSrc, rows, cellSpace);\r\n\r\n  for (let row = 0; row < rows; row++) {\r\n    const cells = devideHorizontal(areas[row], cols, cellSpace);\r\n    retAreas.push(...cells);\r\n  }\r\n\r\n  return retAreas;\r\n}\r\n\r\n\r\n/**\r\n * 영역 세로로 나누기 ( cellSpace 만큼 띄우고)\r\n */\r\nfunction devideVertical(rcSrc: IRectDpi, numItems: number, cellSpace: number): IRectDpi[] {\r\n  const areas: IRectDpi[] = new Array(0);\r\n\r\n  const width = rcSrc.width;\r\n  const height = (rcSrc.height - cellSpace * (numItems - 1)) / numItems;\r\n\r\n  const x = rcSrc.x\r\n  let y = rcSrc.y\r\n  for (let i = 0; i < numItems; i++) {\r\n    const rc = {\r\n      x: Math.floor(x),\r\n      y: Math.floor(y),\r\n      width: Math.floor(width),\r\n      height: Math.floor(height),\r\n    };\r\n    areas.push(rc);\r\n    y += height + cellSpace;\r\n  }\r\n\r\n  return areas;\r\n}\r\n\r\n\r\n\r\n/**\r\n * 영역 가로로 나누기 ( cellSpace 만큼 띄우고)\r\n */\r\nfunction devideHorizontal(rcSrc: IRectDpi, numItems: number, cellSpace: number): IRectDpi[] {\r\n  const areas: IRectDpi[] = new Array(0);\r\n\r\n  const width = (rcSrc.width - cellSpace * (numItems - 1)) / numItems;\r\n  const height = rcSrc.height;\r\n\r\n  let x = rcSrc.x\r\n  const y = rcSrc.y\r\n  for (let i = 0; i < numItems; i++) {\r\n    const rc = {\r\n      x: Math.floor(x),\r\n      y: Math.floor(y),\r\n      width: Math.floor(width),\r\n      height: Math.floor(height),\r\n    };\r\n    areas.push(rc);\r\n    x += width + cellSpace;\r\n  }\r\n\r\n  return areas;\r\n}\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\UtilFunc.ts",["1386","1387","1388","1389","1390","1391"],"export function compareObject(curr: Object, next: Object, header: string = \"\") {\r\n  for (const [key, value] of Object.entries(next)) {\r\n    if (curr[key] !== value) {\r\n      console.log(`[${header}] state[${key}] was changed, from \"${curr[key]} to \"${value}\"`);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function uuidv4(): string {\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n    // let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n    let r = Math.random() * 16 | 0, v = c === 'x' ? r : ((r & 0x3) | 0x8);\r\n    return v.toString(16);\r\n  });\r\n}\r\n\r\n\r\nexport function getDocumentId(fingerprint: string, pagesPerSheet: number): string {\r\n  return fingerprint + \"/\" + pagesPerSheet.toString();\r\n}\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\neosmartpen\\renderer\\pdf\\Page.tsx",["1392","1393","1394","1395","1396","1397","1398","1399","1400","1401","1402","1403","1404","1405","1406","1407","1408","1409","1410","1411","1412","1413","1414","1415","1416","1417","1418","1419","1420","1421","1422","1423","1424","1425","1426","1427","1428","1429","1430","1431"],"/// <reference types=\"pdfjs-dist\" />\r\n\r\nimport React, { Component } from 'react';\r\nimport { pdfSizeToDIsplayPixel } from \"../../utils/UtilsFunc\";\r\n\r\nimport \"pdfjs-dist\";\r\nimport * as PdfJs from \"pdfjs-dist\";\r\n\r\n\r\n/**\r\n * Page.js\r\n * Component rendering page of PDF\r\n **/\r\n\r\ninterface PageProps {\r\n  pdf: PdfJs.PDFDocumentProxy,\r\n  index: number,\r\n  scale?: number,\r\n  position: { offsetX: number, offsetY: number, zoom: number },\r\n}\r\n\r\ninterface PageState {\r\n  status: string,\r\n  page: PdfJs.PDFPageProxy | null,\r\n  width: number,\r\n  height: number,\r\n  imgSrc: string,\r\n  renderCount: number;\r\n}\r\n\r\nclass Page extends Component<PageProps> {\r\n  state: PageState = {\r\n    status: 'N/A',\r\n    page: null,\r\n    width: 0,\r\n    height: 0,\r\n    imgSrc: URL.createObjectURL(new Blob()),\r\n    renderCount: 0,\r\n  };\r\n\r\n  canvas: HTMLCanvasElement | null = null;\r\n  inRendering: boolean = false;\r\n  inImageRendering: boolean = false;\r\n\r\n  scaleCanvas(canvas: HTMLCanvasElement, width: number, height: number, zoom: number) {\r\n    // assume the device pixel ratio is 1 if the browser doesn't specify it\r\n    const devicePixelRatio = window.devicePixelRatio || 1;\r\n    const context = canvas.getContext('2d');\r\n\r\n    // determine the 'backing store ratio' of the canvas context\r\n    const backingStoreRatio = 1;\r\n    // (\r\n    //   context.webkitBackingStorePixelRatio ||\r\n    //   context.mozBackingStorePixelRatio ||\r\n    //   context.msBackingStorePixelRatio ||\r\n    //   context.oBackingStorePixelRatio ||\r\n    //   context.backingStorePixelRatio || 1\r\n    // );\r\n\r\n    // determine the actual ratio we want to draw at\r\n    const ratio = devicePixelRatio * zoom / backingStoreRatio;\r\n\r\n    if (devicePixelRatio !== backingStoreRatio) {\r\n      // set the 'real' canvas size to the higher width/height\r\n      canvas.width = width * ratio;\r\n      canvas.height = height * ratio;\r\n\r\n      // ...then scale it back down with CSS\r\n      canvas.style.width = width + 'px';\r\n      canvas.style.height = height + 'px';\r\n    }\r\n    else {\r\n      // this is a normal 1:1 device; just scale it simply\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      canvas.style.width = '';\r\n      canvas.style.height = '';\r\n    }\r\n\r\n    // scale the drawing context so everything will work at the higher ratio\r\n    context.scale(ratio, ratio);\r\n  }\r\n\r\n\r\n  shouldComponentUpdate(nextProps: PageProps, nextState: PageState) {\r\n    const ret = this.state.status !== nextState.status || this.state.renderCount !== nextState.renderCount || this.state.page !== nextState.page;\r\n    const zoomChanged = nextProps.position.zoom !== this.props.position.zoom;\r\n    const imageChanged = nextState.imgSrc !== this.state.imgSrc;\r\n\r\n    if (zoomChanged) {\r\n      this.renderPage(this.state.page, nextProps.position.zoom);\r\n      return false;\r\n    }\r\n\r\n    const pdfChanged = this.props.pdf !== nextProps.pdf;\r\n    if (pdfChanged) {\r\n      this._update(nextProps.pdf);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n    // return ret || zoomChanged || imageChanged;\r\n  }\r\n\r\n  componentDidUpdate(nextProps: PageProps) {\r\n    // this._update(nextProps.pdf);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { pdf } = this.props;\r\n    this._update(pdf);\r\n  }\r\n\r\n  setCanvasRef = (canvas: HTMLCanvasElement) => {\r\n    this.canvas = canvas;\r\n  };\r\n\r\n  /**\r\n   *\r\n   */\r\n  _update = (pdf: PdfJs.PDFDocumentProxy) => {\r\n    if (pdf) {\r\n      this._loadPage(pdf);\r\n    } else {\r\n      this.setState({ status: 'loading' });\r\n    }\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param page\r\n   * @param zoom\r\n   */\r\n  renderPage = (page: PdfJs.PDFPageProxy, zoom: number) => {\r\n    if (!this.inRendering) {\r\n      this._renderPage(page);\r\n    }\r\n    if (!this.inImageRendering) {\r\n      // this.renderPageToImage(page, zoom);\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  _loadPage = (pdf: PdfJs.PDFDocumentProxy) => {\r\n    if (this.state.status === 'rendering') return;\r\n\r\n    pdf.getPage(this.props.index).then(\r\n      (page) => {\r\n        this.setState({ page, status: 'rendering' });\r\n        this.renderPage(page, this.props.position.zoom);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n\r\n  renderPageToImage = (page: PdfJs.PDFPageProxy, zoom: number): HTMLImageElement => {\r\n    let img = document.createElement(\"img\");\r\n    var canvas = document.createElement(\"canvas\");\r\n\r\n    this.inImageRendering = true;\r\n\r\n    console.log(this.props);\r\n    // let { scale } = this.props;\r\n\r\n    // let aa = 2;\r\n\r\n    let viewport: any = page.getViewport({ scale: 1 });\r\n    let { width, height } = viewport;\r\n\r\n    let size = { width, height };\r\n    const displaySize = pdfSizeToDIsplayPixel(size);\r\n    const new_scale = displaySize.width / viewport.width;\r\n\r\n    viewport = page.getViewport({ scale: new_scale });\r\n\r\n    let ctx = canvas.getContext('2d');\r\n\r\n    // scaleCanvas(canvas, ctx, width, height);\r\n    this.scaleCanvas(canvas, displaySize.width, displaySize.height, zoom);\r\n\r\n    ctx.save();\r\n    ctx.fillStyle = \"rgba(255, 255, 255, 255)\";     // 투명 캔버스\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n    console.log(viewport);\r\n    ctx.restore();\r\n\r\n    let renderTask = page.render({\r\n      canvasContext: ctx,\r\n      viewport,\r\n      // intent: \"print\",\r\n    });\r\n\r\n    let self = this;\r\n    renderTask.promise.then(() => {\r\n      self.setState({ status: 'rendered', page, width, height });\r\n\r\n      const canvasAny: any = canvas;\r\n      if (\"toBlob\" in canvasAny) {\r\n        canvasAny.toBlob(function (blob) {\r\n          self.setState({ imgSrc: URL.createObjectURL(blob) });\r\n        });\r\n      } else {\r\n        self.setState({ imgSrc: canvasAny.toDataURL() });\r\n      }\r\n\r\n      // self.setState({ status: 'rendered', page, width, height });\r\n\r\n      this.inImageRendering = false;\r\n    });\r\n\r\n    return img;\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   */\r\n  _renderPage = (page: PdfJs.PDFPageProxy) => {\r\n    // return;\r\n    this.inRendering = true;\r\n\r\n    console.log(this.props);\r\n    // let { scale } = this.props;\r\n\r\n    // let aa = 2;\r\n\r\n    let viewport: any = page.getViewport({ scale: 1 });\r\n    let { width, height } = viewport;\r\n    let canvas = this.canvas;\r\n\r\n    let size = { width, height };\r\n    const displaySize = pdfSizeToDIsplayPixel(size);\r\n    const new_scale = displaySize.width / viewport.width;\r\n\r\n    viewport = page.getViewport({ scale: new_scale });\r\n    // viewport.viewBox[2] = 100;\r\n    let ctx = canvas.getContext('2d');\r\n\r\n    // scaleCanvas(canvas, ctx, width, height);\r\n    this.scaleCanvas(canvas, displaySize.width, displaySize.height, this.props.position.zoom);\r\n    console.log(viewport);\r\n\r\n    let renderTask = page.render({\r\n      canvasContext: ctx,\r\n      viewport,\r\n      // intent: \"print\",\r\n    });\r\n\r\n    let self = this;\r\n    renderTask.promise.then(() => {\r\n      let renderCount = this.state.renderCount + 1;\r\n      self.setState({ status: 'rendered', page, width, height, renderCount });\r\n      this.inRendering = false;\r\n    });\r\n  }\r\n\r\n  render = () => {\r\n    let { status } = this.state;\r\n\r\n    return (\r\n      <div className={`pdf-page ${status}`} >\r\n        {/* <img src={this.state.imgSrc} /> */}\r\n        <canvas ref={this.setCanvasRef} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport { Page };","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PagesForPrint.tsx",["1432","1433","1434","1435","1436","1437","1438","1439","1440","1441","1442","1443","1444","1445","1446"],"import React from \"react\";\r\n\r\nimport { PageForPrint } from \"./PageForPrint\";\r\nimport \"./print.css\";\r\n\r\nimport { ISize } from \"../DataStructure/Structures\";\r\nimport { IPrintOption } from \"./PrintDataTypes\";\r\nimport NeoPdfDocument from \"../NeoPdf/NeoPdfDocument\";\r\nimport { PDF_VIEWPORT_DESC } from \"../NeoPdf/NeoPdfPage\";\r\n\r\ninterface Props { // tslint:disable-line interface-over-type-literal\r\n  text: string,\r\n  pdf: NeoPdfDocument,\r\n  shouldRenderPage: boolean,\r\n  /** null이면 화면 전용 */\r\n  OnPagePrepared: Function,\r\n\r\n  printOption: IPrintOption,\r\n\r\n  pagesOverview: IPageOverview[],\r\n\r\n};\r\n\r\ntype State = {\r\n  renderState: string,\r\n};\r\n\r\nexport type IPageOverview = {\r\n  rotation: number,\r\n\r\n  /** pdf의 viewport가 rotation 0일 때의 크기로 판단(rotation은 고려하지 않음) */\r\n  landscape: boolean,\r\n\r\n  /** pdf의 viewport의 rotation은 고려하지 않음, 각 페이지에서 rotation된 것으로 rendering */\r\n  sizePu: ISize,\r\n}\r\n\r\nexport class PagesForPrint extends React.Component<Props, State> {\r\n\r\n  printOption: IPrintOption = null;\r\n\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.printOption = this.props.printOption;\r\n    this.state = {\r\n      renderState: \"rendering\",\r\n    };\r\n    // console.time('Function #1');\r\n  }\r\n\r\n  setPageOverview_old = async (pdf) => {\r\n    this.setState({\r\n      renderState: \"ready\",\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.pdf) {\r\n      this.setPageOverview_old(this.props.pdf);\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps: Props, nextState: State) {\r\n\r\n    if (this.state.renderState !== \"ready\" && nextState.renderState === \"ready\") {\r\n      return true;\r\n    }\r\n\r\n    if (this.props.pdf !== nextProps.pdf) {\r\n      console.log(`[yyy] setPageOverview_old called`);\r\n      this.setPageOverview_old(nextProps.pdf);\r\n      return true;\r\n    }\r\n\r\n\r\n    return false;\r\n  }\r\n\r\n  componentDidUpdate(nextProps, nextState) {\r\n    // console.log(\"[xxx] PagesForPrint componentDidUpdate\");\r\n  }\r\n\r\n  public render() {\r\n    const { renderState } = this.state;\r\n    const { pdf, OnPagePrepared, pagesOverview } = this.props;\r\n\r\n    const printOption = this.printOption;\r\n    const { pagesPerSheet, targetPages, } = printOption;\r\n\r\n    const numPages = targetPages.length;\r\n    const numSheets = Math.ceil(numPages / pagesPerSheet);\r\n    const pageNumsInSheet: number[][] = new Array(numSheets);\r\n\r\n\r\n    for (let i = 0; i < numSheets; i++) {\r\n      pageNumsInSheet[i] = new Array(0);\r\n\r\n      for (let j = 0; j < pagesPerSheet && (i * pagesPerSheet + j) < numPages; j++) {\r\n        const pageNo = targetPages[i * pagesPerSheet + j];\r\n        pageNumsInSheet[i].push(pageNo);\r\n      }\r\n    }\r\n\r\n\r\n    return (\r\n      // <div className=\"relativeCSS\">\r\n      <div>\r\n        {renderState === \"ready\" ? pageNumsInSheet.map(\r\n          (v, i) => {\r\n            // console.log(`Page displaying ${i}`);\r\n            return (\r\n              <div>\r\n                {/* { isLandscape ? (<LandscapeOrientation />) : (<PortraitOrientation />)} */}\r\n                { console.log(`[key] page-${pdf.fingerprint}-${i}`)}\r\n\r\n                <PageForPrint\r\n                  pdf={pdf}\r\n                  sheetIndex={i}\r\n                  key={`page-${pdf.fingerprint}-${i}`}\r\n                  name={`page-${pdf.fingerprint}-${i}`}\r\n                  OnPagePrepared={OnPagePrepared}\r\n                  printOption={printOption}\r\n                  pageNums={pageNumsInSheet[i]}\r\n                  pagesOverview={pagesOverview}\r\n                />\r\n              </div>\r\n            )\r\n          }\r\n        ) : <></>}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PageOrientation.jsx",["1447","1448"],"import React from \"react\";\r\n\r\nexport const PortraitOrientation = () => (\r\n  <style type=\"text/css\">\r\n    {\"@media print{@page {size: portrait; margin:0}}\"}\r\n  </style>\r\n);\r\n\r\nexport const LandscapeOrientation = () => (\r\n  <style type=\"text/css\">\r\n    {\"@media print{@page {size: landscape; margin:0}}\"}\r\n  </style>\r\n);\r\n\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NeoPdf\\NeoPdfPage.ts",["1449","1450","1451","1452","1453","1454","1455","1456"],"import * as PdfJs from \"pdfjs-dist\";\r\nimport { CoordinateTanslater, IPdfPageDesc } from \"../Coordinates\";\r\nimport { IRectDpi,  } from \"../DataStructure/Structures\";\r\nimport { uuidv4 } from \"../NcodePrint\";\r\nimport { CanvasColorConverter } from \"../NcodeSurface\";\r\nimport { ColorConvertMethod } from \"../NcodeSurface/CanvasColorConverter\";\r\nimport { PDF_DEFAULT_DPI } from \"../NcodeSurface/NcodeConstans\";\r\nimport NeoPdfDocument from \"./NeoPdfDocument\";\r\nexport type PDF_VIEWPORT_DESC = PdfJs.ViewportParameters & PdfJs.PDFPageViewport;\r\n\r\n\r\n\r\nexport interface IPdfPageCanvasDesc {\r\n  pdfPageInfo: IPdfPageDesc,\r\n\r\n  /** splitted canvas 내의 index */\r\n  index: number,\r\n\r\n  /** 그려진 canvas */\r\n  canvas: HTMLCanvasElement,\r\n  rotation: number,\r\n\r\n\r\n  width_pu: number,\r\n  height_pu: number,\r\n\r\n  drawnRect: IRectDpi,\r\n}\r\n\r\n\r\nexport default class NeoPdfPage {\r\n  _pdfPage: PdfJs.PDFPageProxy;\r\n\r\n  _ready: PdfJs.PDFPromise<PdfJs.PDFPageProxy>;\r\n\r\n  _loaded: boolean = false;\r\n\r\n  private _defaultViewport: PDF_VIEWPORT_DESC;\r\n\r\n  _pageNo: number;\r\n\r\n  _doc: NeoPdfDocument;\r\n\r\n  _translater: CoordinateTanslater;\r\n\r\n  constructor(neoPdf: NeoPdfDocument, pageNo: number) {\r\n    this._pageNo = pageNo;\r\n    this._doc = neoPdf;\r\n\r\n\r\n    this._ready = neoPdf._pdfDoc.getPage(pageNo);\r\n    this._ready.then(_pdfPage => {\r\n      this._pdfPage = _pdfPage;\r\n      this._loaded = true;\r\n      this._defaultViewport = _pdfPage.getViewport({ scale: 1 });\r\n    });\r\n  }\r\n\r\n  getPage = async () => {\r\n    await this._ready;\r\n    return this._pdfPage;\r\n  }\r\n\r\n  render = async (params: PdfJs.PDFRenderParams) => {\r\n    await this._ready;\r\n    const renderTask: PdfJs.PDFRenderTask = this._pdfPage.render(params);\r\n    const ret = await renderTask.promise;\r\n    return ret;\r\n  }\r\n\r\n  public get viewport(): PDF_VIEWPORT_DESC {\r\n    return this._defaultViewport;\r\n  }\r\n\r\n  getViewport = (params: PdfJs.ViewportParameters): PDF_VIEWPORT_DESC => {\r\n    return this._pdfPage.getViewport(params);\r\n  }\r\n\r\n\r\n  setTranslater = (translater: CoordinateTanslater) => {\r\n    this._translater = translater;\r\n  }\r\n\r\n\r\n  public render_dpi = async (index: number, dpi: number)\r\n    : Promise<IPdfPageCanvasDesc> => {\r\n\r\n    await this._ready;\r\n\r\n    const pageNo = this._pageNo;\r\n    const scratchCanvas = document.createElement(\"canvas\");\r\n    const canvas = scratchCanvas;\r\n    const uuid = uuidv4();\r\n    canvas.id = `scratchCanvas-${pageNo}-${uuid}`;\r\n\r\n    const page = this._pdfPage;\r\n\r\n    let viewport: PDF_VIEWPORT_DESC = this.viewport;\r\n    const rotation = viewport.rotation;\r\n    let ctx = canvas.getContext('2d');\r\n\r\n    const PRINT_RESOLUTION = dpi;\r\n    const PRINT_UNITS = PRINT_RESOLUTION / PDF_DEFAULT_DPI;\r\n    // const CSS_UNITS = 96.0 / PDF_DEFAULT_DPI;\r\n\r\n    canvas.width = Math.floor(viewport.width * PRINT_UNITS);\r\n    canvas.height = Math.floor(viewport.height * PRINT_UNITS);\r\n\r\n    // const cssWidth = Math.floor(viewport.width * CSS_UNITS);\r\n    // const cssHeight = Math.floor(viewport.height * CSS_UNITS);\r\n\r\n    ctx.save();\r\n    ctx.fillStyle = \"rgb(255, 255, 255)\";\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n    ctx.restore();\r\n\r\n\r\n    // return Promise.resolve({ index, canvas, rotation, pageNo });\r\n\r\n    const renderContext = {\r\n      canvasContext: ctx,\r\n      transform: [PRINT_UNITS, 0, 0, PRINT_UNITS, 0, 0],\r\n      viewport: page.getViewport({\r\n        scale: 1,\r\n        rotation: viewport.rotation\r\n      }),\r\n      intent: \"print\"\r\n    };\r\n\r\n\r\n    let renderTask = page.render(renderContext);\r\n    await renderTask.promise;\r\n\r\n    const doc = this._doc;\r\n    const result: IPdfPageCanvasDesc = {\r\n      pdfPageInfo: {\r\n        url: doc.url,\r\n        fingerprint: doc.fingerprint,\r\n        numPages: doc.numPages,\r\n        pageNo: this._pageNo,\r\n      },\r\n\r\n      index,\r\n      canvas,\r\n      rotation,\r\n\r\n      width_pu: viewport.width,\r\n      height_pu: viewport.height,\r\n      drawnRect: {\r\n        unit: \"600dpi\",\r\n        x: 0, y: 0, width: 0, height: 0,\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  public convertColor = async (canvasDesc: IPdfPageCanvasDesc, colorConvertMode?: ColorConvertMethod) => {\r\n    if (colorConvertMode) {\r\n      const pdfCanvas = canvasDesc.canvas;\r\n      const converter = new CanvasColorConverter(pdfCanvas);\r\n      await converter.convert(colorConvertMode);\r\n    }\r\n\r\n    return canvasDesc;\r\n  }\r\n}","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\SurfaceMapper\\MappingItem.ts",["1457","1458","1459","1460","1461","1462"],"import { IPageSOBP, IRectDpi } from \"../DataStructure/Structures\";\r\nimport { IMappingParams, IPdfPageDesc, IPolygonArea, TransformParameters, TransformPoints } from \"../Coordinates\";\r\n\r\nexport class MappingItem {\r\n  _params: IMappingParams = {\r\n    pageInfo: {} as IPageSOBP,\r\n    npageArea: [] as any,\r\n    pdfDesc: {} as IPdfPageDesc,\r\n    h: {} as TransformParameters,\r\n    h_rev: {} as TransformParameters,\r\n  }\r\n\r\n  /** Ncode Unit coordinate system */\r\n  _srcPts: TransformPoints;\r\n\r\n  /** Pdf Unit coordinate system */\r\n  _dstPts: TransformPoints;\r\n\r\n  // ncodePoints: IPoint[] = new Array(4);\r\n  // pdfPoints: IPoint[] = new Array(4);\r\n\r\n\r\n  get srcPts() {\r\n    return this._srcPts;\r\n  }\r\n\r\n  get dstPts() {\r\n    return this._dstPts;\r\n  }\r\n\r\n  setPointsFromRect = (target: \"ncode\" | \"pdf\", rc: IRectDpi) => {\r\n    const x0 = rc.x;\r\n    const y0 = rc.y;\r\n\r\n    const x1 = x0 + rc.width;\r\n    const y1 = y0 + rc.height;\r\n\r\n    let unit: \"nu\" | \"pu\";    // ncode unit\r\n\r\n    if (target === \"pdf\") {\r\n      unit = \"pu\"; // pdf unit\r\n    }\r\n    else {\r\n      unit = \"nu\";\r\n    }\r\n\r\n    const points: TransformPoints = {\r\n      type: \"homography\",\r\n      unit,\r\n      pts:\r\n        [\r\n          { x: x0, y: y0 },\r\n          { x: x1, y: y0 },\r\n          { x: x1, y: y1 },\r\n          { x: x0, y: y1 }\r\n        ]\r\n    };\r\n\r\n    if (target === \"pdf\") {\r\n      this._dstPts = points;\r\n    }\r\n    else {\r\n      this._srcPts = points;\r\n\r\n    }\r\n  }\r\n\r\n  setNcodeArea = (arg: INcodePageMappingParam) => {\r\n    const { pdfDrawnRect: area_nu } = arg;\r\n\r\n    this._srcPts = {} as TransformPoints;\r\n    this.setPointsFromRect(\"ncode\", area_nu);\r\n\r\n    this._params.pageInfo = { ...arg.pageInfo };\r\n    this._params.npageArea = { ...arg.npageArea };\r\n  }\r\n\r\n  setPdfArea = (arg: IPdfPageMappingParam) => {\r\n    const { rect: area_pu } = arg;\r\n\r\n    this._dstPts = {} as TransformPoints;\r\n    this.setPointsFromRect(\"pdf\", area_pu);\r\n    this._params.pdfDesc = arg.pdfPageInfo;\r\n  }\r\n}\r\n\r\nexport interface IPdfPageMappingParam {\r\n  rect: IRectDpi,        // unit should be \"pu\"\r\n  pdfPageInfo: IPdfPageDesc,\r\n}\r\n\r\nexport interface INcodePageMappingParam {\r\n  /** 4점 매핑을 위한 rect */\r\n  pdfDrawnRect: IRectDpi,        // unit should be \"nu\"\r\n  pageInfo: IPageSOBP,\r\n\r\n  /** 아래의 영역에 들어오면 위의 */\r\n  npageArea: IPolygonArea,\r\n}","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\SurfaceMapper\\MappingStorage.ts",["1463","1464","1465","1466","1467","1468","1469","1470","1471","1472","1473","1474","1475","1476","1477","1478","1479","1480"],"import { CoordinateTanslater, IMappingParams, IPdfPageDesc } from \"../Coordinates\";\r\nimport { INcodeSOBPxy, IPageSOBP } from \"../DataStructure/Structures\";\r\nimport { isSamePage } from \"../NcodeSurface\";\r\nimport { IPdfDocDesc } from \"../NeoPdf/NeoPdfDocument\";\r\n\r\nvar _instance: MappingStorage = null;\r\nconst LOCAL_STORAGE_ID = \"GridaBoard_codeMappingInfo_v2\";\r\n\r\nexport default class MappingStorage {\r\n  _arrMapped: IMappingParams[] = [];\r\n\r\n  private constructor() {\r\n  }\r\n\r\n  static getInstance() {\r\n    if (_instance) return _instance;\r\n\r\n    _instance = new MappingStorage();\r\n    return _instance;\r\n  }\r\n\r\n  register = (item: CoordinateTanslater) => {\r\n    const params = item.mappingParams;\r\n\r\n    var now = new Date();\r\n    var timeStr =\r\n      `${addZeros(now.getFullYear(), 2)}/` +\r\n      `${addZeros(now.getMonth() + 1, 2)}/` +\r\n      `${addZeros(now.getDate(), 2)} ` +\r\n      `${addZeros(now.getHours(), 2)}:` +\r\n      `${addZeros(now.getMinutes(), 2)}:` +\r\n      `${addZeros(now.getSeconds(), 2)}.` +\r\n      `${addZeros(now.getMilliseconds(), 4)}`;\r\n\r\n    params.timeString = timeStr; // JSON.stringify(new Date());\r\n    this._arrMapped.push(params);\r\n  }\r\n\r\n  /**\r\n   * pen down시에 새로운 SOBP라면, 관련된 PDF가 있는지 찾을 때 쓰인다\r\n   */\r\n  findPdfPage = (ncodeXy: INcodeSOBPxy) => {\r\n    // const pdfPageInfo: IPdfPageDesc = null;\r\n    // const pdfDocInfo: IPdfDocDesc = null;\r\n\r\n    // let found = -1;\r\n    // for ( let i=0; i<this._arrMapped.length; i++ ) {\r\n    //   const trans = this._arrMapped[i];\r\n    //   if ( isSamePage(ncodeXy as IPageSOBP, trans.pageInfo) ) {\r\n    //     found = i;\r\n    //     break;\r\n    //   }\r\n    // }\r\n\r\n\r\n    /** 원래는 폴리곤에 속했는지 점검해야 하지만, 현재는 같은 페이지인지만 점검한다  2020/12/06 */\r\n    const found = this._arrMapped.find(trans => isSamePage(ncodeXy, trans.pageInfo));\r\n    return found;\r\n  }\r\n\r\n  /**\r\n   * Ncode가 발행된 적이 있는지를 점검하기 위해서 쓰인다.\r\n   */\r\n  findMappedNcode = (pdfId: string) => {\r\n    const found = this._arrMapped.find(trans => pdfId === trans.pdfDesc.id);\r\n    return found;\r\n  }\r\n\r\n  dump = (prefix: string) => {\r\n    console.log(`[${prefix}]----------------------------------------------------------------------`);\r\n    const str = JSON.stringify(this._arrMapped, null, \"  \");\r\n    const arr = str.split(\"\\n\");\r\n\r\n    for (let i = 0; i < arr.length; i++) {\r\n      console.log(`[${prefix}] ${arr[i]}`);\r\n    }\r\n    console.log(`[${prefix}]----------------------------------------------------------------------`);\r\n  }\r\n\r\n\r\n\r\n  storeMappingInfo = () => {\r\n    if (storageAvailable(\"localStorage\")) {\r\n      const key = LOCAL_STORAGE_ID;\r\n      const value = JSON.stringify(this._arrMapped);\r\n      // console.log(`Pdf Ncode Info Saved   ${key}: ${value}`);\r\n      localStorage.setItem(key, value);\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n\r\n  /**\r\n   * app이 기동되면 반드시 처음에 load하자\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  loadMappingInfo = () => {\r\n    if (storageAvailable(\"localStorage\")) {\r\n      const key = LOCAL_STORAGE_ID;\r\n      const value = localStorage.getItem(key);\r\n\r\n      if (value) {\r\n        this._arrMapped = JSON.parse(value);\r\n\r\n        this._arrMapped.sort(function (a, b) {\r\n          if (a.timeString < b.timeString) return 1;\r\n          else if (a.timeString > b.timeString) return -1;\r\n          else return 0;\r\n        });\r\n\r\n        // const debug = JSON.stringify(this._arrMapped);\r\n        // console.log(`Pdf Ncode Info Loaded   ${key}: ${debug}`);\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n\r\n\r\nfunction storageAvailable(type) {\r\n  var storage;\r\n  try {\r\n    storage = window[type];\r\n    var x = \"__storage_test__\";\r\n    storage.setItem(x, x);\r\n    storage.removeItem(x);\r\n    return true;\r\n  } catch (e) {\r\n    return (\r\n      e instanceof DOMException &&\r\n      // Firefox를 제외한 모든 브라우저\r\n      (e.code === 22 ||\r\n        // Firefox\r\n        e.code === 1014 ||\r\n        // 코드가 존재하지 않을 수도 있기 떄문에 이름 필드도 확인합니다.\r\n        // Firefox를 제외한 모든 브라우저\r\n        e.name === \"QuotaExceededError\" ||\r\n        // Firefox\r\n        e.name === \"NS_ERROR_DOM_QUOTA_REACHED\") &&\r\n      // 이미 저장된 것이있는 경우에만 QuotaExceededError를 확인하십시오.\r\n      storage &&\r\n      storage.length !== 0\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction addZeros(num, digit) {\r\n  // 자릿수 맞춰주기\r\n  var zero = \"\";\r\n  num = num.toString();\r\n  if (num.length < digit) {\r\n    for (var i = 0; i < digit - num.length; i++) {\r\n      zero += \"0\";\r\n    }\r\n  }\r\n  return zero + num;\r\n}\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\DataStructure\\Structures.ts",["1481","1482","1483","1484","1485"],"import { DeviceTypeEnum } from \"./Enums\";\r\n\r\ntype UNIT_STRING = \"nu\" | \"pu\" | \"css\" | \"150dpi\" | \"200dpi\" | \"300dpi\" | \"600dpi\";\r\n\r\n/**\r\n *\r\n */\r\nexport const UNIT_TO_DPI = {\r\n  \"mm\": 25.4,\r\n  \"pu\": 72,\r\n  \"css\": 96,\r\n  \"nu\": 10.71428571,    // 600 / (8*7)\r\n  \"600dpi\": 600,\r\n  \"300dpi\": 300,\r\n  \"200dpi\": 200,\r\n  \"150dpi\": 150,\r\n};\r\n\r\n\r\nexport const DPI_TO_UNIT = {\r\n  25.4: \"mm\",\r\n  72: \"pu\",\r\n  96: \"css\",\r\n  10.71428571: \"nu\",    // 600 / (8*7)\r\n  600: \"600dpi\",\r\n  300: \"300dpi\",\r\n  200: \"200dpi\",\r\n  150: \"150dpi\",\r\n};\r\n\r\n\r\nexport type ISize = {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport type ICssSize = {\r\n  width: string;\r\n  height: string;\r\n}\r\n\r\nexport type IPoint = {\r\n  x: number,\r\n  y: number,\r\n}\r\n\r\nexport type IPointDpi = {\r\n  unit?: UNIT_STRING,\r\n  dpi?: number,\r\n  x: number,\r\n  y: number,\r\n}\r\n\r\n\r\nexport type ISizeDpi = {\r\n  unit?: UNIT_STRING,\r\n  dpi?: number,\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\n\r\nexport type IPointForce = {\r\n  x: number,\r\n  y: number,\r\n  f: number,\r\n}\r\n\r\nexport type IPageSOBP = {\r\n  section: number,\r\n  book: number,\r\n  owner: number,\r\n  page: number\r\n}\r\n\r\n\r\n\r\nexport type IRectDpi = {\r\n  unit?: UNIT_STRING,\r\n  dpi?: number,\r\n  x: number,\r\n  y: number,\r\n  width: number,\r\n  height: number,\r\n}\r\n\r\nexport function stringToDpiNum(unit: string) {\r\n  let dpi = UNIT_TO_DPI[unit];\r\n\r\n  if (!dpi) {\r\n    const index = unit.indexOf(\"dpi\");\r\n    if (index > 0)\r\n      dpi = parseInt(unit.substr(0, index));\r\n    else\r\n      dpi = parseInt(unit);\r\n  }\r\n\r\n  return dpi;\r\n}\r\n\r\nexport function autoSetDpi(opt: any) {\r\n  if (opt.unit && !opt.dpi) {\r\n    opt.dpi = stringToDpiNum(opt.unit);\r\n  }\r\n  return opt;\r\n}\r\n\r\nexport function scalePoint(pt: IPointDpi, scale: number) {\r\n  pt.x = pt.x / scale;\r\n  pt.y = pt.y / scale;\r\n  return pt;\r\n}\r\n\r\n\r\n\r\nexport type INcodeSOBPxy = IPageSOBP & IPoint;\r\n// export type INcodeSOBPxy = {\r\n//   section: number,\r\n//   book: number,\r\n//   owner: number,\r\n//   page: number,\r\n//   x: number,\r\n//   y: number,\r\n// }\r\n\r\n\r\nexport type IWritingSurfaceInfo = {\r\n  section?: number,\r\n  owner?: number,\r\n  book?: number,\r\n  page?: number,\r\n  Xmin: number,\r\n  Ymin: number,\r\n  Xmax: number,\r\n  Ymax: number,\r\n  Mag?: number\r\n};\r\n\r\n\r\nexport type INoteServerSizeInfo = {\r\n  section?: number,\r\n  owner?: number,\r\n  books?: number[],\r\n  page?: number,\r\n  Xmin: number,\r\n  Ymin: number,\r\n  Xmax: number,\r\n  Ymax: number,\r\n  Mag?: number\r\n};\r\n\r\n\r\n\r\nexport type IPenEvent = {\r\n  timeString: number;  //timeString;\r\n  systemTime?: number;\r\n\r\n  event?: string; // eventName;\r\n  timediff?: number;  //timediff; // pen에서 나오는 pen down 부터의 ms단위의 time diff\r\n\r\n  penType?: DeviceTypeEnum;\r\n\r\n  penId?: string; // - BT MAC address\r\n  penTipMode?: number; //  0: pen, 1: eraser\r\n  color?: number;  //color;\r\n\r\n  section?: number;  //section;\r\n  owner?: number;  //owner;\r\n  book?: number;  //book;\r\n  page?: number;  //page;\r\n\r\n  // coordinates\r\n  x?: number;  //x;\r\n  y?: number;  //y;\r\n\r\n  // pen state\r\n  force?: number;  //force;\r\n  tilt_x?: number;  //tilt_x;\r\n  tilt_y?: number;  //tilt_y;\r\n  twist?: number;  //twist;\r\n\r\n  retryCount?: number;  //retryCount;\r\n  errorCode?: number;  //errorCode;\r\n  infoMessage?: string;  //infoMessage;\r\n  successRate_ndac?: number;   //successRate_ndac;\r\n  successRate_optical?: number;    //successRate_optical;\r\n  isFirstDot?: boolean;    //false;\r\n\r\n  // for error\r\n  brightness?: number;\r\n  exposureTime?: number;\r\n  ndacProcessTime?: number;\r\n  labelCount?: number;\r\n  ndacErrorCode?: number;\r\n  ndacClassType?: number;  // - (0:G3C6, 1:N3C6)\r\n  continuousErrorCount?: number;\r\n}\r\n\r\n\r\nexport type IBrushState = {\r\n  thickness: number,\r\n  color: string,    // \"rgba(0,0,0,255)\"\r\n\r\n}\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\index.ts",[],"C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\NcodeRasterizer.tsx",["1486","1487","1488","1489","1490","1491","1492","1493","1494","1495","1496","1497","1498","1499","1500","1501","1502"],"import { UNIT_TO_DPI, IPageSOBP, IPointDpi, IRectDpi, autoSetDpi, } from \"../DataStructure/Structures\";\r\n\r\nimport NcodeFetcher from \"./NcodeFetcher\";\r\nimport { INcodeSurfaceDesc, IPaperSize } from \"./SurfaceDataTypes\";\r\n\r\n// import expect from \"expect.js\";\r\nimport { getSurfaceSize_dpi } from \"./SurfaceInfo\";\r\nimport { devideSurfaceAreaTo, getCellMatrixShape } from \"./SurfaceSplitter\";\r\nimport { IPrintOption } from \"../NcodePrint/PrintDataTypes\";\r\nimport { NCODE_CLASS6_NUM_DOTS } from \"./NcodeConstans\";\r\n\r\n// import { PrintContextConsumer } from \"react-to-print\";\r\n\r\nconst debugNcode_w = 200;\r\nconst debugNcode_h = 500;\r\n\r\n\r\n\r\nexport function drawArrow(context: CanvasRenderingContext2D, fromx: number, fromy: number, tox: number, toy: number) {\r\n  var headlen = 100; // length of head in pixels\r\n  var dx = tox - fromx;\r\n  var dy = toy - fromy;\r\n  var angle = Math.atan2(dy, dx);\r\n\r\n  context.beginPath();\r\n  context.moveTo(fromx, fromy);\r\n  context.lineTo(tox, toy);\r\n  context.lineTo(tox - headlen * Math.cos(angle - Math.PI / 6), toy - headlen * Math.sin(angle - Math.PI / 6));\r\n  context.moveTo(tox, toy);\r\n  context.lineTo(tox - headlen * Math.cos(angle + Math.PI / 6), toy - headlen * Math.sin(angle + Math.PI / 6));\r\n  context.stroke();\r\n}\r\n\r\nconst codePos: { [key: string]: { code: number; dx: number, dy: number, } } = {\r\n  \"u\": { code: 0, dx: +1, dy: +1 },\r\n  \"d\": { code: 1, dx: -1, dy: +1 },\r\n  \"l\": { code: 2, dx: -1, dy: -1 },\r\n  \"r\": { code: 3, dx: +1, dy: -1 },\r\n  \"n\": { code: -1, dx: 0, dy: 0 },\r\n}\r\n\r\n/** (dx,dy) ~ (dw=width, dh=height) */\r\ntype IPdfPixelArea = {\r\n  dx: number,\r\n  dy: number,\r\n  dw: number,\r\n  dh: number,\r\n}\r\n\r\n\r\n\r\n/**\r\n * rotation이 90이면 회전시켜서 내용물을 그려야 한다.\r\n *\r\n * areas에 있는 값은, 회전한 다음을 가정하고 있음.\r\n *\r\n *    ctx.save();\r\n *    ctx.translate(canvas.width, 0);\r\n *    ctx.rotate( -90 * Math.PI/180);\r\n *    ... drawing operation ...\r\n *    ctx.restore(); *\r\n */\r\nexport interface IAreasDesc {\r\n  rotation: number;\r\n  areas: IRectDpi[];\r\n}\r\n\r\nexport type INcodeAreaDesc = {\r\n  success: boolean,\r\n\r\n  dpi: number,\r\n  pixelsPerDot: number,\r\n  dotsPerCell: number,\r\n\r\n  pageInfo: IPageSOBP,\r\n  rect: IRectDpi,\r\n  // x_nu: number,\r\n  // y_nu: number,\r\n  // width_nu: number,\r\n  // height_nu: number,\r\n}\r\n\r\n/**\r\n * canvasAreas.rotation이 90이면 회전시켜서 내용물을 그려야 한다.\r\n *\r\n * areas에 있는 값은, 회전한 다음을 가정하고 있음.\r\n *\r\n *    ctx.save();\r\n *    ctx.translate(canvas.width, 0);\r\n *    ctx.rotate( -90 * Math.PI/180);\r\n *    ... drawing operation ...\r\n *    ctx.restore(); *\r\n */\r\nexport type ICellsOnSheetDesc = {\r\n  canvas: HTMLCanvasElement;\r\n  canvasAreas: IAreasDesc;\r\n  ncodeAreas: INcodeAreaDesc[];\r\n}\r\n\r\nexport type ICanvasContextForCodeDraw = {\r\n  ctx: CanvasRenderingContext2D,\r\n  x: number,\r\n  y: number,\r\n  width: number,\r\n  height: number,\r\n}\r\n\r\nexport type IPagesPerSheetNumbers = 1 | 4 | 9 | 16 | 25 | 2 | 8 | 18 | 32;\r\n/**\r\n * srcDirection은, PDF 파일 전체의 landscape/portrait를 넣어야 한다.\r\n */\r\nexport interface IPrepareSurfaceParam {\r\n  mediaSize: IPaperSize,\r\n  srcDirection: \"auto\" | \"portrait\" | \"landscape\",\r\n  dpi: number,\r\n  numItems: IPagesPerSheetNumbers\r\n  pageInfos: IPageSOBP[],\r\n\r\n  hasToPutNcode: boolean,\r\n\r\n  debugMode: 0 | 1 | 2 | 3,\r\n}\r\n\r\n/**\r\n * Class\r\n */\r\nexport default class NcodeRasterizer {\r\n\r\n  // private ncodeSurfaceDesc: INcodeSurfaceDesc = null;\r\n\r\n  private glyphDistancePx_canvas = 8;\r\n\r\n  printOption: IPrintOption;\r\n\r\n  // private rotation: number = 0;\r\n\r\n  fetcher: NcodeFetcher = null;\r\n\r\n\r\n  constructor(printOption: IPrintOption) {\r\n    this.printOption = { ...printOption };\r\n  }\r\n\r\n  private drawAreaArrow = (ctx, area) => {\r\n    const { x, y, width, height } = area;\r\n    // drawArrow(ctx, area.x, area.y, area.x + area.width, area.y + area.height);\r\n\r\n    ctx.save();\r\n    ctx.font = \"150px Arial\";\r\n\r\n    ctx.strokeStyle = \"rgba(255, 0, 255)\";     // 투명 캔버스\r\n    // ctx.fillStyle = \"rgb(255, 0, 0)\";     // 투명 캔버스\r\n    ctx.lineWidth = 10;\r\n    ctx.lineCap = \"round\";\r\n    ctx.strokeRect(area.x, area.y, area.width - ctx.lineWidth, area.height - ctx.lineWidth);\r\n\r\n    // ctx.strokeStyle = \"rgba(0, 0,0)\";     // 투명 캔버스\r\n    // drawArrow(ctx, area.x + 100, area.y, area.x + 100, area.y + area.height - 100);\r\n    // drawArrow(ctx, area.x, area.y + 100, area.x + area.width - 100, area.y + 100);\r\n\r\n    ctx.strokeStyle = \"rgb(0,0,255)\";\r\n    ctx.fillStyle = \"rgb(0,0, 255)\";\r\n    drawArrow(ctx, x + 50, y + 200, x + width - 100, y + 200);\r\n    ctx.fillText(\"x\", x + width / 2, y + 350);\r\n\r\n    ctx.strokeStyle = \"rgb(255,0,0)\";\r\n    ctx.fillStyle = \"rgb(255,0, 0)\";\r\n    drawArrow(ctx, x + 200, y + 50, x + 200, y + height - 100);\r\n    ctx.fillText(\"y\", x + 250, y + height / 2);\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  /**\r\n   * 이 함수 내부에서 쓰이는 모든 단위는 600dpi 인쇄를 기준으로 한 pixel 값\r\n   *\r\n   * @param mediaSize\r\n   * @param numItems\r\n   * @param srcDirection\r\n   */\r\n  public prepareNcodePlane = async (options: IPrepareSurfaceParam): Promise<ICellsOnSheetDesc> => {\r\n    const { mediaSize, srcDirection, numItems, pageInfos, hasToPutNcode } = options;\r\n    let dpi = options.dpi;\r\n    dpi = 600;  // kitty  2020/11/29, 코드 제네레이터는 600 dpi로 고정\r\n\r\n    // expect(pageInfos.length).to.be(numItems);\r\n\r\n    // temp canvas size를 구한다.\r\n    let isLandscape = (srcDirection === \"landscape\");\r\n    const isRotationNeeded = getCellMatrixShape(numItems, srcDirection).rotation === 90;\r\n    if (isRotationNeeded) isLandscape = !isLandscape;\r\n    const size = getSurfaceSize_dpi(mediaSize, dpi, isLandscape);\r\n    // let logicalSize = { ...size };\r\n\r\n\r\n\r\n    // sheet의 면을 cell로 나누고,\r\n    const entireRect = { x: 0, y: 0, ...size };\r\n    const canvasAreas = devideSurfaceAreaTo(this.printOption, entireRect, numItems);\r\n    const { areas } = canvasAreas;\r\n\r\n    // 캔버스를 준비\r\n    let canvas = document.createElement(\"canvas\");\r\n    canvas.width = size.width;\r\n    canvas.height = size.height;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    ctx.save();\r\n    ctx.fillStyle = \"rgba(255, 255, 255, 0)\";     // 투명 캔버스\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n\r\n    if (options.debugMode > 0) {\r\n      ctx.strokeStyle = \"rgba(0, 255, 0, 255)\";     // 외곽\r\n      ctx.lineWidth = 70;\r\n      ctx.strokeRect(0, 0, canvas.width, canvas.height);\r\n    }\r\n\r\n    // 좌표계의 논리적 회전이 필요하면 회전, when numItems === 2 | 8 | 18 | 32\r\n    // if (canvasAreas.rotation === 90) {\r\n    //   ctx.translate(canvas.width, 0);\r\n    //   ctx.rotate(Math.PI / 2);\r\n    // }\r\n\r\n\r\n    // 출력할 페이지/시트의 실제 출력 대상의 페이지 수 보다 적을 수 있다\r\n    const ncodeAreas = [];\r\n    for (let i = 0; i < areas.length; i++) {\r\n      // 디버깅용 화살표를 그린다. debug mode 1이상\r\n      const drawingContext: ICanvasContextForCodeDraw = { ctx, ...areas[i], };\r\n      const area = areas[i];\r\n      if (this.printOption.debugMode > 0) {\r\n        this.drawAreaArrow(ctx, area);\r\n      }\r\n\r\n      // Calibration 십자가를 그린다.\r\n      if (numItems === 1) {\r\n        this.drawCrossMark(drawingContext, null);\r\n      }\r\n\r\n      // 코드를 그린다\r\n      if (hasToPutNcode && i < pageInfos.length) {\r\n        const pageInfo = pageInfos[i];\r\n        const fetcher = new NcodeFetcher(pageInfo);\r\n        const ncodeSurfaceDesc = await fetcher.getNcodeData(pageInfos[i]);\r\n\r\n        // (left, top) margin을 세팅\r\n        if (this.printOption.marginLeft_nu === -1) {\r\n          this.printOption.marginLeft_nu = ncodeSurfaceDesc.margin.Xmin;\r\n        }\r\n\r\n        if (this.printOption.marginTop_nu === -1) {\r\n          this.printOption.marginTop_nu = ncodeSurfaceDesc.margin.Ymin;\r\n        }\r\n        // 코드를 그린다\r\n\r\n        // ctx.strokeStyle = \"rgba(0, 255, 0, 255)\";     // 투명 캔버스\r\n        // ctx.lineWidth = 70;\r\n        // ctx.strokeRect(0, 0, canvas.width, canvas.height);\r\n        const ncodeArea = await this.drawNcode(drawingContext, ncodeSurfaceDesc, dpi);\r\n        ncodeAreas.push(ncodeArea);\r\n\r\n      }\r\n    }\r\n    ctx.restore();\r\n\r\n    const result: ICellsOnSheetDesc = {\r\n      canvas,\r\n      canvasAreas,\r\n      ncodeAreas,\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  public putCode = async (context: ICanvasContextForCodeDraw, pageInfo: IPageSOBP, srcMapped: IPdfPixelArea): Promise<any> => {\r\n    // return new Promise( (resolve) => resolve() );   // kitty\r\n    // this.rotation = rotation;\r\n\r\n    // 코드 정보를 받아온다\r\n    // 코드 정보를 받아올 때 나중에는 x margin, y margin도 서버에서 받아오게 해야 한다\r\n    this.fetcher = new NcodeFetcher(pageInfo);\r\n    const ncodeSurfaceDesc = await this.fetcher.getNcodeData(pageInfo);\r\n    // this.ncodeSurfaceDesc = result;\r\n\r\n    // (left, top) margin을 세팅\r\n    if (this.printOption.marginLeft_nu === -1) {\r\n      this.printOption.marginLeft_nu = ncodeSurfaceDesc.margin.Xmin;\r\n    }\r\n\r\n    if (this.printOption.marginTop_nu === -1) {\r\n      this.printOption.marginTop_nu = ncodeSurfaceDesc.margin.Ymin;\r\n    }\r\n\r\n    // 코드를 그린다\r\n    await this.drawNcode(context, ncodeSurfaceDesc, 600);\r\n  }\r\n\r\n  private drawSingleCrossMark = (context: ICanvasContextForCodeDraw, x: number, y: number) => {\r\n    const ctx = context.ctx;\r\n    const line_width = 5;\r\n    const line_len = 100;\r\n\r\n\r\n    ctx.strokeStyle = \"rgb(255, 0, 0)\";\r\n    ctx.save();\r\n\r\n    ctx.beginPath();\r\n    ctx.lineWidth = line_width;\r\n    // 2020/08/31 kitty\r\n    // canvas_context.arc(x, y, r, r, 0, Math.PI * 2, true); // Outer circle\r\n    ctx.moveTo(x, y - line_len);\r\n    ctx.lineTo(x, y + line_len);\r\n    ctx.moveTo(x - line_len, y);\r\n    ctx.lineTo(x + line_len, y);\r\n    ctx.stroke();\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  public drawCrossMark = (context: ICanvasContextForCodeDraw, srcMapped: IPdfPixelArea = null) => {\r\n\r\n    // 이전 버전과 호환성을 위해\r\n    if (srcMapped === null) {\r\n      srcMapped = { dx: 0, dy: 0, dw: context.width, dh: context.height };\r\n    }\r\n\r\n    const ratio = 0.1;\r\n    const d = srcMapped.dw * ratio;\r\n    const x0 = srcMapped.dx + d;\r\n    const y0 = srcMapped.dy + d;\r\n    const x1 = srcMapped.dx + srcMapped.dw - d;\r\n    const y1 = srcMapped.dy + srcMapped.dh - d;\r\n\r\n    this.drawSingleCrossMark(context, x0, y0);\r\n    // this.drawSingleCrossMark(canvas, x0, y1);\r\n    this.drawSingleCrossMark(context, x1, y1);\r\n    // this.drawSingleCrossMark(canvas, x1, y0);\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param context\r\n   * @param code_txt\r\n   * @param y\r\n   * @param fullOfGlyphs - for debugging\r\n   */\r\n  private drawNcodeSingleLine = (context: ICanvasContextForCodeDraw, code_txt: string, y: number, width: number, fullOfGlyphs: boolean = true): Promise<void> => {\r\n    // if (this.printOption.codeDensity > 2) {\r\n    //   return this.drawNcodeSingleLine_BOLD(context, code_txt, y, fullOfGlyphs);\r\n    // }\r\n    // else {\r\n    //   return this.drawNcodeSingleLine_NORMAL(context, code_txt, y, fullOfGlyphs);\r\n    // }\r\n\r\n    return this.drawNcodeSingleLine_DOT(context, code_txt, y, width, fullOfGlyphs);\r\n  }\r\n\r\n  private drawNcodeSingleLine_DOT = (context: ICanvasContextForCodeDraw, code_txt: string, y: number, width: number, fullOfGlyphs: boolean = true): Promise<void> => {\r\n    const { ctx, x: baseX, y: baseY } = context;\r\n\r\n    const glyphStringSkipLeft = Math.round(this.printOption.marginLeft_nu * NCODE_CLASS6_NUM_DOTS);\r\n\r\n    return new Promise(resolve => {\r\n      const glyphDistancePx_canvas = this.glyphDistancePx_canvas;\r\n      /** for debugging */\r\n      if (!fullOfGlyphs) width = debugNcode_w;\r\n\r\n      ctx.fillStyle = \"rgba(0,0,0,255)\";\r\n      ctx.lineWidth = 0;\r\n\r\n      let charIndex = glyphStringSkipLeft;\r\n      for (let x = 0; x < width; x += glyphDistancePx_canvas) {\r\n        if (charIndex >= 0) {\r\n          const glyph = code_txt[charIndex];\r\n          const pos = codePos[glyph];\r\n          let dx = 0, dy = 0;\r\n          if (pos) {\r\n            dx = pos.dx;\r\n            dy = pos.dy;\r\n          }\r\n\r\n          ctx.beginPath();\r\n          ctx.rect(baseX + x + dx, baseY + y + dy, 1, 1);\r\n          ctx.fill();\r\n        }\r\n        charIndex++;\r\n      }\r\n      resolve();\r\n    });\r\n  }\r\n\r\n  private drawNcodeSingleLine_NORMAL = (context: ICanvasContextForCodeDraw, code_txt: string, y: number, width: number, fullOfGlyphs: boolean = true): Promise<void> => {\r\n    const { ctx, x: baseX, y: baseY } = context;\r\n\r\n    const glyphStringSkipLeft = Math.round(this.printOption.marginLeft_nu * NCODE_CLASS6_NUM_DOTS);\r\n\r\n    return new Promise(resolve => {\r\n      const glyphDistancePx_canvas = this.glyphDistancePx_canvas;\r\n      /** for debugging */\r\n      if (!fullOfGlyphs) width = debugNcode_w;\r\n      const codeDensity = this.printOption.codeDensity;\r\n\r\n      ctx.fillStyle = \"rgba(0,0,0,255)\";\r\n      ctx.lineWidth = 0;\r\n\r\n      let charIndex = 0;\r\n      for (let x = 0; x < width; x += glyphDistancePx_canvas) {\r\n        if (charIndex + glyphStringSkipLeft >= 0) {\r\n          var glyph = code_txt[charIndex + glyphStringSkipLeft];\r\n\r\n          const pos = codePos[glyph];\r\n          let dx = 0, dy = 0;\r\n          if (pos) {\r\n            dx = pos.dx;\r\n            dy = pos.dy;\r\n          }\r\n\r\n          ctx.beginPath();\r\n          ctx.rect(baseX + x + dx, baseY + y + dy, codeDensity, codeDensity);\r\n          // ctx.rect(baseX + x + dx, baseY + y + dy, 1, 1);\r\n          ctx.fill();\r\n\r\n        }\r\n        charIndex++;\r\n      }\r\n      resolve();\r\n    });\r\n  }\r\n\r\n  private drawNcodeSingleLine_BOLD = (context: ICanvasContextForCodeDraw, code_txt: string, y: number, width: number, fullOfGlyphs: boolean = true): Promise<void> => {\r\n    const { ctx, x: baseX, y: baseY } = context;\r\n\r\n    const glyphStringSkipLeft = Math.round(this.printOption.marginLeft_nu * NCODE_CLASS6_NUM_DOTS);\r\n\r\n    return new Promise(resolve => {\r\n      const glyphDistancePx_canvas = this.glyphDistancePx_canvas;\r\n      /** for debugging */\r\n      if (!fullOfGlyphs) width = debugNcode_w;\r\n      // const codeDensity = this.printOption.codeDensity;\r\n\r\n      let charIndex = 0;\r\n      for (let x = 0; x < width; x += glyphDistancePx_canvas) {\r\n        if (charIndex + glyphStringSkipLeft >= 0) {\r\n          var glyph = code_txt[charIndex + glyphStringSkipLeft];\r\n\r\n          const pos = codePos[glyph];\r\n          let dx = 0, dy = 0;\r\n          if (pos) {\r\n            dx = pos.dx;\r\n            dy = pos.dy;\r\n          }\r\n\r\n          const radius = 1.35;\r\n          ctx.beginPath();\r\n          ctx.arc(baseX + x + dx, baseY + y + dy, radius, 0, 2 * Math.PI, false);\r\n          // ctx.rect(x + dx, y + dy, codeDensity, codeDensity);\r\n          ctx.fillStyle = \"black\";\r\n          ctx.lineWidth = 0;\r\n          ctx.fill();\r\n        }\r\n        charIndex++;\r\n      }\r\n      resolve();\r\n    });\r\n  }\r\n\r\n\r\n  private drawNcode = (\r\n    context: ICanvasContextForCodeDraw,\r\n    surfaceDesc: INcodeSurfaceDesc,\r\n    dpi: number)\r\n    : Promise<INcodeAreaDesc> => {\r\n\r\n    // kitty\r\n    const DEBUG_MODE = this.printOption.debugMode;\r\n\r\n    const { glyphData } = surfaceDesc;\r\n    const { width, height } = context;\r\n    const glyphDistancePx_canvas = Math.round(dpi * 8 / 600);\r\n    const glyphStringSkipTop = Math.round(this.printOption.marginTop_nu * NCODE_CLASS6_NUM_DOTS);\r\n    const codeDrawingPromises = new Array(0);\r\n\r\n    const result: INcodeAreaDesc = {\r\n      success: false,\r\n      dpi,\r\n      pixelsPerDot: glyphDistancePx_canvas,\r\n      dotsPerCell: NCODE_CLASS6_NUM_DOTS,\r\n\r\n      pageInfo: { section: -1, owner: -1, book: -1, page: -1 },\r\n\r\n      rect: {\r\n        unit: \"nu\",\r\n        x: 0, y: 0, width: 0, height: 0,\r\n      }\r\n    };\r\n\r\n\r\n    if (glyphData.length < 1) {\r\n      console.log(\"ERROR: no ncode data given\");\r\n      return Promise.resolve(result);\r\n    }\r\n\r\n    const ctx = context.ctx;\r\n    ctx.save();\r\n    ctx.fillStyle = \"rgba(0,0,0,255)\";\r\n\r\n\r\n    try {\r\n      // const PRINT_RESOLUTION = getPrintResolution();\r\n\r\n      const glyphStrings = glyphData.split(\"\\r\\n\");\r\n      if (glyphStrings.length < 7) {\r\n        return Promise.resolve(result);\r\n      }\r\n      //  const glyph_y = codePaperInfo.Ymin * dotsInACell;\r\n      let glyph_y = glyphStringSkipTop;\r\n\r\n      let y = 0;\r\n      for (y = 0; y < debugNcode_h; y += glyphDistancePx_canvas) {\r\n        if (glyph_y >= 0) {\r\n          const codeTxtSingleLine = glyphStrings[glyph_y];\r\n          const pr = this.drawNcodeSingleLine(context, codeTxtSingleLine, y, width, true);\r\n          codeDrawingPromises.push(pr);\r\n        }\r\n        glyph_y++;\r\n      }\r\n\r\n      for (; y < height; y += glyphDistancePx_canvas) {\r\n        if (glyph_y >= 0) {\r\n          const codeTxtSingleLine = glyphStrings[glyph_y];\r\n          const pr = this.drawNcodeSingleLine(context, codeTxtSingleLine, y, width, !(DEBUG_MODE > 1));\r\n          codeDrawingPromises.push(pr);\r\n        }\r\n        glyph_y++;\r\n      }\r\n\r\n      ctx.restore();\r\n\r\n    } catch (e) {\r\n      ctx.restore();\r\n\r\n      console.error(e);\r\n      return Promise.resolve(result);\r\n    }\r\n\r\n    return new Promise(resolve => {\r\n      Promise.all(codeDrawingPromises).then(() => {\r\n        result.success = true;\r\n        result.dpi = dpi;\r\n        result.pixelsPerDot = glyphDistancePx_canvas;\r\n        result.dotsPerCell = NCODE_CLASS6_NUM_DOTS;\r\n\r\n        result.pageInfo = { ...surfaceDesc.pageInfo };\r\n        result.rect.unit = \"nu\";\r\n        result.rect.x = this.printOption.marginLeft_nu;\r\n        result.rect.y = this.printOption.marginTop_nu;\r\n        result.rect.width = Math.ceil(width / (NCODE_CLASS6_NUM_DOTS * glyphDistancePx_canvas));\r\n        result.rect.height = Math.ceil(height / (NCODE_CLASS6_NUM_DOTS * glyphDistancePx_canvas));\r\n\r\n        resolve(result);\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n\r\nfunction isPtInRect(x: number, y: number, rect: IRectDpi) {\r\n  const x0 = rect.x;\r\n  const x1 = x0 + rect.width;\r\n  const y0 = rect.y;\r\n  const y1 = y0 + rect.height;\r\n\r\n  if (x >= x0 && x <= x1 && y >= y0 && y <= y1) return true;\r\n  return false;\r\n}\r\n\r\nexport function getNcodeAtCanvasPixel(pt: IPointDpi, areas: ICellsOnSheetDesc)\r\n  : IPointDpi {\r\n\r\n  if (areas.ncodeAreas.length < 1) return null;\r\n\r\n  let { x, y, dpi } = pt;\r\n  const scale = areas.ncodeAreas[0].dpi / dpi;\r\n  x *= scale;\r\n  y *= scale;\r\n\r\n  for (let i = 0; i < areas.ncodeAreas.length; i++) {\r\n    const cArea = areas.canvasAreas.areas[i];\r\n\r\n    if (isPtInRect(x, y, cArea)) {\r\n      const dx_cu = x - cArea.x;\r\n      const dy_cu = y - cArea.y;\r\n\r\n      const nArea = areas.ncodeAreas[i];\r\n      const ncodeUnit = nArea.dotsPerCell * nArea.pixelsPerDot;\r\n      const dx_nu = dx_cu / ncodeUnit;\r\n      const dy_nu = dy_cu / ncodeUnit;\r\n\r\n      const x_nu = dx_nu + nArea.rect.x;\r\n      const y_nu = dy_nu + nArea.rect.y;\r\n\r\n      return { unit: \"nu\", dpi: UNIT_TO_DPI[\"nu\"], x: x_nu, y: y_nu };\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport function getNcodeRectAtCanvasPixel(rc: IRectDpi, areas: ICellsOnSheetDesc)\r\n  : IRectDpi {\r\n\r\n  if (areas.ncodeAreas.length < 1) return null;\r\n\r\n  rc = autoSetDpi(rc);\r\n  const scale = areas.ncodeAreas[0].dpi / rc.dpi;\r\n  let center: IPointDpi = {\r\n    x: rc.x + (rc.width / 2),\r\n    y: rc.y + (rc.height / 2),\r\n    dpi: rc.dpi,\r\n  };\r\n\r\n\r\n  const center_nu = getNcodeAtCanvasPixel(center, areas);\r\n  if (!center_nu) return null;\r\n\r\n  const nArea = areas.ncodeAreas[0];    // 0과 다른 부분면(splitted area)는 항상 같다\r\n  const ncodeUnit = nArea.dotsPerCell * nArea.pixelsPerDot;\r\n\r\n  return {\r\n    unit: \"nu\",\r\n    x: center_nu.x - (rc.width / 2 * scale / ncodeUnit),\r\n    y: center_nu.y - (rc.height / 2 * scale / ncodeUnit),\r\n    width: (rc.width * scale / ncodeUnit),\r\n    height: (rc.height * scale / ncodeUnit),\r\n  }\r\n}\r\n\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\SurfaceInfo.ts",["1503","1504","1505","1506","1507","1508","1509","1510","1511","1512","1513","1514","1515","1516","1517","1518","1519","1520","1521","1522"],"import { paperType } from \"./NcodeSurfaceDataJson\";\r\nimport { INcodeSurfaceDesc, IPaperSize } from \"./SurfaceDataTypes\";\r\n\r\nimport { IPageSOBP, INcodeSOBPxy, ISize, UNIT_TO_DPI } from \"../DataStructure/Structures\";\r\nimport { INCH_TO_MM_SCALE, NCODE_TO_INCH_SCALE, PDF_DEFAULT_DPI } from \"./NcodeConstans\";\r\n\r\n\r\n/**\r\n *\r\n * @param pageInfo\r\n */\r\nexport function isPlatePaper(pageInfo: IPageSOBP): boolean {\r\n  const { owner, book } = pageInfo;\r\n  if (owner === 1013 && book === 2) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n\r\n\r\n/**\r\n *\r\n * @param coordInfo\r\n */\r\nexport function isPUI(pageInfo: INcodeSOBPxy): boolean {\r\n  const { owner, book, page, } = pageInfo;\r\n  // console.log( `isPUI: ${owner}.${book}.${page}`);\r\n  if (owner === 27 && book === 161 && page === 1) {\r\n    return true;\r\n  }\r\n\r\n  if (owner === 1013 && book === 1) {\r\n    // page === 4, Smart plate\r\n    // page === 1, Plate paper\r\n\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n\r\n\r\n/**\r\n *\r\n * @param pageInfo\r\n * @return paper size in NU\r\n */\r\nfunction getNPaperSize_nu(item: IPageSOBP | INcodeSurfaceDesc): ISize {\r\n  let desc = item as INcodeSurfaceDesc;\r\n\r\n  if (!item.hasOwnProperty(\"margin\")) {\r\n    const pageInfo = item as IPageSOBP;\r\n    desc = getNPaperInfo(pageInfo);\r\n  }\r\n  const margin = desc.margin;\r\n  return {\r\n    width: margin.Xmax - margin.Xmin,\r\n    height: margin.Ymax - margin.Ymin\r\n  };\r\n}\r\n\r\n\r\nfunction getNPaperSize_dpi(item: IPageSOBP | INcodeSurfaceDesc, dpi: number): ISize {\r\n  // const { section, owner, book, page } = pageInfo;\r\n  const size = getNPaperSize_nu(item);\r\n\r\n  return {\r\n    width: size.width * NCODE_TO_INCH_SCALE * dpi,\r\n    height: size.height * NCODE_TO_INCH_SCALE * dpi,\r\n  }\r\n}\r\n\r\nexport function getNPaperSize_pu(item: IPageSOBP | INcodeSurfaceDesc): ISize {\r\n  return getNPaperSize_dpi(item, PDF_DEFAULT_DPI);\r\n}\r\n\r\n\r\nexport function getMediaSize_pu(mediaType: IPaperSize): ISize {\r\n  const { width, height } = mediaType;\r\n\r\n  return {\r\n    width: width * INCH_TO_MM_SCALE * PDF_DEFAULT_DPI,\r\n    height: height * INCH_TO_MM_SCALE * PDF_DEFAULT_DPI,\r\n  }\r\n}\r\n\r\n/**\r\n * paper size를 해당 inch 단위로 돌려 준다.\r\n * @param pageInfo\r\n */\r\nexport function getNPaperInfo(pageInfo: IPageSOBP): INcodeSurfaceDesc {\r\n  const { section, owner, book } = pageInfo;\r\n\r\n\r\n  let found = paperType.paperA4_dummy;\r\n  let found_key = \"paperA4_dummy\";\r\n\r\n  let keys = Object.keys(paperType);\r\n  for (let j = 0; j < keys.length; j++) {\r\n    let key = keys[j];\r\n    let value = paperType[key];\r\n\r\n    let idx = value.books.indexOf(book);\r\n    if (idx > -1) {\r\n      if (section === value.section && owner === value.owner) {\r\n        found = value;\r\n        found_key = key;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  const desc: INcodeSurfaceDesc = {\r\n    id: found_key,\r\n    pageInfo,\r\n    margin: {\r\n      Xmin: found.Xmin,\r\n      Xmax: found.Xmax,\r\n      Ymin: found.Ymin,\r\n      Ymax: found.Ymax,\r\n    },\r\n    glyphData: \"\",\r\n  };\r\n\r\n  return desc;\r\n}\r\n\r\n\r\n\r\nexport function getSurfaceSize_dpi(size: IPaperSize, dpi: number, isLandscape: boolean = false) {\r\n  let numerator = UNIT_TO_DPI[size.unit];\r\n  const ratio = 1.0;\r\n\r\n  let width = size.width * ratio * dpi / numerator;\r\n  let height = size.height * ratio * dpi / numerator;\r\n\r\n  width = Math.floor(width);\r\n  height = Math.floor(height);\r\n\r\n  if (isLandscape) {\r\n    return {\r\n      width: height,\r\n      height: width,\r\n    };\r\n  }\r\n\r\n  return {\r\n    width: width,\r\n    height: height,\r\n  };\r\n}\r\n\r\n\r\nexport function getSurfaceSize_px_600dpi(size: IPaperSize, isLandscape: boolean = false) {\r\n  return getSurfaceSize_dpi(size, UNIT_TO_DPI[\"600dpi\"], isLandscape);\r\n}\r\n\r\nexport function getSurfaceSize_inch(size: IPaperSize, isLandscape: boolean = false) {\r\n  return getSurfaceSize_dpi(size, 1, isLandscape);\r\n}\r\n\r\nexport function getSurfaceSize_mm(size: IPaperSize, isLandscape: boolean = false) {\r\n  return getSurfaceSize_dpi(size, UNIT_TO_DPI[\"mm\"], isLandscape);\r\n}\r\n\r\nexport function getSurfaceSize_css(size: IPaperSize, isLandscape: boolean = false) {\r\n  return getSurfaceSize_dpi(size, UNIT_TO_DPI[\"css\"], isLandscape);\r\n}\r\n\r\n\r\nexport function getSurfaceSize_pu(size: IPaperSize, isLandscape: boolean = false) {\r\n  return getSurfaceSize_dpi(size, UNIT_TO_DPI[\"pu\"], isLandscape);\r\n}\r\n\r\nexport function isPortrait(size: ISize) {\r\n  return size.width < size.height;\r\n}\r\n\r\nexport function getCssDpi() {\r\n  return UNIT_TO_DPI[\"css\"];\r\n}\r\n\r\n\r\n\r\nexport function isSamePage(pg1: IPageSOBP, pg2: IPageSOBP): boolean {\r\n  if (pg1.page !== pg2.page || pg1.book !== pg2.book || pg1.owner !== pg2.owner || pg1.section !== pg2.section) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NcodePrint\\PageForPrint.tsx",["1523","1524","1525","1526","1527","1528","1529","1530","1531","1532","1533","1534","1535","1536","1537","1538","1539","1540","1541","1542"],"import React, { Component } from 'react';\r\nimport * as PdfJs from 'pdfjs-dist';\r\nimport { IPageSOBP, ISize, ICssSize, IRectDpi, } from '../DataStructure/Structures';\r\nimport NcodeRasterizer, { IPagesPerSheetNumbers, IPrepareSurfaceParam, drawArrow, IAreasDesc, } from \"../NcodeSurface/NcodeRasterizer\";\r\nimport { CSS_DPI, IPrintOption } from './PrintDataTypes';\r\nimport { IPageOverview } from './PagesForPrint';\r\nimport { getSurfaceSize_css } from '../NcodeSurface';\r\nimport { getCellMatrixShape } from '../NcodeSurface/SurfaceSplitter';\r\nimport { IPdfPageCanvasDesc } from '../NeoPdf/NeoPdfPage';\r\nimport NeoPdfDocument from '../NeoPdf/NeoPdfDocument';\r\nimport { uuidv4 } from './UtilFunc';\r\n\r\nlet debug = 0;\r\n\r\ntype ICanvasShapeDesc = {\r\n  /** before applying rotation */\r\n  originalPixel: ISize,\r\n\r\n  /** after applying rotation */\r\n  pixel: ISize,\r\n  rotation: number,\r\n\r\n  /** based on originalPixel */\r\n  css: ICssSize,\r\n\r\n  /** based on originalPixel */\r\n  isLandscape: boolean,\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n  /** start from 0 */\r\n  sheetIndex: number,\r\n  pdf: NeoPdfDocument,\r\n\r\n  /** null이면 화면 전용 */\r\n  OnPagePrepared: Function,\r\n  printOption: IPrintOption,\r\n  pageNums: number[],\r\n  pagesOverview: IPageOverview[],\r\n\r\n  name: string,\r\n}\r\n\r\n\r\ninterface State {\r\n  status: string,\r\n  page: PdfJs.PDFPageProxy,\r\n  width: string,\r\n  height: string,\r\n\r\n  isLandscape: boolean,\r\n}\r\n\r\n\r\n/**\r\n * Class\r\n */\r\nexport class PageForPrint extends Component<Props, State> {\r\n  canvas: HTMLCanvasElement = null;\r\n  // pageImageDescs: IPdfPageCanvasDesc[] = [];\r\n  entireRotation: number = 0;\r\n\r\n  uuid: string;\r\n  state = {\r\n    /** @type {string} */\r\n    status: 'N/A',\r\n\r\n    /** @type {} */\r\n    page: null,\r\n    width: \"0px\",\r\n    height: \"0px\",\r\n    isLandscape: false,\r\n  };\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.uuid = uuidv4();\r\n    // this.pageImageDescs = new Array(props.printOption.pagesPerSheet);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param canvas\r\n   */\r\n  setCanvasRef = (canvas: HTMLCanvasElement) => {\r\n    this.canvas = canvas;\r\n  };\r\n\r\n  shouldComponentUpdate(nextProps: Props, nextState: State) {\r\n    // let shoudUpdate = true;\r\n    return this.props.pdf !== nextProps.pdf || this.state.status !== nextState.status;\r\n  }\r\n\r\n  componentDidUpdate(nextProps: Props, nextState: State) {\r\n    // this._update(nextProps.pdf, nextProps.printOption);\r\n\r\n    // console.log(\"[test updated] CHECK START\");\r\n    // for (const [key, value] of Object.entries(nextProps)) {\r\n    //   if (this.props[key] !== value) {\r\n    //     console.log(`[test updated] property[${key}] was changed, from \"${this.props[key]} to \"${value}\"`);\r\n    //   }\r\n    // }\r\n\r\n    // for (const [key, value] of Object.entries(nextState)) {\r\n    //   if (this.state[key] !== value) {\r\n    //     console.log(`[test updated] state[${key}] was changed, from \"${this.state[key]} to \"${value}\"`);\r\n    //   }\r\n    // }\r\n    // console.log(\"[test updated] CHECK END\");\r\n\r\n    this._update(nextProps.pdf, nextProps.printOption);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { pdf, printOption } = this.props;\r\n    this._update(pdf, printOption);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param pdf\r\n   */\r\n  _update = (pdf: NeoPdfDocument, printOption: IPrintOption) => {\r\n    if (pdf) {\r\n      this.prepareSheet(pdf, printOption);\r\n    } else {\r\n      this.setState({ status: 'loading' });\r\n    }\r\n  };\r\n\r\n\r\n  prepareSheet = async (pdf: NeoPdfDocument, printOption: IPrintOption) => {\r\n    if (!this.canvas) return;\r\n\r\n    // console.log(\"[xxx] PageForPrint loadPage\");\r\n    const status = this.state.status;\r\n    const { sheetIndex } = this.props;\r\n    if (status === 'rendering' || status === 'rendered' || this.state.page !== null) return;\r\n\r\n    this.setState({ status: 'rendering' });\r\n\r\n    // 렌더링할 페이지 번호들\r\n    const pageNums = this.props.pageNums;\r\n\r\n    // Main canvas를 준비\r\n    const canvasDesc = await this.prepareMainCanvas(printOption);\r\n\r\n    // PDF 이미지를 canvas버퍼에 넣어 둔다.\r\n    let pageImagesDesc = await this.preparePdfPageImages(pdf, pageNums);    // this.pageImageDescs\r\n\r\n    // 분할된 Ncode plane을 준비\r\n    const ncodePlane = await this.prepareSplittedNcodePlane(pageNums, printOption);\r\n    const { canvas: codeCanvas, canvasAreas, } = ncodePlane;\r\n    this.reportProgress({ sheetIndex, pageNums, completion: 50 });\r\n\r\n    // main canvas를 준비\r\n    const mainCanvas = this.canvas;\r\n    const ctx = mainCanvas.getContext(\"2d\");\r\n    ctx.fillStyle = \"rgba(255, 255, 255, 255)\";     // 투명 캔버스\r\n    ctx.fillRect(0, 0, mainCanvas.width, mainCanvas.height);\r\n    ctx.save();\r\n\r\n    ctx.imageSmoothingEnabled = false;\r\n\r\n    // main canvas에 PDF 이미지를 조합\r\n    pageImagesDesc = this.putPdfPageImagesOnMainCanvas(ctx, canvasAreas, pageImagesDesc);\r\n    this.reportProgress({ sheetIndex, pageNums, completion: 70 });\r\n\r\n    // 필요하면 debugging용 화살표를, debig level 1 이상\r\n    this.drawDebugLines(mainCanvas, ctx, printOption);\r\n\r\n    // main canvas에 Ncode 이미지를 오버레이\r\n    this.overlayNcodePlaneOnMainCanvas(ctx, codeCanvas, printOption);\r\n    this.reportProgress({ sheetIndex, pageNums, completion: 90 });\r\n\r\n    // PDF와 ncode의 mapping table에 추가\r\n    const pagesPerSheet = printOption.pagesPerSheet as number;\r\n    pdf.setDocumentId(pagesPerSheet);\r\n    for (let i = 0; i < pageImagesDesc.length; i++) {\r\n      pageImagesDesc[i].pdfPageInfo.id = pdf.id;\r\n    }\r\n\r\n    pdf.registerMappingItem(pageImagesDesc, ncodePlane, printOption.assignNewCode);\r\n\r\n\r\n    // 캔버스의 색상 값 디버깅용, debug level 3 이상\r\n    this.debugCheckColorValues(mainCanvas, ctx, printOption);\r\n    ctx.restore();\r\n\r\n    const { width: css_width, height: css_height } = canvasDesc.css;\r\n    this.setState({ status: 'rendered', width: css_width, height: css_height });\r\n\r\n    this.reportProgress({ sheetIndex, pageNums, completion: 100 });\r\n  }\r\n\r\n  private drawDebugLines = (mainCanvas, ctx, printOption: IPrintOption) => {\r\n    if (printOption.debugMode < 1) return;\r\n\r\n    ctx.save();\r\n\r\n    ctx.lineWidth = 10;\r\n    ctx.strokeStyle = \"rgb(0,0,0)\";\r\n    ctx.strokeRect(1, 1, mainCanvas.width - 1, mainCanvas.height - 1);\r\n\r\n    ctx.lineWidth = 50;\r\n    ctx.lineCap = \"round\";\r\n    const { width, height } = mainCanvas;\r\n\r\n    ctx.font = \"200px Verdana\";\r\n    // ctx.beginPath();\r\n    // ctx.moveTo(100, 100);\r\n    // ctx.lineTo(width - 100, 100);\r\n    // ctx.lineTo(width - 100, 120);\r\n    // ctx.lineTo(100, 120);\r\n    // ctx.moveTo(100, 100);\r\n    // ctx.stroke();\r\n    ctx.strokeStyle = \"rgb(0,0,0)\";\r\n    ctx.fillStyle = \"rgb(0,0, 0)\";\r\n    drawArrow(ctx, 50, 100, width - 100, 100);\r\n    ctx.fillText(\"X\", width - 300, 300);\r\n\r\n    drawArrow(ctx, 100, 50, 100, height - 100);\r\n    ctx.fillText(\"Y\", 150, height - 100);\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  private reportProgress = (arg: { sheetIndex: number, pageNums: number[], completion: number }) => {\r\n    const OnPagePrepared = this.props.OnPagePrepared;\r\n    if (OnPagePrepared) OnPagePrepared(arg);\r\n\r\n  }\r\n\r\n\r\n  private debugCheckColorValues = (mainCanvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D, printOption: IPrintOption) => {\r\n    if (!printOption.debugMode || printOption.debugMode < 3) return;\r\n\r\n    debug++;\r\n    console.log(`color check = ${debug}`);\r\n    const { width, height } = mainCanvas;\r\n    let id = ctx.getImageData(0, 0, width, height);\r\n    let pd = id.data;\r\n    let index = 0;\r\n\r\n    const m: { [key: string]: number } = {};\r\n    for (let y = 0; y < height; y++) {\r\n      for (let x = 0; x < width; x++) {\r\n        const r = pd[index];\r\n        const g = pd[index + 1];\r\n        const b = pd[index + 2];\r\n        const a = pd[index + 3];\r\n\r\n        // const str = r + \".\" + g + \".\" + b + \".\" + a;\r\n        const str = a + \".\";\r\n        if (!m.hasOwnProperty(str)) {\r\n          console.log(`found rgba=(${r}, ${g}, ${b}, ${a})`);\r\n          m[str] = 0;\r\n        }\r\n        m[str] = m[str] + 1;\r\n\r\n        index += 4;\r\n      }\r\n    }\r\n  }\r\n\r\n  private prepareSplittedNcodePlane = async (pageNums: number[], printOption: IPrintOption) => {\r\n\r\n    // 분할된 Ncode plane을 준비\r\n    const { pagesPerSheet, debugMode, printDpi, direction, mediaSize, hasToPutNcode } = printOption;\r\n    const pageInfos: IPageSOBP[] = [];\r\n\r\n    // const pageNums: number[] = [];\r\n    for (let i = 0; i < pageNums.length; i++) {\r\n      const pageNo = pageNums[i];\r\n\r\n      const p: IPageSOBP = {\r\n        ...printOption.pageInfo,\r\n        page: printOption.pageInfo.page + pageNo - 1,\r\n      }\r\n      pageInfos.push(p);\r\n    }\r\n\r\n    const options: IPrepareSurfaceParam = {\r\n      numItems: pagesPerSheet as IPagesPerSheetNumbers,\r\n      srcDirection: direction,\r\n      dpi: printDpi,\r\n      mediaSize,\r\n      debugMode,\r\n      pageInfos,\r\n      hasToPutNcode,\r\n    };\r\n\r\n    const rasterizer = new NcodeRasterizer(printOption);\r\n    const ncodePlane = await rasterizer.prepareNcodePlane(options);\r\n\r\n    return ncodePlane;\r\n  }\r\n\r\n  private putPdfPageImagesOnMainCanvas = (ctx: CanvasRenderingContext2D,\r\n    canvasAreas: IAreasDesc, pageImageDescs: IPdfPageCanvasDesc[]) => {\r\n    // for (let i = 0; i < this.pageImageDescs.length; i++) {\r\n    //   const desc = this.pageImageDescs[i];\r\n\r\n    for (let i = 0; i < pageImageDescs.length; i++) {\r\n      const desc = pageImageDescs[i];\r\n      if (!desc) continue;\r\n\r\n      const area = canvasAreas.areas[i];\r\n      const { x, y, width, height } = area;\r\n      const canvas = desc.canvas;\r\n      // console.log(`[Multipage] draw page ${i} ${canvas.width},${canvas.height} ==> (${x},${y})~(${width}, ${height})`)\r\n\r\n      const zoom_x = width / canvas.width;\r\n      const zoom_y = height / canvas.height;\r\n      const zoom = Math.min(zoom_x, zoom_y);\r\n\r\n      const dw = canvas.width * zoom;\r\n      const dh = canvas.height * zoom;\r\n      const dx = (width - dw) / 2;\r\n      const dy = (height - dh) / 2;\r\n\r\n      ctx.drawImage(canvas, 0, 0, canvas.width, canvas.height, x + dx, y + dy, dw, dh);\r\n\r\n      const rc: IRectDpi = {\r\n        unit: \"600dpi\",\r\n        x: x + dx,\r\n        y: y + dy,\r\n        width: dw,\r\n        height: dh,\r\n      }\r\n      desc.drawnRect = rc;\r\n    }\r\n\r\n    return pageImageDescs;\r\n\r\n  }\r\n\r\n  private overlayNcodePlaneOnMainCanvas = (ctx: CanvasRenderingContext2D, codeCanvas: HTMLCanvasElement, printOption: IPrintOption) => {\r\n    if (printOption.codeDensity === 3) {\r\n      ctx.drawImage(codeCanvas, 0, 0);\r\n      ctx.drawImage(codeCanvas, 1, 0);\r\n      ctx.drawImage(codeCanvas, 2, 0);\r\n\r\n      ctx.drawImage(codeCanvas, 0, 1);\r\n      ctx.drawImage(codeCanvas, 1, 1);\r\n      ctx.drawImage(codeCanvas, 2, 1);\r\n\r\n      ctx.drawImage(codeCanvas, 0, 2);\r\n      ctx.drawImage(codeCanvas, 1, 2);\r\n      ctx.drawImage(codeCanvas, 2, 2);\r\n    }\r\n    else {\r\n      ctx.drawImage(codeCanvas, 0, 0);\r\n      ctx.drawImage(codeCanvas, 1, 0);\r\n\r\n      ctx.drawImage(codeCanvas, 0, 1);\r\n      ctx.drawImage(codeCanvas, 1, 1);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  prepareMainCanvas = async (printOption: IPrintOption): Promise<ICanvasShapeDesc> => {\r\n    /** Prepare main canvas */\r\n\r\n    let mainCanvas = this.canvas;\r\n\r\n    if (!mainCanvas) {\r\n      console.log(\"main canvas is null\");\r\n      return;\r\n    }\r\n    const { printDpi: dpi, pagesPerSheet, direction } = printOption;\r\n\r\n    const { width: width_css, height: height_css } = getSurfaceSize_css(printOption.mediaSize);\r\n    // const { width: width_dpi, height: height_dpi } = getSurfaceSize_dpi(printOption.mediaSize, dpi);\r\n\r\n    const width_dpi = width_css * dpi / CSS_DPI;\r\n    const height_dpi = height_css * dpi / CSS_DPI;\r\n\r\n\r\n    /** 가로 세로의 비율을 원래대로 지키는 것이 아주 중요, 그렇지 않으면 프린터가 점을 깬다 */\r\n    // const dpi_css_scale_width = width_dpi / width_css;\r\n    // const dpi_css_scale_height = height_dpi / height_css;\r\n\r\n    // const toAvoidPageBreak = 1;\r\n    // let mediaCssWidth = Math.floor(width_css);\r\n    // let mediaCssHeight = Math.floor(height_css);\r\n    let mediaCssWidth = width_css;\r\n    let mediaCssHeight = height_css;\r\n\r\n    /** 이렇게 css의 크기를 변경해 주면, pixel의 크기도 변경해야 한다. 그때 가로 세로의 원래 비율을 유지하는 것이 굉장히 중요 */\r\n    // mediaCssWidth -= toAvoidPageBreak;\r\n    // mediaCssHeight -= toAvoidPageBreak;\r\n\r\n    let isLandscape = (direction === \"landscape\");\r\n\r\n    const { rotation } = getCellMatrixShape(pagesPerSheet, direction);\r\n    // console.log(`[yyy] prepareMainCanvas -${printOption.direction}, rotation=${rotation}`);\r\n\r\n    const isRotationNeeded = rotation === 90;\r\n    if (isRotationNeeded) isLandscape = !isLandscape;\r\n\r\n\r\n    /** 그래픽 크기와 상관 없이, rotation이 들어가 있는 경우 */\r\n    let canvasDesc: ICanvasShapeDesc = {\r\n      css: {\r\n        width: mediaCssWidth + \"px\",\r\n        height: mediaCssHeight + \"px\",\r\n      },\r\n\r\n      originalPixel: {\r\n        // width: Math.floor(mediaCssWidth * dpi_css_scale_width),\r\n        // height: Math.floor(mediaCssHeight * dpi_css_scale_height),\r\n        width: width_dpi,\r\n        height: height_dpi,\r\n      },\r\n\r\n      pixel: {\r\n        // width: Math.floor(mediaCssWidth * dpi_css_scale_width),\r\n        // height: Math.floor(mediaCssHeight * dpi_css_scale_height),\r\n        width: width_dpi,\r\n        height: height_dpi,\r\n      },\r\n      isLandscape: printOption.direction === \"landscape\",\r\n      rotation: 0,\r\n    };\r\n\r\n    if (isLandscape) {\r\n      canvasDesc = {\r\n        ...canvasDesc,\r\n        css: {\r\n          width: canvasDesc.css.height,\r\n          height: canvasDesc.css.width,\r\n        },\r\n        pixel: {\r\n          width: canvasDesc.pixel.height,\r\n          height: canvasDesc.pixel.width,\r\n        }\r\n      }\r\n    }\r\n\r\n    mainCanvas.width = canvasDesc.pixel.width;\r\n    mainCanvas.height = canvasDesc.pixel.height;\r\n\r\n    // console.log(`[size] mainCanvas = (${mainCanvas.width},${mainCanvas.height})`);\r\n    this.setState({ width: mediaCssWidth + \"px\", height: mediaCssHeight + \"px\" });\r\n\r\n    return canvasDesc;\r\n  }\r\n\r\n  /**\r\n   * this.pdfCanvasDescs에 canvasDesc들을 넣어 둔다.\r\n   */\r\n  private preparePdfPageImages = async (pdf: NeoPdfDocument, pageNums: number[])\r\n    : Promise<IPdfPageCanvasDesc[]> => {\r\n\r\n    const printOption = this.props.printOption;\r\n    const { pagesPerSheet, pdfRenderingDpi } = printOption;\r\n\r\n    const pdfDpi = pdfRenderingDpi / pagesPerSheet;\r\n    const descs = await pdf.renderPages_dpi(pageNums, pdfDpi, printOption.colorMode);\r\n    this.entireRotation = descs[0].rotation;\r\n\r\n    return descs;\r\n  }\r\n\r\n\r\n  /** imageRendering: \"pixelated\"가 굉장히 중요 */\r\n  render() {\r\n    let { sheetIndex } = this.props;\r\n    let { width, height, status } = this.state;\r\n    // console.log(`status [${status}],  Page orientation: ${isLandscape ? \"LandscapeOrientation\" : \"PortraitOrientation\"}`);\r\n    const style = {\r\n      // width, height,\r\n      // transform: `rotate(${-rotation}deg)`,\r\n      // WebkitTransform: `rotate(${-rotation}deg)`,\r\n      // msTransform: `rotate(${-rotation}deg)`,\r\n    };\r\n\r\n\r\n    return (\r\n      <div className={`pdf-sheet-${sheetIndex}${this.uuid} ${status}`} style={style} >\r\n        {/* <PortraitOrientation /> */}\r\n        <canvas ref={this.setCanvasRef} style={{ imageRendering: \"pixelated\", width, height }} />\r\n      </div >\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\NcodeConstans.ts",[],"C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\index.ts",[],"C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\NcodeFetcher.ts",["1543","1544","1545","1546","1547"],"import { IPageSOBP } from \"../DataStructure/Structures\";\r\nimport * as Zlib from \"zlib\";\r\nimport { INcodeSurfaceDesc } from \"./SurfaceDataTypes\";\r\nimport { getNPaperInfo, isSamePage } from \"./SurfaceInfo\";\r\n\r\n\r\n/**\r\n * Class\r\n */\r\nexport default class NcodeFetcher {\r\n  private codeText: string = \"\";\r\n  private fetchPromise: Promise<string> = Promise.resolve(\"\");\r\n  pageInfo: IPageSOBP;\r\n\r\n  constructor(pageInfo: IPageSOBP) {\r\n    this.pageInfo = pageInfo;\r\n    this.fetchPromise = this.fetchNcodeData(pageInfo);\r\n    this.fetchPromise.then(txt => this.codeText = txt);\r\n  }\r\n\r\n\r\n  /**\r\n   * 코드 정보를 받아온다\r\n   * 코드 정보를 받아올 때 나중에는 x margin, y margin도 서버에서 받아오게 해야 한다 2020/11/26\r\n   * @param pageInfo\r\n   */\r\n  public getNcodeData = async (pageInfo: IPageSOBP): Promise<INcodeSurfaceDesc> => {\r\n    // glyph text를 받아 온다.\r\n    if (isSamePage(this.pageInfo, pageInfo)) {\r\n      console.log(\"reuse downloaded glyph data file\");\r\n      const txt = await this.fetchPromise;\r\n      this.codeText = txt;\r\n    }\r\n    else {\r\n      console.log(\"download glyph data file\");\r\n      let promise = this.fetchNcodeData(pageInfo);\r\n      this.fetchPromise = promise;\r\n      const txt = await this.fetchPromise;\r\n\r\n      this.pageInfo = pageInfo;\r\n      this.codeText = txt;\r\n    }\r\n\r\n    const result: INcodeSurfaceDesc = getNPaperInfo(pageInfo);\r\n    result.glyphData = this.codeText;\r\n\r\n    return result;\r\n  }\r\n\r\n\r\n  private fetchNcodeData = async (pageInfo: IPageSOBP): Promise<string> => {\r\n    return new Promise(async (resolve, reject) => {\r\n      // console.log(`[fetch] ${pageInfo.section}.${pageInfo.owner}.${pageInfo.book}.${pageInfo.page}`);\r\n      const url = this.getRawCodeDataUrl(pageInfo);\r\n\r\n      let blob = await fetch(url).then((r) => {\r\n\r\n        if (r.ok) {\r\n          return r.blob();\r\n        }\r\n\r\n        resolve(\"\");\r\n      });\r\n\r\n      function gunzipCallback(decompressed) {\r\n        // console.log(decompressed);\r\n        const txt = new TextDecoder(\"utf-8\").decode(decompressed);\r\n        resolve(txt);\r\n      }\r\n\r\n      if (blob != null) {\r\n        try {\r\n          const buffer = await blob.arrayBuffer();\r\n          const u8buf = new Uint8Array(buffer);\r\n          // eslint-disable-next-line\r\n          const gunzip = new Zlib.gunzip(u8buf, (err, result) => {\r\n            // console.error(err);\r\n            if (err) {\r\n              console.log(err);\r\n              resolve(\"\");\r\n            }\r\n            gunzipCallback(result);\r\n          });\r\n        } catch (e) {\r\n          resolve(\"\");\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n  private getAbsoluteURL = (base: string, relative: string): string => {\r\n    const stack = base.split(\"/\");\r\n    const parts = relative.split(\"/\");\r\n\r\n    stack.pop(); // remove current file name (or empty string)\r\n\r\n    // (omit if \"base\" is the current folder without trailing slash)\r\n    for (let i = 0; i < parts.length; i++) {\r\n      if (parts[i] === \".\") continue;\r\n      if (parts[i] === \"..\") stack.pop();\r\n      else stack.push(parts[i]);\r\n    }\r\n    return stack.join(\"/\");\r\n  }\r\n\r\n\r\n  private getRawCodeDataUrl = (pageInfo: IPageSOBP): string => {\r\n\r\n    const { section, owner, book, page } = pageInfo;\r\n\r\n    const ncode_idx = \"s\" + section + \"-o\" + owner + \"-b\" + book + \"-p\" + page;\r\n    const dir_name = \"s\" + section + \"-o\" + owner + \"-b\" + book;\r\n\r\n    const filename = \"./ncode_data/\" + dir_name + \"/\" + ncode_idx + \".code.gz\";\r\n    const doc_url = document.location.href;\r\n    const url = this.getAbsoluteURL(doc_url, filename);\r\n\r\n    return url;\r\n  }\r\n}","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\NcodeSurfaceDataJson.ts",[],"C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\NcodeSurface\\index.ts",[],"C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\DataTypes.ts",[],"C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\CoordinateTanslater.ts",["1548","1549","1550","1551"],"import { IPoint } from \"../DataStructure/Structures\";\r\nimport * as Solve from \"./SolveTransform\";\r\nimport { TransformPoints, TransformPointPairs, TransformParameters, IMappingParams } from \"./DataTypes\";\r\nimport { MappingItem } from \"../SurfaceMapper/MappingItem\";\r\nimport { sprintf } from \"sprintf-js\";\r\n\r\nconst solveAffine = Solve.solveAffine;\r\nconst solveHomography = Solve.solveHomography;\r\nconst applyTransform = Solve.applyTransform;\r\n\r\n\r\n/** for debugging */\r\nlet _srcPts: TransformPoints = null;\r\nlet _dstPts: TransformPoints = null;\r\nlet _params: TransformParameters = null;\r\n\r\n/**\r\n * -----------------------------------------------------------------------------------\r\n * A. 우리는 다음과 같은 좌표계를 쓴다.\r\n *\r\n * 1) Ncode 좌표계\r\n * 2) PDF 좌표계\r\n * 3) Canvas 좌표계\r\n * 4) 화면 좌표계\r\n *\r\n *\r\n * 1) NU(Ncode Unit): 56/600 DPI, Ncode 좌표계는 펜에서 검출되는 좌표계를 기준으로 한다.\r\n *    - 600DPI에서 8 pixel 거리를 가지는 7개 glyph 가 하나의 Ncode\r\n *    - 1 NU = 7(glyphs) * 8(pixels) / 600 (DPI) = 56/600 Inch = 약 2.370666667 mm\r\n *\r\n *\r\n * 2) PU(Pdf Unit): 72 DPI, PDF 좌표계는 PdfJs.getViewport({scale:1})을 통해서 나오는 크기를 기준으로 하는 좌표계\r\n *    - PDF가 설계될 당시 1:1 scale의 좌표계는 72DPI\r\n *    - 1 PU = 1 pixel @ 72DPI = 1(pixel) / 72(DPI) = 1/72 Inch = 약 0.352777778 mm\r\n *\r\n * 3) CU(Canvas Unit): 96 DPI, HTML의 CSS에 의해 만들어진 좌표\r\n *    - 1 CU = 1pixel @ 96DPI = 1(pixel) / 96(DPI) = 1/96 Inch = 약 0.010416667 mm\r\n *\r\n * 4) SU(Screen Unit): 화면의 zoom과 offset에 따라 달라짐\r\n *    - zoom은 CU와 1:1일 때, 100%\r\n *    - fabric의 canvas.zoom, offset_x, offset_y에 의해 계산이 달라짐\r\n *\r\n * -----------------------------------------------------------------------------------\r\n * B. 1:1일 때, 계산 방법\r\n *\r\n * 1) NU to PU\r\n *    pu = nu * (56/600) / (1/72) = nu * 6.72\r\n *\r\n * 2) PU to CU\r\n *    cu = pu * (1/72) / (1/96) = pu * 4 / 3\r\n *\r\n * 3) NU to CU\r\n *    cu = nu * 6.72 * (4/3) = nu * 8.96\r\n *\r\n * 4) CU to SU(zoom, offset)\r\n *    su = zoom * CU + offset\r\n *\r\n * -----------------------------------------------------------------------------------\r\n * C. Transform matrix로 계산 방법\r\n *\r\n * 0) TransformMatrix를 구한다\r\n *    a) src points (Ncode Unit)의 4개 점 (affine에서는 3개 점)\r\n *    b) 각 src point에 해당하는 dst points (Pdf Unit)의 4개 점을 (affine에서는 3개 점)\r\n *    c) HomographyPoints (또는 AffinePoints)에 넣고\r\n *    d) solveHomography 또는 solveAffine으로 값을 구하고 TransformMatrix 타입의 리턴을\r\n *    e) 어딘가에 저장해 둔다. (예, transMtx)\r\n *\r\n * 1) pt in NU to pt' in PU\r\n *    pt' = applyTransform( pt, transMtx );\r\n *\r\n * 2) PU to CU\r\n *    - B-2)과 같다.\r\n *\r\n * 3) NU to CU\r\n *    - cu = applyTransform( nu, transMtx ) * 4 /3\r\n *\r\n * -----------------------------------------------------------------------------------\r\n * D. 코딩 시 변수 구별 원칙\r\n * 1) ptNu = pt at Ncode coordinate system\r\n * 2) ptPu = pt at Pdf Pixel coordinate system\r\n * 3) ptCu = pt at Fabric Canvas coordinate system\r\n * 4) ptSu = pt at screen coordinate system\r\n *\r\n *\r\n */\r\nexport default class CoordinateTanslater {\r\n  // private _params: TransformParameters = null;\r\n  // private _paramsReverse: TransformParameters = null;\r\n\r\n  private _mappingParams: IMappingParams = null;\r\n\r\n  constructor(original: CoordinateTanslater = null) {\r\n    if (original) {\r\n      const json = JSON.stringify(original._mappingParams);\r\n      this._mappingParams = JSON.parse(json);\r\n      this.calcReverse();\r\n    }\r\n  }\r\n\r\n  get mappingParams() {\r\n    return this._mappingParams;\r\n  }\r\n\r\n  /**\r\n   * calculate transform parameters (reverse\r\n   * @param points\r\n   */\r\n  public calc = (mappingItem: MappingItem) => {\r\n    this._mappingParams = mappingItem._params;\r\n\r\n    const srcPts = mappingItem.srcPts;\r\n    const dstPts = mappingItem.dstPts;\r\n\r\n    _srcPts = mappingItem.srcPts;\r\n    _dstPts = mappingItem.dstPts;\r\n\r\n    /** src:NU, dst:PU */\r\n    const pts = {\r\n      src: { ...srcPts, },\r\n      dst: { ...dstPts, }\r\n    } as TransformPointPairs;\r\n\r\n    /** src:PU, dst:NU */\r\n    const ptsReverse = {\r\n      src: { ...dstPts, },\r\n      dst: { ...srcPts, }\r\n    } as TransformPointPairs;\r\n\r\n\r\n    if (srcPts.type === \"affine\") {\r\n      this._mappingParams.h = solveAffine(pts);  // NU -> PU\r\n      this._mappingParams.h_rev = solveAffine(ptsReverse);  // PU -> NU\r\n\r\n      _params = this._mappingParams.h;\r\n      return;\r\n    }\r\n    else if (srcPts.type === \"homography\") {\r\n      this._mappingParams.h = solveHomography(pts);  // NU -> PU\r\n      this._mappingParams.h_rev = solveHomography(ptsReverse);  // PU -> NU\r\n\r\n      _params = this._mappingParams.h;\r\n      return;\r\n    }\r\n\r\n    throw Error(\"CoordinateTanslater needs '3 or 4 pairs of points' to initiate class.\");\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   */\r\n  private calcReverse = () => {\r\n    // 아래는 임의의 숫자\r\n    const srcPts: TransformPoints = {\r\n      type: \"homography\",\r\n      unit: \"pu\",\r\n      pts: [\r\n        { x: 0, y: 0 },\r\n        { x: 100, y: 0 },\r\n        { x: 100, y: 100 },\r\n        { x: 0, y: 100 },\r\n      ]\r\n    };\r\n\r\n    // 정방향 파라메터로 역방향의 대상이 되는 점을 연산\r\n    let dstPts: TransformPoints = {\r\n      type: \"homography\",\r\n      unit: \"nu\",\r\n      pts: new Array(4),\r\n    };\r\n\r\n    for (let i = 0; i < 4; i++) {\r\n      const dstPt = this.NUtoPU(srcPts[i]);\r\n      dstPts[i] = dstPt;\r\n    }\r\n\r\n    /** src:PU, dst:NU */\r\n    const ptsReverse = {\r\n      src: { ...dstPts, },\r\n      dst: { ...srcPts, }\r\n    } as TransformPointPairs;\r\n\r\n    this._mappingParams.h_rev = solveHomography(ptsReverse);\r\n  }\r\n\r\n  public dump = (prefix: string) => {\r\n    const { a, b, c, d, e, f, g, h } = _params;\r\n    const sp = _srcPts.pts;\r\n    const dp = _dstPts.pts;\r\n\r\n    for (let i = 0; i < 4; i++) {\r\n      console.log(`[${prefix}] ${sprintf(\"(%6.1f, %6.1f) => (%5d, %5d)\", sp[i].x, sp[i].y, dp[i].x, dp[i].y)}`);\r\n\r\n    }\r\n\r\n\r\n    const first = sprintf(\"%7.1f %7.1f %7.1f\", a, b, c);\r\n    const second = sprintf(\"%7.2f %7.1f %7.1f\", d, e, f);\r\n    const thrid = sprintf(\"%7.1f %7.1f %7.1f\", g, h, 1);\r\n\r\n    console.log(`[${prefix}]`);\r\n    console.log(`[${prefix}]          | ${first} |`);\r\n    console.log(`[${prefix}]     H =  | ${second} |`);\r\n    console.log(`[${prefix}]          | ${thrid} |`);\r\n    console.log(`[${prefix}]`);\r\n  }\r\n\r\n  /**\r\n   * 계산된 변환행렬을 반환\r\n   *\r\n   * return {...this._params} 로 해야 하지 않을까?\r\n   * 이것 때문에 class가 메모리에 계속 남아 있으면 어떻게 하지?\r\n   */\r\n  public get params(): TransformParameters {\r\n    return this._mappingParams.h;\r\n  }\r\n\r\n  /**\r\n   * Ncode point to Pds point\r\n   * @param ptNu\r\n   */\r\n  public NUtoPU = (ptNu: IPoint): IPoint => {\r\n    const ptPu = applyTransform(ptNu, this._mappingParams.h);\r\n    return ptPu;\r\n  }\r\n\r\n  /**\r\n   * Pds point to Ncode point\r\n   * @param ptNu\r\n   */\r\n  public PUtoNU = (ptPu: IPoint): IPoint => {\r\n    const ptNu = applyTransform(ptPu, this._mappingParams.h_rev);\r\n    return ptNu;\r\n  }\r\n\r\n}\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\SolveTransform.ts",["1552","1553"],"import { IPoint } from \"../DataStructure/Structures\";\r\nimport { EchelonMatrix } from \"./EchelonMatrix\";\r\nimport { TransformParameters, TransformPointPairs } from \"./DataTypes\";\r\nimport * as Gaussian from \"./GaussianElimination\";\r\nimport expect from \"expect.js\";\r\n/**\r\n * private\r\n * @param points\r\n */\r\nfunction initEchelonMtx_Homography(points: TransformPointPairs): EchelonMatrix {\r\n  expect(points.src.type).to.be(\"homography\");\r\n  const mtx = new EchelonMatrix(\"homography\");\r\n\r\n  // Point *src, *dst;\r\n\r\n  // [0..7][0..8]의 행렬, 가우스 소거법을 쓰기 위해서\r\n  for (let i = 0; i < 4; i++) {\r\n    let r1 = i * 2;\r\n    let r2 = r1 + 1;\r\n\r\n    const src = points.src.pts[i];\r\n    const dst = points.dst.pts[i];\r\n\r\n    /**\r\n     * x's\r\n     */\r\n    mtx.elem[r1][0] = src.x;\r\n    mtx.elem[r1][1] = src.y;\r\n    mtx.elem[r1][2] = 1;\r\n\r\n    mtx.elem[r1][3] = 0;\r\n    mtx.elem[r1][4] = 0;\r\n    mtx.elem[r1][5] = 0;\r\n\r\n    mtx.elem[r1][6] = -(src.x * dst.x);\r\n    mtx.elem[r1][7] = -(src.y * dst.x);\r\n    mtx.elem[r1][8] = dst.x;\r\n\r\n    /**\r\n     * y's\r\n     */\r\n    mtx.elem[r2][0] = 0;\r\n    mtx.elem[r2][1] = 0;\r\n    mtx.elem[r2][2] = 0;\r\n\r\n    mtx.elem[r2][3] = src.x;\r\n    mtx.elem[r2][4] = src.y;\r\n    mtx.elem[r2][5] = 1;\r\n\r\n    mtx.elem[r2][6] = -(src.x * dst.y);\r\n    mtx.elem[r2][7] = -(src.y * dst.y);\r\n    mtx.elem[r2][8] = dst.y;\r\n  }\r\n\r\n  return mtx;\r\n}\r\n\r\n/**\r\n * private\r\n * @param points\r\n */\r\nfunction initEchelonMtx_Affine(points: TransformPointPairs): EchelonMatrix {\r\n  expect(points.src.type).to.be(\"affine\");\r\n\r\n  const mtx = new EchelonMatrix(\"affine\");\r\n  // [0..7][0..8]의 행렬, 가우스 소거법을 쓰기 위해서\r\n  for (let i = 0; i < 3; i++) {\r\n    const r1 = i * 2;\r\n    const r2 = r1 + 1;\r\n\r\n    const src = points.src.pts[i];\r\n    const dst = points.dst.pts[i];\r\n\r\n    /**\r\n     * x's\r\n     */\r\n    mtx.elem[r1][0] = src.x;\r\n    mtx.elem[r1][1] = src.y;\r\n\r\n    mtx.elem[r1][2] = 0;\r\n    mtx.elem[r1][3] = 0;\r\n\r\n    mtx.elem[r1][4] = 1;\r\n    mtx.elem[r1][5] = 0;\r\n    mtx.elem[r1][6] = dst.x;\r\n\r\n    /**\r\n     * y's\r\n     */\r\n    mtx.elem[r2][0] = 0;\r\n    mtx.elem[r2][1] = 0;\r\n\r\n    mtx.elem[r2][2] = src.x;\r\n    mtx.elem[r2][3] = src.y;\r\n\r\n    mtx.elem[r2][4] = 0;\r\n    mtx.elem[r2][5] = 1;\r\n    mtx.elem[r2][6] = dst.y;\r\n  }\r\n\r\n  return mtx;\r\n}\r\n\r\n\r\n/**\r\n * public\r\n * @param points\r\n */\r\nexport function solveHomography(points: TransformPointPairs): TransformParameters {\r\n  expect(points.src.type).to.be(\"homography\");\r\n\r\n  // EchelonMatrix A;\r\n  // int n;\r\n  const mat = initEchelonMtx_Homography(points);\r\n  Gaussian.reduce(mat);\r\n\r\n  const params: TransformParameters = {\r\n    type: \"homography\",\r\n\r\n    a: mat.elem[0][8],\r\n    b: mat.elem[1][8],\r\n    c: mat.elem[2][8],\r\n\r\n    d: mat.elem[3][8],\r\n    e: mat.elem[4][8],\r\n    f: mat.elem[5][8],\r\n\r\n    g: mat.elem[6][8],\r\n    h: mat.elem[7][8],\r\n    i: 1,\r\n\r\n    tx: mat.elem[2][8],\r\n    ty: mat.elem[5][8],\r\n  };\r\n  return params;\r\n}\r\n\r\n\r\n/**\r\n * public\r\n * @param points\r\n */\r\nexport function solveAffine(points: TransformPointPairs): TransformParameters {\r\n  expect(points.src.type).to.be(\"affine\");\r\n\r\n  // _affineCalcMatrix A;\r\n  // int n;\r\n  const mat = initEchelonMtx_Affine(points);\r\n  Gaussian.reduce(mat);\r\n  const params: TransformParameters = {\r\n    type: \"affine\",\r\n    a: mat.elem[0][6],\r\n    b: mat.elem[1][6],\r\n    c: mat.elem[4][6],\r\n\r\n    d: mat.elem[2][6],\r\n    e: mat.elem[3][6],\r\n    f: mat.elem[5][6],\r\n\r\n    g: 0,\r\n    h: 0,\r\n    i: 1,\r\n\r\n    tx: mat.elem[4][6],\r\n    ty: mat.elem[5][6],\r\n  };\r\n  return params;\r\n}\r\n\r\n/**\r\n * public\r\n * @param mtx\r\n * @param pt\r\n * @return Ipoint\r\n */\r\nexport function applyTransform(pt: IPoint, params: TransformParameters): IPoint {\r\n  const { x, y } = pt;\r\n  const { a, b, c, d, e, f, g, h } = params;\r\n\r\n  const det = 1 / (g * x + h * y + 1);\r\n  const xx = (a * x + b * y + c) * det;\r\n  const yy = (d * x + e * y + f) * det;\r\n\r\n  return { x: xx, y: yy }\r\n}\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\EchelonMatrix.ts",["1554"],"\r\n/**\r\n * \r\n */\r\nexport class EchelonMatrix {\r\n  private type: string;\r\n  public rows: number;\r\n  public cols: number;\r\n  public elem: Array<number[]>;\r\n\r\n  /**\r\n   * \r\n   * @param rows \r\n   */\r\n  constructor(type: \"homography\" | \"affine\" | number) {\r\n    let rows = 8;\r\n    if (typeof (type) === \"string\") {\r\n      this.type = type;\r\n\r\n      if (type === \"homography\") rows = 8;\r\n      else if (type === \"affine\") rows = 6;\r\n    }\r\n    else if (typeof (type) === \"number\") {\r\n      rows = type;\r\n    }\r\n\r\n    this.init(rows);\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param rows \r\n   */\r\n  private init(rows: number) {\r\n    this.rows = rows;\r\n    this.cols = rows + 1;\r\n    this.elem = new Array(rows);\r\n\r\n    for (let i = 0; i < rows; i++) {\r\n      this.elem[i] = new Array(this.cols);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * @param row \r\n   * @param data \r\n   */\r\n  public setRow(row: number, data: number[]) {\r\n    if (row >= this.rows) {\r\n      throw new Error(`\"setRow Error, row index(${row}) larger than the rows array size(${this.rows})`);\r\n    }\r\n    this.elem[row] = data;\r\n  }\r\n}\r\n","C:\\Users\\loite\\Documents\\GridaBoard2\\src\\NcodePrintLib\\Coordinates\\GaussianElimination.ts",["1555","1556"],"import { EchelonMatrix } from \"./EchelonMatrix\";\r\nimport { sprintf } from \"sprintf-js\";\r\n\r\n/**\r\n * public\r\n * @param mtx \r\n */\r\nexport function reduce(mtx: EchelonMatrix) {\r\n  // 본격적을 RREF를 구하기 시작\r\n  let lead = 0;\r\n  for (let row = 0; row < mtx.rows; row++) {\r\n    if (lead >= mtx.cols) return;\r\n\r\n    let nonZeroRow = row;\r\n    while (0 === mtx.elem[nonZeroRow][lead]) {\r\n      nonZeroRow++;\r\n\r\n      if (nonZeroRow === mtx.rows) {\r\n        nonZeroRow = row;\r\n        lead++;\r\n        if (lead === mtx.cols) return;\r\n      }\r\n    }\r\n\r\n    swapRows(mtx, nonZeroRow, row);\r\n    nomalizeRow(mtx, row, lead);\r\n\r\n    for (nonZeroRow = 0; nonZeroRow < mtx.rows; nonZeroRow++) {\r\n      if (nonZeroRow !== row) {\r\n        const fElem = mtx.elem[nonZeroRow][lead];\r\n        rowMultiplyAndAdd(mtx, nonZeroRow, row, -1 * fElem);\r\n      }\r\n    }\r\n    lead++;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * for debug\r\n * @param mtx \r\n */\r\nexport function dumpMatrix(mtx: EchelonMatrix) {\r\n  console.log(`${mtx.rows} x ${mtx.cols} MATRIX`);\r\n  for (let row = 0; row < mtx.rows; row++) {\r\n    let line = \"\";\r\n    for (let col = 0; col < mtx.cols; col++) {\r\n      const val = mtx.elem[row][col];\r\n      line += sprintf(\"%6.4f\", val);\r\n    }\r\n    console.log(line);\r\n  }\r\n}\r\n\r\n/**\r\n * \r\n * @param mtx \r\n * @param row \r\n * @param lead \r\n */\r\nfunction nomalizeRow(mtx: EchelonMatrix, row: number, lead: number) {\r\n  const val = mtx.elem[row][lead];\r\n\r\n  for (let i = 0; i < mtx.cols; i++) {\r\n    mtx.elem[row][i] /= val;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * \r\n * @param mtx \r\n * @param rowDst \r\n * @param rowSrc \r\n * @param multiplier \r\n */\r\nfunction rowMultiplyAndAdd(mtx: EchelonMatrix, rowDst: number, rowSrc: number, multiplier: number) {\r\n  for (let i = 0; i < mtx.cols; i++) {\r\n    mtx.elem[rowDst][i] += mtx.elem[rowSrc][i] * multiplier;\r\n  }\r\n}\r\n\r\n/**\r\n * \r\n * @param mtx \r\n * @param row1 \r\n * @param row2 \r\n */\r\nfunction swapRows(mtx: EchelonMatrix, row1: number, row2: number) {\r\n  if (row1 === row2) return;\r\n\r\n  for (let i = 0; i < mtx.cols; i++) {\r\n    const temp = mtx.elem[row1][i];\r\n    mtx.elem[row1][i] = mtx.elem[row2][i];\r\n    mtx.elem[row2][i] = temp;\r\n  }\r\n}\r\n\r\n",{"ruleId":"1557","severity":1,"message":"1558","line":23,"column":8,"nodeType":"1559","messageId":"1560","endLine":23,"endColumn":33},{"ruleId":"1557","severity":1,"message":"1561","line":23,"column":26,"nodeType":"1562","messageId":"1563","endLine":23,"endColumn":32},{"ruleId":"1557","severity":1,"message":"1558","line":131,"column":8,"nodeType":"1559","messageId":"1560","endLine":131,"endColumn":29},{"ruleId":"1564","severity":1,"message":"1565","line":4,"column":26,"nodeType":"1562","messageId":"1566","endLine":4,"endColumn":41},{"ruleId":"1557","severity":1,"message":"1558","line":27,"column":14,"nodeType":"1567","messageId":"1560","endLine":27,"endColumn":19},{"ruleId":"1557","severity":1,"message":"1558","line":8,"column":3,"nodeType":"1568","messageId":"1560","endLine":8,"endColumn":11},{"ruleId":"1564","severity":1,"message":"1569","line":7,"column":7,"nodeType":"1562","messageId":"1566","endLine":7,"endColumn":19},{"ruleId":"1557","severity":1,"message":"1558","line":5,"column":33,"nodeType":"1567","messageId":"1560","endLine":5,"endColumn":43},{"ruleId":"1557","severity":1,"message":"1570","line":5,"column":33,"nodeType":"1562","messageId":"1563","endLine":5,"endColumn":40},{"ruleId":"1557","severity":1,"message":"1558","line":13,"column":16,"nodeType":"1559","messageId":"1560","endLine":13,"endColumn":68},{"ruleId":"1557","severity":1,"message":"1571","line":13,"column":61,"nodeType":"1562","messageId":"1563","endLine":13,"endColumn":67},{"ruleId":"1557","severity":1,"message":"1558","line":14,"column":25,"nodeType":"1567","messageId":"1560","endLine":14,"endColumn":39},{"ruleId":"1557","severity":1,"message":"1572","line":14,"column":26,"nodeType":"1562","messageId":"1563","endLine":14,"endColumn":35},{"ruleId":"1557","severity":1,"message":"1558","line":22,"column":23,"nodeType":"1567","messageId":"1560","endLine":22,"endColumn":28},{"ruleId":"1557","severity":1,"message":"1558","line":32,"column":16,"nodeType":"1567","messageId":"1560","endLine":34,"endColumn":14},{"ruleId":"1557","severity":1,"message":"1571","line":34,"column":4,"nodeType":"1562","messageId":"1563","endLine":34,"endColumn":10},{"ruleId":"1557","severity":1,"message":"1558","line":18,"column":39,"nodeType":"1567","messageId":"1560","endLine":18,"endColumn":44},{"ruleId":"1557","severity":1,"message":"1558","line":23,"column":39,"nodeType":"1567","messageId":"1560","endLine":23,"endColumn":44},{"ruleId":"1557","severity":1,"message":"1558","line":29,"column":31,"nodeType":"1567","messageId":"1560","endLine":29,"endColumn":43},{"ruleId":"1557","severity":1,"message":"1573","line":29,"column":32,"nodeType":"1562","messageId":"1563","endLine":29,"endColumn":39},{"ruleId":"1557","severity":1,"message":"1558","line":36,"column":33,"nodeType":"1567","messageId":"1560","endLine":36,"endColumn":45},{"ruleId":"1557","severity":1,"message":"1573","line":36,"column":34,"nodeType":"1562","messageId":"1563","endLine":36,"endColumn":41},{"ruleId":"1557","severity":1,"message":"1558","line":43,"column":30,"nodeType":"1567","messageId":"1560","endLine":43,"endColumn":42},{"ruleId":"1557","severity":1,"message":"1573","line":43,"column":31,"nodeType":"1562","messageId":"1563","endLine":43,"endColumn":38},{"ruleId":"1557","severity":1,"message":"1558","line":50,"column":33,"nodeType":"1567","messageId":"1560","endLine":50,"endColumn":45},{"ruleId":"1557","severity":1,"message":"1573","line":50,"column":34,"nodeType":"1562","messageId":"1563","endLine":50,"endColumn":41},{"ruleId":"1557","severity":1,"message":"1558","line":57,"column":33,"nodeType":"1567","messageId":"1560","endLine":57,"endColumn":45},{"ruleId":"1557","severity":1,"message":"1573","line":57,"column":34,"nodeType":"1562","messageId":"1563","endLine":57,"endColumn":41},{"ruleId":"1557","severity":1,"message":"1558","line":64,"column":33,"nodeType":"1567","messageId":"1560","endLine":64,"endColumn":38},{"ruleId":"1557","severity":1,"message":"1558","line":70,"column":27,"nodeType":"1567","messageId":"1560","endLine":70,"endColumn":104},{"ruleId":"1557","severity":1,"message":"1574","line":70,"column":28,"nodeType":"1562","messageId":"1563","endLine":70,"endColumn":33},{"ruleId":"1557","severity":1,"message":"1573","line":70,"column":35,"nodeType":"1562","messageId":"1563","endLine":70,"endColumn":42},{"ruleId":"1557","severity":1,"message":"1575","line":70,"column":44,"nodeType":"1562","messageId":"1563","endLine":70,"endColumn":58},{"ruleId":"1557","severity":1,"message":"1576","line":70,"column":60,"nodeType":"1562","messageId":"1563","endLine":70,"endColumn":73},{"ruleId":"1557","severity":1,"message":"1577","line":70,"column":75,"nodeType":"1562","messageId":"1563","endLine":70,"endColumn":82},{"ruleId":"1557","severity":1,"message":"1578","line":70,"column":84,"nodeType":"1562","messageId":"1563","endLine":70,"endColumn":100},{"ruleId":"1557","severity":1,"message":"1558","line":81,"column":27,"nodeType":"1567","messageId":"1560","endLine":81,"endColumn":32},{"ruleId":"1557","severity":1,"message":"1558","line":86,"column":34,"nodeType":"1567","messageId":"1560","endLine":86,"endColumn":39},{"ruleId":"1557","severity":1,"message":"1558","line":94,"column":16,"nodeType":"1567","messageId":"1560","endLine":113,"endColumn":14},{"ruleId":"1557","severity":1,"message":"1571","line":113,"column":4,"nodeType":"1562","messageId":"1563","endLine":113,"endColumn":10},{"ruleId":"1557","severity":1,"message":"1558","line":3,"column":14,"nodeType":"1567","messageId":"1560","endLine":3,"endColumn":28},{"ruleId":"1557","severity":1,"message":"1579","line":3,"column":15,"nodeType":"1580","messageId":"1581","endLine":3,"endColumn":24},{"ruleId":"1582","severity":2,"message":"1583","line":3,"column":17,"nodeType":"1584","endLine":3,"endColumn":22},{"ruleId":"1582","severity":2,"message":"1585","line":4,"column":26,"nodeType":"1562","endLine":4,"endColumn":32},{"ruleId":"1582","severity":2,"message":"1586","line":4,"column":33,"nodeType":"1562","endLine":4,"endColumn":35},{"ruleId":"1557","severity":1,"message":"1558","line":4,"column":15,"nodeType":"1567","messageId":"1560","endLine":4,"endColumn":39},{"ruleId":"1557","severity":1,"message":"1579","line":4,"column":16,"nodeType":"1580","messageId":"1581","endLine":4,"endColumn":35},{"ruleId":"1582","severity":2,"message":"1587","line":4,"column":18,"nodeType":"1584","endLine":4,"endColumn":26},{"ruleId":"1582","severity":2,"message":"1583","line":4,"column":28,"nodeType":"1584","endLine":4,"endColumn":33},{"ruleId":"1582","severity":2,"message":"1588","line":5,"column":44,"nodeType":"1562","endLine":5,"endColumn":50},{"ruleId":"1582","severity":2,"message":"1585","line":10,"column":24,"nodeType":"1562","endLine":10,"endColumn":30},{"ruleId":"1582","severity":2,"message":"1589","line":10,"column":31,"nodeType":"1562","endLine":10,"endColumn":35},{"ruleId":"1557","severity":1,"message":"1558","line":5,"column":15,"nodeType":"1567","messageId":"1560","endLine":5,"endColumn":39},{"ruleId":"1557","severity":1,"message":"1579","line":5,"column":16,"nodeType":"1580","messageId":"1581","endLine":5,"endColumn":35},{"ruleId":"1582","severity":2,"message":"1587","line":5,"column":18,"nodeType":"1584","endLine":5,"endColumn":26},{"ruleId":"1582","severity":2,"message":"1583","line":5,"column":28,"nodeType":"1584","endLine":5,"endColumn":33},{"ruleId":"1582","severity":2,"message":"1590","line":6,"column":48,"nodeType":"1562","endLine":6,"endColumn":56},{"ruleId":"1582","severity":2,"message":"1591","line":7,"column":37,"nodeType":"1562","endLine":7,"endColumn":40},{"ruleId":"1582","severity":2,"message":"1592","line":8,"column":38,"nodeType":"1562","endLine":8,"endColumn":42},{"ruleId":"1582","severity":2,"message":"1591","line":13,"column":32,"nodeType":"1562","endLine":13,"endColumn":35},{"ruleId":"1582","severity":2,"message":"1591","line":14,"column":32,"nodeType":"1562","endLine":14,"endColumn":35},{"ruleId":"1582","severity":2,"message":"1591","line":15,"column":32,"nodeType":"1562","endLine":15,"endColumn":35},{"ruleId":"1582","severity":2,"message":"1591","line":16,"column":32,"nodeType":"1562","endLine":16,"endColumn":35},{"ruleId":"1582","severity":2,"message":"1591","line":18,"column":32,"nodeType":"1562","endLine":18,"endColumn":35},{"ruleId":"1582","severity":2,"message":"1591","line":19,"column":29,"nodeType":"1562","endLine":19,"endColumn":32},{"ruleId":"1564","severity":1,"message":"1593","line":5,"column":8,"nodeType":"1562","messageId":"1566","endLine":5,"endColumn":18},{"ruleId":"1594","severity":2,"message":"1595","line":47,"column":3,"nodeType":"1596","messageId":"1597","endLine":47,"endColumn":56,"fix":"1598"},{"ruleId":"1594","severity":2,"message":"1595","line":48,"column":3,"nodeType":"1596","messageId":"1597","endLine":48,"endColumn":54,"fix":"1599"},{"ruleId":"1594","severity":2,"message":"1595","line":49,"column":3,"nodeType":"1596","messageId":"1597","endLine":49,"endColumn":60,"fix":"1600"},{"ruleId":"1594","severity":2,"message":"1595","line":50,"column":3,"nodeType":"1596","messageId":"1597","endLine":50,"endColumn":54,"fix":"1601"},{"ruleId":"1564","severity":1,"message":"1602","line":69,"column":22,"nodeType":"1562","messageId":"1566","endLine":69,"endColumn":27},{"ruleId":"1603","severity":2,"message":"1604","line":71,"column":7,"nodeType":"1562","messageId":"1605","endLine":71,"endColumn":16,"fix":"1606"},{"ruleId":"1603","severity":2,"message":"1607","line":76,"column":5,"nodeType":"1562","messageId":"1605","endLine":76,"endColumn":10,"fix":"1608"},{"ruleId":"1557","severity":1,"message":"1558","line":80,"column":14,"nodeType":"1567","messageId":"1560","endLine":80,"endColumn":19},{"ruleId":"1557","severity":1,"message":"1558","line":74,"column":3,"nodeType":"1568","messageId":"1560","endLine":74,"endColumn":78},{"ruleId":"1609","severity":2,"message":"1610","line":74,"column":56,"nodeType":"1562","messageId":"1611","endLine":74,"endColumn":64},{"ruleId":"1557","severity":1,"message":"1612","line":74,"column":66,"nodeType":"1562","messageId":"1613","endLine":74,"endColumn":77},{"ruleId":"1614","severity":1,"message":"1615","line":74,"column":74,"nodeType":"1616","messageId":"1617","endLine":74,"endColumn":77,"suggestions":"1618"},{"ruleId":"1557","severity":1,"message":"1558","line":84,"column":3,"nodeType":"1568","messageId":"1560","endLine":84,"endColumn":68},{"ruleId":"1609","severity":2,"message":"1610","line":84,"column":59,"nodeType":"1562","messageId":"1611","endLine":84,"endColumn":67},{"ruleId":"1603","severity":2,"message":"1619","line":96,"column":9,"nodeType":"1562","messageId":"1605","endLine":96,"endColumn":18,"fix":"1620"},{"ruleId":"1603","severity":2,"message":"1621","line":97,"column":9,"nodeType":"1562","messageId":"1605","endLine":97,"endColumn":12,"fix":"1622"},{"ruleId":"1557","severity":1,"message":"1558","line":103,"column":3,"nodeType":"1568","messageId":"1560","endLine":103,"endColumn":51},{"ruleId":"1603","severity":2,"message":"1619","line":107,"column":9,"nodeType":"1562","messageId":"1605","endLine":107,"endColumn":18,"fix":"1623"},{"ruleId":"1603","severity":2,"message":"1624","line":120,"column":9,"nodeType":"1562","messageId":"1605","endLine":120,"endColumn":17,"fix":"1625"},{"ruleId":"1603","severity":2,"message":"1626","line":123,"column":9,"nodeType":"1562","messageId":"1605","endLine":123,"endColumn":22,"fix":"1627"},{"ruleId":"1603","severity":2,"message":"1621","line":127,"column":11,"nodeType":"1562","messageId":"1605","endLine":127,"endColumn":14,"fix":"1628"},{"ruleId":"1564","severity":1,"message":"1629","line":128,"column":37,"nodeType":"1562","messageId":"1566","endLine":128,"endColumn":40},{"ruleId":"1603","severity":2,"message":"1619","line":159,"column":11,"nodeType":"1562","messageId":"1605","endLine":159,"endColumn":20,"fix":"1630"},{"ruleId":"1603","severity":2,"message":"1621","line":166,"column":11,"nodeType":"1562","messageId":"1605","endLine":166,"endColumn":14,"fix":"1631"},{"ruleId":"1603","severity":2,"message":"1632","line":180,"column":9,"nodeType":"1562","messageId":"1605","endLine":180,"endColumn":15,"fix":"1633"},{"ruleId":"1603","severity":2,"message":"1624","line":184,"column":9,"nodeType":"1562","messageId":"1605","endLine":184,"endColumn":17,"fix":"1634"},{"ruleId":"1603","severity":2,"message":"1626","line":188,"column":9,"nodeType":"1562","messageId":"1605","endLine":188,"endColumn":22,"fix":"1635"},{"ruleId":"1603","severity":2,"message":"1632","line":200,"column":9,"nodeType":"1562","messageId":"1605","endLine":200,"endColumn":15,"fix":"1636"},{"ruleId":"1603","severity":2,"message":"1624","line":203,"column":9,"nodeType":"1562","messageId":"1605","endLine":203,"endColumn":17,"fix":"1637"},{"ruleId":"1603","severity":2,"message":"1626","line":206,"column":11,"nodeType":"1562","messageId":"1605","endLine":206,"endColumn":24,"fix":"1638"},{"ruleId":"1603","severity":2,"message":"1639","line":271,"column":9,"nodeType":"1562","messageId":"1605","endLine":271,"endColumn":15,"fix":"1640"},{"ruleId":"1603","severity":2,"message":"1641","line":277,"column":9,"nodeType":"1562","messageId":"1605","endLine":277,"endColumn":18,"fix":"1642"},{"ruleId":"1557","severity":1,"message":"1558","line":297,"column":3,"nodeType":"1568","messageId":"1560","endLine":297,"endColumn":116},{"ruleId":"1603","severity":2,"message":"1639","line":298,"column":9,"nodeType":"1562","messageId":"1605","endLine":298,"endColumn":15,"fix":"1643"},{"ruleId":"1603","severity":2,"message":"1639","line":316,"column":9,"nodeType":"1562","messageId":"1605","endLine":316,"endColumn":15,"fix":"1644"},{"ruleId":"1557","severity":1,"message":"1558","line":331,"column":3,"nodeType":"1568","messageId":"1560","endLine":331,"endColumn":51},{"ruleId":"1603","severity":2,"message":"1639","line":333,"column":9,"nodeType":"1562","messageId":"1605","endLine":333,"endColumn":15,"fix":"1645"},{"ruleId":"1557","severity":1,"message":"1558","line":351,"column":3,"nodeType":"1568","messageId":"1560","endLine":351,"endColumn":40},{"ruleId":"1603","severity":2,"message":"1639","line":353,"column":9,"nodeType":"1562","messageId":"1605","endLine":353,"endColumn":15,"fix":"1646"},{"ruleId":"1564","severity":1,"message":"1647","line":1,"column":17,"nodeType":"1562","messageId":"1566","endLine":1,"endColumn":26},{"ruleId":"1564","severity":1,"message":"1648","line":1,"column":28,"nodeType":"1562","messageId":"1566","endLine":1,"endColumn":36},{"ruleId":"1564","severity":1,"message":"1649","line":3,"column":19,"nodeType":"1562","messageId":"1566","endLine":3,"endColumn":31},{"ruleId":"1557","severity":1,"message":"1558","line":21,"column":3,"nodeType":"1568","messageId":"1560","endLine":21,"endColumn":11},{"ruleId":"1564","severity":1,"message":"1647","line":1,"column":17,"nodeType":"1562","messageId":"1566","endLine":1,"endColumn":26},{"ruleId":"1564","severity":1,"message":"1648","line":1,"column":28,"nodeType":"1562","messageId":"1566","endLine":1,"endColumn":36},{"ruleId":"1564","severity":1,"message":"1649","line":4,"column":19,"nodeType":"1562","messageId":"1566","endLine":4,"endColumn":31},{"ruleId":"1557","severity":1,"message":"1558","line":23,"column":23,"nodeType":"1567","messageId":"1560","endLine":23,"endColumn":33},{"ruleId":"1557","severity":1,"message":"1650","line":23,"column":24,"nodeType":"1562","messageId":"1563","endLine":23,"endColumn":29},{"ruleId":"1582","severity":2,"message":"1651","line":29,"column":11,"nodeType":"1562","endLine":29,"endColumn":27},{"ruleId":"1603","severity":2,"message":"1652","line":34,"column":9,"nodeType":"1562","messageId":"1605","endLine":34,"endColumn":16,"fix":"1653"},{"ruleId":"1564","severity":1,"message":"1647","line":1,"column":17,"nodeType":"1562","messageId":"1566","endLine":1,"endColumn":26},{"ruleId":"1564","severity":1,"message":"1648","line":1,"column":28,"nodeType":"1562","messageId":"1566","endLine":1,"endColumn":36},{"ruleId":"1557","severity":1,"message":"1558","line":21,"column":3,"nodeType":"1568","messageId":"1560","endLine":21,"endColumn":11},{"ruleId":"1564","severity":1,"message":"1647","line":1,"column":17,"nodeType":"1562","messageId":"1566","endLine":1,"endColumn":26},{"ruleId":"1564","severity":1,"message":"1648","line":1,"column":28,"nodeType":"1562","messageId":"1566","endLine":1,"endColumn":36},{"ruleId":"1564","severity":1,"message":"1649","line":3,"column":19,"nodeType":"1562","messageId":"1566","endLine":3,"endColumn":31},{"ruleId":"1557","severity":1,"message":"1558","line":21,"column":3,"nodeType":"1568","messageId":"1560","endLine":21,"endColumn":56},{"ruleId":"1557","severity":1,"message":"1654","line":21,"column":25,"nodeType":"1562","messageId":"1613","endLine":21,"endColumn":39},{"ruleId":"1564","severity":1,"message":"1655","line":21,"column":25,"nodeType":"1562","messageId":"1566","endLine":21,"endColumn":39},{"ruleId":"1614","severity":1,"message":"1615","line":21,"column":36,"nodeType":"1616","messageId":"1617","endLine":21,"endColumn":39,"suggestions":"1656"},{"ruleId":"1557","severity":1,"message":"1657","line":21,"column":41,"nodeType":"1562","messageId":"1613","endLine":21,"endColumn":55},{"ruleId":"1564","severity":1,"message":"1658","line":21,"column":41,"nodeType":"1562","messageId":"1566","endLine":21,"endColumn":55},{"ruleId":"1614","severity":1,"message":"1615","line":21,"column":52,"nodeType":"1616","messageId":"1617","endLine":21,"endColumn":55,"suggestions":"1659"},{"ruleId":"1557","severity":1,"message":"1558","line":25,"column":3,"nodeType":"1568","messageId":"1560","endLine":25,"endColumn":11},{"ruleId":"1564","severity":1,"message":"1647","line":1,"column":17,"nodeType":"1562","messageId":"1566","endLine":1,"endColumn":26},{"ruleId":"1564","severity":1,"message":"1648","line":1,"column":28,"nodeType":"1562","messageId":"1566","endLine":1,"endColumn":36},{"ruleId":"1564","severity":1,"message":"1649","line":3,"column":19,"nodeType":"1562","messageId":"1566","endLine":3,"endColumn":31},{"ruleId":"1557","severity":1,"message":"1558","line":28,"column":3,"nodeType":"1568","messageId":"1560","endLine":28,"endColumn":11},{"ruleId":"1564","severity":1,"message":"1647","line":1,"column":17,"nodeType":"1562","messageId":"1566","endLine":1,"endColumn":26},{"ruleId":"1564","severity":1,"message":"1648","line":1,"column":28,"nodeType":"1562","messageId":"1566","endLine":1,"endColumn":36},{"ruleId":"1564","severity":1,"message":"1660","line":3,"column":10,"nodeType":"1562","messageId":"1566","endLine":3,"endColumn":17},{"ruleId":"1603","severity":2,"message":"1661","line":12,"column":5,"nodeType":"1562","messageId":"1605","endLine":12,"endColumn":6,"fix":"1662"},{"ruleId":"1557","severity":1,"message":"1558","line":14,"column":26,"nodeType":"1567","messageId":"1560","endLine":14,"endColumn":31},{"ruleId":"1594","severity":2,"message":"1595","line":19,"column":5,"nodeType":"1596","messageId":"1597","endLine":19,"endColumn":36,"fix":"1663"},{"ruleId":"1564","severity":1,"message":"1664","line":19,"column":9,"nodeType":"1562","messageId":"1566","endLine":19,"endColumn":14},{"ruleId":"1603","severity":2,"message":"1665","line":21,"column":13,"nodeType":"1562","messageId":"1605","endLine":21,"endColumn":18,"fix":"1666"},{"ruleId":"1603","severity":2,"message":"1665","line":24,"column":13,"nodeType":"1562","messageId":"1605","endLine":24,"endColumn":18,"fix":"1667"},{"ruleId":"1564","severity":1,"message":"1647","line":1,"column":17,"nodeType":"1562","messageId":"1566","endLine":1,"endColumn":26},{"ruleId":"1564","severity":1,"message":"1648","line":1,"column":28,"nodeType":"1562","messageId":"1566","endLine":1,"endColumn":36},{"ruleId":"1564","severity":1,"message":"1649","line":3,"column":19,"nodeType":"1562","messageId":"1566","endLine":3,"endColumn":31},{"ruleId":"1557","severity":1,"message":"1558","line":21,"column":3,"nodeType":"1568","messageId":"1560","endLine":21,"endColumn":11},{"ruleId":"1564","severity":1,"message":"1647","line":1,"column":17,"nodeType":"1562","messageId":"1566","endLine":1,"endColumn":26},{"ruleId":"1564","severity":1,"message":"1648","line":1,"column":28,"nodeType":"1562","messageId":"1566","endLine":1,"endColumn":36},{"ruleId":"1557","severity":1,"message":"1558","line":7,"column":3,"nodeType":"1568","messageId":"1560","endLine":7,"endColumn":11},{"ruleId":"1564","severity":1,"message":"1649","line":4,"column":19,"nodeType":"1562","messageId":"1566","endLine":4,"endColumn":31},{"ruleId":"1557","severity":1,"message":"1558","line":19,"column":22,"nodeType":"1567","messageId":"1560","endLine":19,"endColumn":27},{"ruleId":"1564","severity":1,"message":"1649","line":3,"column":19,"nodeType":"1562","messageId":"1566","endLine":3,"endColumn":31},{"ruleId":"1557","severity":1,"message":"1558","line":17,"column":3,"nodeType":"1568","messageId":"1560","endLine":17,"endColumn":11},{"ruleId":"1564","severity":1,"message":"1649","line":3,"column":19,"nodeType":"1562","messageId":"1566","endLine":3,"endColumn":31},{"ruleId":"1557","severity":1,"message":"1558","line":17,"column":3,"nodeType":"1568","messageId":"1560","endLine":17,"endColumn":11},{"ruleId":"1557","severity":1,"message":"1558","line":11,"column":3,"nodeType":"1568","messageId":"1560","endLine":11,"endColumn":11},{"ruleId":"1557","severity":1,"message":"1558","line":5,"column":3,"nodeType":"1568","messageId":"1560","endLine":5,"endColumn":11},{"ruleId":"1557","severity":1,"message":"1558","line":7,"column":5,"nodeType":"1568","messageId":"1560","endLine":7,"endColumn":13},{"ruleId":"1609","severity":2,"message":"1610","line":7,"column":13,"nodeType":"1562","messageId":"1611","endLine":7,"endColumn":21},{"ruleId":"1609","severity":2,"message":"1610","line":25,"column":30,"nodeType":"1562","messageId":"1611","endLine":25,"endColumn":38},{"ruleId":"1609","severity":2,"message":"1610","line":38,"column":32,"nodeType":"1562","messageId":"1611","endLine":38,"endColumn":40},{"ruleId":"1614","severity":1,"message":"1615","line":56,"column":14,"nodeType":"1616","messageId":"1617","endLine":56,"endColumn":17,"suggestions":"1668"},{"ruleId":"1603","severity":2,"message":"1669","line":63,"column":11,"nodeType":"1562","messageId":"1605","endLine":63,"endColumn":17,"fix":"1670"},{"ruleId":"1557","severity":1,"message":"1558","line":83,"column":3,"nodeType":"1568","messageId":"1560","endLine":83,"endColumn":41},{"ruleId":"1557","severity":1,"message":"1671","line":83,"column":31,"nodeType":"1562","messageId":"1613","endLine":83,"endColumn":40},{"ruleId":"1614","severity":1,"message":"1615","line":83,"column":37,"nodeType":"1616","messageId":"1617","endLine":83,"endColumn":40,"suggestions":"1672"},{"ruleId":"1557","severity":1,"message":"1558","line":98,"column":3,"nodeType":"1568","messageId":"1560","endLine":98,"endColumn":68},{"ruleId":"1609","severity":2,"message":"1610","line":98,"column":35,"nodeType":"1562","messageId":"1611","endLine":98,"endColumn":43},{"ruleId":"1557","severity":1,"message":"1558","line":116,"column":3,"nodeType":"1568","messageId":"1560","endLine":116,"endColumn":45},{"ruleId":"1609","severity":2,"message":"1610","line":116,"column":36,"nodeType":"1562","messageId":"1611","endLine":116,"endColumn":44},{"ruleId":"1564","severity":1,"message":"1673","line":6,"column":10,"nodeType":"1562","messageId":"1566","endLine":6,"endColumn":17},{"ruleId":"1564","severity":1,"message":"1674","line":8,"column":5,"nodeType":"1562","messageId":"1566","endLine":8,"endColumn":14},{"ruleId":"1557","severity":1,"message":"1558","line":12,"column":30,"nodeType":"1567","messageId":"1560","endLine":12,"endColumn":41},{"ruleId":"1675","severity":2,"message":"1676","line":13,"column":9,"nodeType":"1562","messageId":"1677","endLine":13,"endColumn":13},{"ruleId":"1678","severity":2,"message":"1679","line":29,"column":26,"nodeType":"1562","messageId":"1680","endLine":29,"endColumn":34},{"ruleId":"1681","severity":2,"message":"1682","line":40,"column":22,"nodeType":"1562","messageId":"1683","endLine":40,"endColumn":23},{"ruleId":"1564","severity":1,"message":"1684","line":63,"column":72,"nodeType":"1562","messageId":"1566","endLine":63,"endColumn":76},{"ruleId":"1685","severity":2,"message":"1686","line":63,"column":78,"nodeType":"1568","messageId":"1687","endLine":64,"endColumn":20},{"ruleId":"1557","severity":1,"message":"1558","line":84,"column":23,"nodeType":"1567","messageId":"1560","endLine":84,"endColumn":57},{"ruleId":"1557","severity":1,"message":"1688","line":84,"column":24,"nodeType":"1562","messageId":"1563","endLine":84,"endColumn":30},{"ruleId":"1557","severity":1,"message":"1689","line":84,"column":32,"nodeType":"1562","messageId":"1563","endLine":84,"endColumn":43},{"ruleId":"1557","severity":1,"message":"1690","line":84,"column":45,"nodeType":"1562","messageId":"1563","endLine":84,"endColumn":53},{"ruleId":"1557","severity":1,"message":"1558","line":98,"column":26,"nodeType":"1567","messageId":"1560","endLine":98,"endColumn":45},{"ruleId":"1557","severity":1,"message":"1691","line":98,"column":33,"nodeType":"1562","messageId":"1563","endLine":98,"endColumn":41},{"ruleId":"1557","severity":1,"message":"1558","line":129,"column":23,"nodeType":"1567","messageId":"1560","endLine":129,"endColumn":34},{"ruleId":"1675","severity":2,"message":"1676","line":130,"column":9,"nodeType":"1562","messageId":"1677","endLine":130,"endColumn":13},{"ruleId":"1557","severity":1,"message":"1558","line":151,"column":15,"nodeType":"1567","messageId":"1560","endLine":151,"endColumn":20},{"ruleId":"1557","severity":1,"message":"1558","line":190,"column":21,"nodeType":"1567","messageId":"1560","endLine":190,"endColumn":26},{"ruleId":"1557","severity":1,"message":"1558","line":222,"column":13,"nodeType":"1567","messageId":"1560","endLine":222,"endColumn":18},{"ruleId":"1557","severity":1,"message":"1558","line":257,"column":3,"nodeType":"1568","messageId":"1560","endLine":257,"endColumn":11},{"ruleId":"1603","severity":2,"message":"1661","line":5,"column":5,"nodeType":"1562","messageId":"1605","endLine":5,"endColumn":6,"fix":"1692"},{"ruleId":"1557","severity":1,"message":"1558","line":17,"column":3,"nodeType":"1568","messageId":"1560","endLine":17,"endColumn":23},{"ruleId":"1557","severity":1,"message":"1558","line":24,"column":3,"nodeType":"1568","messageId":"1560","endLine":24,"endColumn":37},{"ruleId":"1557","severity":1,"message":"1693","line":24,"column":27,"nodeType":"1562","messageId":"1563","endLine":24,"endColumn":36},{"ruleId":"1594","severity":2,"message":"1595","line":29,"column":7,"nodeType":"1596","messageId":"1597","endLine":29,"endColumn":54,"fix":"1694"},{"ruleId":"1594","severity":2,"message":"1595","line":30,"column":7,"nodeType":"1596","messageId":"1597","endLine":30,"endColumn":55,"fix":"1695"},{"ruleId":"1594","severity":2,"message":"1595","line":32,"column":7,"nodeType":"1596","messageId":"1597","endLine":32,"endColumn":33,"fix":"1696"},{"ruleId":"1594","severity":2,"message":"1595","line":33,"column":7,"nodeType":"1596","messageId":"1597","endLine":33,"endColumn":39,"fix":"1697"},{"ruleId":"1557","severity":1,"message":"1558","line":38,"column":3,"nodeType":"1568","messageId":"1560","endLine":38,"endColumn":27},{"ruleId":"1557","severity":1,"message":"1698","line":38,"column":25,"nodeType":"1562","messageId":"1563","endLine":38,"endColumn":26},{"ruleId":"1557","severity":1,"message":"1558","line":42,"column":3,"nodeType":"1568","messageId":"1560","endLine":42,"endColumn":32},{"ruleId":"1557","severity":1,"message":"1558","line":46,"column":3,"nodeType":"1568","messageId":"1560","endLine":46,"endColumn":33},{"ruleId":"1594","severity":2,"message":"1595","line":52,"column":7,"nodeType":"1596","messageId":"1597","endLine":52,"endColumn":47,"fix":"1699"},{"ruleId":"1594","severity":2,"message":"1595","line":62,"column":7,"nodeType":"1596","messageId":"1597","endLine":62,"endColumn":47,"fix":"1700"},{"ruleId":"1557","severity":1,"message":"1558","line":82,"column":3,"nodeType":"1568","messageId":"1560","endLine":82,"endColumn":17},{"ruleId":"1557","severity":1,"message":"1558","line":93,"column":3,"nodeType":"1568","messageId":"1560","endLine":93,"endColumn":17},{"ruleId":"1557","severity":1,"message":"1558","line":100,"column":3,"nodeType":"1568","messageId":"1560","endLine":100,"endColumn":17},{"ruleId":"1557","severity":1,"message":"1558","line":109,"column":3,"nodeType":"1568","messageId":"1560","endLine":109,"endColumn":17},{"ruleId":"1557","severity":1,"message":"1558","line":118,"column":3,"nodeType":"1568","messageId":"1560","endLine":118,"endColumn":17},{"ruleId":"1557","severity":1,"message":"1558","line":126,"column":3,"nodeType":"1568","messageId":"1560","endLine":126,"endColumn":28},{"ruleId":"1594","severity":2,"message":"1595","line":127,"column":7,"nodeType":"1596","messageId":"1597","endLine":127,"endColumn":42,"fix":"1701"},{"ruleId":"1614","severity":1,"message":"1615","line":127,"column":20,"nodeType":"1616","messageId":"1617","endLine":127,"endColumn":23,"suggestions":"1702"},{"ruleId":"1594","severity":2,"message":"1595","line":129,"column":7,"nodeType":"1596","messageId":"1597","endLine":133,"endColumn":83,"fix":"1703"},{"ruleId":"1594","severity":2,"message":"1595","line":135,"column":7,"nodeType":"1596","messageId":"1597","endLine":135,"endColumn":45,"fix":"1704"},{"ruleId":"1594","severity":2,"message":"1595","line":160,"column":7,"nodeType":"1596","messageId":"1597","endLine":160,"endColumn":38,"fix":"1705"},{"ruleId":"1557","severity":1,"message":"1558","line":169,"column":3,"nodeType":"1568","messageId":"1560","endLine":169,"endColumn":37},{"ruleId":"1557","severity":1,"message":"1706","line":169,"column":34,"nodeType":"1562","messageId":"1563","endLine":169,"endColumn":36},{"ruleId":"1557","severity":1,"message":"1558","line":174,"column":3,"nodeType":"1568","messageId":"1560","endLine":174,"endColumn":37},{"ruleId":"1557","severity":1,"message":"1706","line":174,"column":34,"nodeType":"1562","messageId":"1563","endLine":174,"endColumn":36},{"ruleId":"1564","severity":1,"message":"1707","line":4,"column":8,"nodeType":"1562","messageId":"1566","endLine":4,"endColumn":24},{"ruleId":"1603","severity":2,"message":"1661","line":8,"column":5,"nodeType":"1562","messageId":"1605","endLine":8,"endColumn":6,"fix":"1708"},{"ruleId":"1594","severity":2,"message":"1595","line":10,"column":1,"nodeType":"1596","messageId":"1597","endLine":10,"endColumn":36,"fix":"1709"},{"ruleId":"1710","severity":2,"message":"1711","line":12,"column":14,"nodeType":"1712","messageId":"1713","endLine":12,"endColumn":47,"fix":"1714"},{"ruleId":"1710","severity":2,"message":"1711","line":13,"column":14,"nodeType":"1712","messageId":"1713","endLine":13,"endColumn":47,"fix":"1715"},{"ruleId":"1557","severity":1,"message":"1558","line":61,"column":10,"nodeType":"1567","messageId":"1560","endLine":61,"endColumn":15},{"ruleId":"1557","severity":1,"message":"1558","line":74,"column":3,"nodeType":"1568","messageId":"1560","endLine":74,"endColumn":23},{"ruleId":"1603","severity":2,"message":"1716","line":85,"column":9,"nodeType":"1562","messageId":"1605","endLine":85,"endColumn":12,"fix":"1717"},{"ruleId":"1557","severity":1,"message":"1558","line":95,"column":16,"nodeType":"1567","messageId":"1560","endLine":95,"endColumn":62},{"ruleId":"1557","severity":1,"message":"1558","line":131,"column":18,"nodeType":"1567","messageId":"1560","endLine":131,"endColumn":36},{"ruleId":"1557","severity":1,"message":"1558","line":135,"column":3,"nodeType":"1568","messageId":"1560","endLine":135,"endColumn":30},{"ruleId":"1557","severity":1,"message":"1558","line":144,"column":3,"nodeType":"1568","messageId":"1560","endLine":144,"endColumn":44},{"ruleId":"1594","severity":2,"message":"1595","line":145,"column":5,"nodeType":"1596","messageId":"1597","endLine":145,"endColumn":42,"fix":"1718"},{"ruleId":"1557","severity":1,"message":"1558","line":149,"column":3,"nodeType":"1568","messageId":"1560","endLine":149,"endColumn":41},{"ruleId":"1557","severity":1,"message":"1719","line":149,"column":32,"nodeType":"1562","messageId":"1563","endLine":149,"endColumn":33},{"ruleId":"1557","severity":1,"message":"1720","line":149,"column":35,"nodeType":"1562","messageId":"1563","endLine":149,"endColumn":40},{"ruleId":"1557","severity":1,"message":"1558","line":161,"column":3,"nodeType":"1568","messageId":"1560","endLine":161,"endColumn":39},{"ruleId":"1594","severity":2,"message":"1595","line":162,"column":5,"nodeType":"1596","messageId":"1597","endLine":162,"endColumn":45,"fix":"1721"},{"ruleId":"1594","severity":2,"message":"1595","line":166,"column":11,"nodeType":"1596","messageId":"1597","endLine":166,"endColumn":20},{"ruleId":"1594","severity":2,"message":"1595","line":171,"column":11,"nodeType":"1596","messageId":"1597","endLine":171,"endColumn":20},{"ruleId":"1557","severity":1,"message":"1558","line":183,"column":3,"nodeType":"1568","messageId":"1560","endLine":183,"endColumn":32},{"ruleId":"1557","severity":1,"message":"1720","line":183,"column":20,"nodeType":"1562","messageId":"1563","endLine":183,"endColumn":25},{"ruleId":"1557","severity":1,"message":"1722","line":183,"column":27,"nodeType":"1562","messageId":"1563","endLine":183,"endColumn":31},{"ruleId":"1557","severity":1,"message":"1558","line":202,"column":3,"nodeType":"1568","messageId":"1560","endLine":202,"endColumn":34},{"ruleId":"1557","severity":1,"message":"1558","line":213,"column":29,"nodeType":"1567","messageId":"1560","endLine":213,"endColumn":49},{"ruleId":"1557","severity":1,"message":"1723","line":213,"column":30,"nodeType":"1562","messageId":"1563","endLine":213,"endColumn":45},{"ruleId":"1557","severity":1,"message":"1558","line":217,"column":31,"nodeType":"1567","messageId":"1560","endLine":217,"endColumn":51},{"ruleId":"1557","severity":1,"message":"1723","line":217,"column":32,"nodeType":"1562","messageId":"1563","endLine":217,"endColumn":47},{"ruleId":"1557","severity":1,"message":"1558","line":231,"column":24,"nodeType":"1567","messageId":"1560","endLine":231,"endColumn":72},{"ruleId":"1557","severity":1,"message":"1558","line":253,"column":27,"nodeType":"1567","messageId":"1560","endLine":253,"endColumn":75},{"ruleId":"1557","severity":1,"message":"1558","line":270,"column":25,"nodeType":"1567","messageId":"1560","endLine":270,"endColumn":73},{"ruleId":"1564","severity":1,"message":"1724","line":270,"column":26,"nodeType":"1562","messageId":"1566","endLine":270,"endColumn":69},{"ruleId":"1603","severity":2,"message":"1725","line":280,"column":9,"nodeType":"1562","messageId":"1605","endLine":280,"endColumn":12,"fix":"1726"},{"ruleId":"1557","severity":1,"message":"1650","line":100,"column":15,"nodeType":"1562","messageId":"1563","endLine":100,"endColumn":20},{"ruleId":"1557","severity":1,"message":"1558","line":139,"column":3,"nodeType":"1568","messageId":"1560","endLine":139,"endColumn":22},{"ruleId":"1557","severity":1,"message":"1727","line":139,"column":18,"nodeType":"1562","messageId":"1563","endLine":139,"endColumn":21},{"ruleId":"1557","severity":1,"message":"1558","line":150,"column":3,"nodeType":"1568","messageId":"1560","endLine":150,"endColumn":22},{"ruleId":"1557","severity":1,"message":"1727","line":150,"column":18,"nodeType":"1562","messageId":"1563","endLine":150,"endColumn":21},{"ruleId":"1557","severity":1,"message":"1558","line":161,"column":19,"nodeType":"1567","messageId":"1560","endLine":161,"endColumn":29},{"ruleId":"1557","severity":1,"message":"1728","line":161,"column":20,"nodeType":"1562","messageId":"1563","endLine":161,"endColumn":25},{"ruleId":"1557","severity":1,"message":"1558","line":172,"column":23,"nodeType":"1567","messageId":"1560","endLine":172,"endColumn":33},{"ruleId":"1557","severity":1,"message":"1728","line":172,"column":24,"nodeType":"1562","messageId":"1563","endLine":172,"endColumn":29},{"ruleId":"1557","severity":1,"message":"1558","line":199,"column":19,"nodeType":"1567","messageId":"1560","endLine":199,"endColumn":29},{"ruleId":"1557","severity":1,"message":"1728","line":199,"column":20,"nodeType":"1562","messageId":"1563","endLine":199,"endColumn":25},{"ruleId":"1557","severity":1,"message":"1558","line":213,"column":17,"nodeType":"1567","messageId":"1560","endLine":213,"endColumn":27},{"ruleId":"1557","severity":1,"message":"1728","line":213,"column":18,"nodeType":"1562","messageId":"1563","endLine":213,"endColumn":23},{"ruleId":"1557","severity":1,"message":"1558","line":232,"column":3,"nodeType":"1568","messageId":"1560","endLine":232,"endColumn":21},{"ruleId":"1557","severity":1,"message":"1558","line":246,"column":3,"nodeType":"1568","messageId":"1560","endLine":246,"endColumn":46},{"ruleId":"1557","severity":1,"message":"1729","line":246,"column":25,"nodeType":"1562","messageId":"1563","endLine":246,"endColumn":34},{"ruleId":"1557","severity":1,"message":"1730","line":246,"column":36,"nodeType":"1562","messageId":"1563","endLine":246,"endColumn":45},{"ruleId":"1582","severity":2,"message":"1731","line":257,"column":21,"nodeType":"1562","endLine":257,"endColumn":32},{"ruleId":"1582","severity":2,"message":"1732","line":260,"column":21,"nodeType":"1562","endLine":260,"endColumn":34},{"ruleId":"1582","severity":2,"message":"1733","line":314,"column":19,"nodeType":"1562","endLine":314,"endColumn":27},{"ruleId":"1582","severity":2,"message":"1733","line":314,"column":43,"nodeType":"1562","endLine":314,"endColumn":51},{"ruleId":"1582","severity":2,"message":"1733","line":315,"column":49,"nodeType":"1562","endLine":315,"endColumn":57},{"ruleId":"1582","severity":2,"message":"1734","line":319,"column":19,"nodeType":"1562","endLine":319,"endColumn":26},{"ruleId":"1582","severity":2,"message":"1734","line":319,"column":42,"nodeType":"1562","endLine":319,"endColumn":49},{"ruleId":"1582","severity":2,"message":"1731","line":324,"column":19,"nodeType":"1562","endLine":324,"endColumn":30},{"ruleId":"1582","severity":2,"message":"1732","line":329,"column":19,"nodeType":"1562","endLine":329,"endColumn":32},{"ruleId":"1557","severity":1,"message":"1558","line":337,"column":3,"nodeType":"1568","messageId":"1560","endLine":337,"endColumn":21},{"ruleId":"1557","severity":1,"message":"1735","line":337,"column":16,"nodeType":"1562","messageId":"1563","endLine":337,"endColumn":20},{"ruleId":"1582","severity":2,"message":"1733","line":345,"column":7,"nodeType":"1584","endLine":345,"endColumn":15},{"ruleId":"1557","severity":1,"message":"1558","line":378,"column":3,"nodeType":"1568","messageId":"1560","endLine":378,"endColumn":22},{"ruleId":"1557","severity":1,"message":"1558","line":405,"column":20,"nodeType":"1567","messageId":"1560","endLine":405,"endColumn":25},{"ruleId":"1557","severity":1,"message":"1558","line":448,"column":13,"nodeType":"1567","messageId":"1560","endLine":448,"endColumn":29},{"ruleId":"1557","severity":1,"message":"1736","line":448,"column":14,"nodeType":"1562","messageId":"1563","endLine":448,"endColumn":19},{"ruleId":"1557","severity":1,"message":"1737","line":448,"column":21,"nodeType":"1562","messageId":"1563","endLine":448,"endColumn":25},{"ruleId":"1557","severity":1,"message":"1558","line":457,"column":3,"nodeType":"1568","messageId":"1560","endLine":457,"endColumn":25},{"ruleId":"1557","severity":1,"message":"1558","line":479,"column":3,"nodeType":"1568","messageId":"1560","endLine":479,"endColumn":11},{"ruleId":"1710","severity":2,"message":"1711","line":66,"column":3,"nodeType":"1738","messageId":"1713","endLine":66,"endColumn":25,"fix":"1739"},{"ruleId":"1609","severity":2,"message":"1740","line":67,"column":19,"nodeType":"1741","messageId":"1611","endLine":67,"endColumn":25},{"ruleId":"1557","severity":1,"message":"1558","line":94,"column":3,"nodeType":"1568","messageId":"1560","endLine":94,"endColumn":19},{"ruleId":"1557","severity":1,"message":"1558","line":108,"column":3,"nodeType":"1568","messageId":"1560","endLine":108,"endColumn":20},{"ruleId":"1594","severity":2,"message":"1595","line":109,"column":10,"nodeType":"1596","messageId":"1597","endLine":109,"endColumn":19,"fix":"1742"},{"ruleId":"1594","severity":2,"message":"1595","line":110,"column":7,"nodeType":"1596","messageId":"1597","endLine":121,"endColumn":10,"fix":"1743"},{"ruleId":"1557","severity":1,"message":"1558","line":177,"column":3,"nodeType":"1568","messageId":"1560","endLine":177,"endColumn":54},{"ruleId":"1557","severity":1,"message":"1558","line":186,"column":3,"nodeType":"1568","messageId":"1560","endLine":186,"endColumn":41},{"ruleId":"1564","severity":1,"message":"1744","line":186,"column":29,"nodeType":"1562","messageId":"1566","endLine":186,"endColumn":40},{"ruleId":"1557","severity":1,"message":"1558","line":193,"column":20,"nodeType":"1567","messageId":"1560","endLine":193,"endColumn":25},{"ruleId":"1603","severity":2,"message":"1745","line":195,"column":9,"nodeType":"1562","messageId":"1605","endLine":195,"endColumn":10,"fix":"1746"},{"ruleId":"1557","severity":1,"message":"1558","line":209,"column":15,"nodeType":"1567","messageId":"1560","endLine":209,"endColumn":36},{"ruleId":"1603","severity":2,"message":"1747","line":221,"column":9,"nodeType":"1562","messageId":"1605","endLine":221,"endColumn":12,"fix":"1748"},{"ruleId":"1603","severity":2,"message":"1749","line":222,"column":9,"nodeType":"1562","messageId":"1605","endLine":222,"endColumn":13,"fix":"1750"},{"ruleId":"1603","severity":2,"message":"1639","line":233,"column":9,"nodeType":"1562","messageId":"1605","endLine":233,"endColumn":15,"fix":"1751"},{"ruleId":"1603","severity":2,"message":"1641","line":234,"column":9,"nodeType":"1562","messageId":"1605","endLine":234,"endColumn":18,"fix":"1752"},{"ruleId":"1557","severity":1,"message":"1558","line":256,"column":16,"nodeType":"1567","messageId":"1560","endLine":256,"endColumn":53},{"ruleId":"1603","severity":2,"message":"1753","line":262,"column":9,"nodeType":"1562","messageId":"1605","endLine":262,"endColumn":13,"fix":"1754"},{"ruleId":"1603","severity":2,"message":"1747","line":282,"column":13,"nodeType":"1562","messageId":"1605","endLine":282,"endColumn":16,"fix":"1755"},{"ruleId":"1603","severity":2,"message":"1639","line":289,"column":15,"nodeType":"1562","messageId":"1605","endLine":289,"endColumn":21,"fix":"1756"},{"ruleId":"1603","severity":2,"message":"1641","line":290,"column":15,"nodeType":"1562","messageId":"1605","endLine":290,"endColumn":24,"fix":"1757"},{"ruleId":"1564","severity":1,"message":"1758","line":313,"column":43,"nodeType":"1562","messageId":"1566","endLine":313,"endColumn":52},{"ruleId":"1603","severity":2,"message":"1747","line":314,"column":11,"nodeType":"1562","messageId":"1605","endLine":314,"endColumn":14,"fix":"1759"},{"ruleId":"1557","severity":1,"message":"1558","line":341,"column":15,"nodeType":"1567","messageId":"1560","endLine":341,"endColumn":36},{"ruleId":"1603","severity":2,"message":"1639","line":382,"column":9,"nodeType":"1562","messageId":"1605","endLine":382,"endColumn":15,"fix":"1760"},{"ruleId":"1603","severity":2,"message":"1641","line":383,"column":9,"nodeType":"1562","messageId":"1605","endLine":383,"endColumn":18,"fix":"1761"},{"ruleId":"1675","severity":2,"message":"1676","line":385,"column":9,"nodeType":"1562","messageId":"1677","endLine":385,"endColumn":12},{"ruleId":"1603","severity":2,"message":"1716","line":385,"column":9,"nodeType":"1562","messageId":"1605","endLine":385,"endColumn":12,"fix":"1762"},{"ruleId":"1557","severity":1,"message":"1558","line":400,"column":17,"nodeType":"1567","messageId":"1560","endLine":400,"endColumn":38},{"ruleId":"1603","severity":2,"message":"1747","line":410,"column":9,"nodeType":"1562","messageId":"1605","endLine":410,"endColumn":12,"fix":"1763"},{"ruleId":"1557","severity":1,"message":"1558","line":421,"column":21,"nodeType":"1567","messageId":"1560","endLine":421,"endColumn":42},{"ruleId":"1764","severity":2,"message":"1765","line":423,"column":1,"nodeType":"1766","messageId":"1687","endLine":423,"endColumn":2,"fix":"1767"},{"ruleId":"1603","severity":2,"message":"1747","line":424,"column":9,"nodeType":"1562","messageId":"1605","endLine":424,"endColumn":12,"fix":"1768"},{"ruleId":"1557","severity":1,"message":"1558","line":436,"column":13,"nodeType":"1567","messageId":"1560","endLine":436,"endColumn":34},{"ruleId":"1603","severity":2,"message":"1639","line":447,"column":11,"nodeType":"1562","messageId":"1605","endLine":447,"endColumn":17,"fix":"1769"},{"ruleId":"1603","severity":2,"message":"1641","line":448,"column":11,"nodeType":"1562","messageId":"1605","endLine":448,"endColumn":20,"fix":"1770"},{"ruleId":"1557","severity":1,"message":"1558","line":462,"column":18,"nodeType":"1567","messageId":"1560","endLine":462,"endColumn":39},{"ruleId":"1603","severity":2,"message":"1747","line":467,"column":9,"nodeType":"1562","messageId":"1605","endLine":467,"endColumn":12,"fix":"1771"},{"ruleId":"1557","severity":1,"message":"1558","line":482,"column":24,"nodeType":"1567","messageId":"1560","endLine":482,"endColumn":45},{"ruleId":"1603","severity":2,"message":"1772","line":484,"column":9,"nodeType":"1562","messageId":"1605","endLine":484,"endColumn":17,"fix":"1773"},{"ruleId":"1603","severity":2,"message":"1747","line":487,"column":9,"nodeType":"1562","messageId":"1605","endLine":487,"endColumn":12,"fix":"1774"},{"ruleId":"1557","severity":1,"message":"1558","line":501,"column":17,"nodeType":"1567","messageId":"1560","endLine":501,"endColumn":38},{"ruleId":"1603","severity":2,"message":"1747","line":506,"column":9,"nodeType":"1562","messageId":"1605","endLine":506,"endColumn":12,"fix":"1775"},{"ruleId":"1557","severity":1,"message":"1558","line":519,"column":29,"nodeType":"1567","messageId":"1560","endLine":519,"endColumn":50},{"ruleId":"1603","severity":2,"message":"1747","line":523,"column":9,"nodeType":"1562","messageId":"1605","endLine":523,"endColumn":12,"fix":"1776"},{"ruleId":"1557","severity":1,"message":"1558","line":535,"column":20,"nodeType":"1567","messageId":"1560","endLine":535,"endColumn":41},{"ruleId":"1603","severity":2,"message":"1747","line":539,"column":9,"nodeType":"1562","messageId":"1605","endLine":539,"endColumn":12,"fix":"1777"},{"ruleId":"1557","severity":1,"message":"1558","line":550,"column":3,"nodeType":"1568","messageId":"1560","endLine":550,"endColumn":26},{"ruleId":"1557","severity":1,"message":"1558","line":554,"column":3,"nodeType":"1568","messageId":"1560","endLine":554,"endColumn":34},{"ruleId":"1557","severity":1,"message":"1558","line":558,"column":3,"nodeType":"1568","messageId":"1560","endLine":558,"endColumn":27},{"ruleId":"1557","severity":1,"message":"1722","line":558,"column":22,"nodeType":"1562","messageId":"1563","endLine":558,"endColumn":26},{"ruleId":"1557","severity":1,"message":"1558","line":567,"column":3,"nodeType":"1568","messageId":"1560","endLine":567,"endColumn":71},{"ruleId":"1609","severity":2,"message":"1610","line":567,"column":62,"nodeType":"1562","messageId":"1611","endLine":567,"endColumn":70},{"ruleId":"1557","severity":1,"message":"1558","line":581,"column":3,"nodeType":"1568","messageId":"1560","endLine":581,"endColumn":74},{"ruleId":"1609","severity":2,"message":"1610","line":581,"column":65,"nodeType":"1562","messageId":"1611","endLine":581,"endColumn":73},{"ruleId":"1603","severity":2,"message":"1661","line":4,"column":5,"nodeType":"1562","messageId":"1605","endLine":4,"endColumn":6,"fix":"1778"},{"ruleId":"1603","severity":2,"message":"1779","line":26,"column":7,"nodeType":"1562","messageId":"1605","endLine":26,"endColumn":15,"fix":"1780"},{"ruleId":"1603","severity":2,"message":"1781","line":27,"column":7,"nodeType":"1562","messageId":"1605","endLine":27,"endColumn":12,"fix":"1782"},{"ruleId":"1603","severity":2,"message":"1783","line":28,"column":7,"nodeType":"1562","messageId":"1605","endLine":28,"endColumn":13,"fix":"1784"},{"ruleId":"1603","severity":2,"message":"1785","line":30,"column":7,"nodeType":"1562","messageId":"1605","endLine":30,"endColumn":11,"fix":"1786"},{"ruleId":"1603","severity":2,"message":"1787","line":37,"column":7,"nodeType":"1562","messageId":"1605","endLine":37,"endColumn":13,"fix":"1788"},{"ruleId":"1603","severity":2,"message":"1789","line":39,"column":7,"nodeType":"1562","messageId":"1605","endLine":39,"endColumn":14,"fix":"1790"},{"ruleId":"1603","severity":2,"message":"1791","line":44,"column":9,"nodeType":"1562","messageId":"1605","endLine":44,"endColumn":12,"fix":"1792"},{"ruleId":"1603","severity":2,"message":"1793","line":46,"column":9,"nodeType":"1562","messageId":"1605","endLine":46,"endColumn":11,"fix":"1794"},{"ruleId":"1603","severity":2,"message":"1795","line":47,"column":9,"nodeType":"1562","messageId":"1605","endLine":47,"endColumn":11,"fix":"1796"},{"ruleId":"1603","severity":2,"message":"1797","line":48,"column":9,"nodeType":"1562","messageId":"1605","endLine":48,"endColumn":11,"fix":"1798"},{"ruleId":"1603","severity":2,"message":"1799","line":49,"column":9,"nodeType":"1562","messageId":"1605","endLine":49,"endColumn":11,"fix":"1800"},{"ruleId":"1603","severity":2,"message":"1801","line":51,"column":9,"nodeType":"1562","messageId":"1605","endLine":51,"endColumn":20,"fix":"1802"},{"ruleId":"1603","severity":2,"message":"1803","line":52,"column":9,"nodeType":"1562","messageId":"1605","endLine":52,"endColumn":16,"fix":"1804"},{"ruleId":"1603","severity":2,"message":"1805","line":53,"column":9,"nodeType":"1562","messageId":"1605","endLine":53,"endColumn":10,"fix":"1806"},{"ruleId":"1603","severity":2,"message":"1807","line":54,"column":9,"nodeType":"1562","messageId":"1605","endLine":54,"endColumn":10,"fix":"1808"},{"ruleId":"1603","severity":2,"message":"1809","line":55,"column":9,"nodeType":"1562","messageId":"1605","endLine":55,"endColumn":10,"fix":"1810"},{"ruleId":"1603","severity":2,"message":"1811","line":56,"column":9,"nodeType":"1562","messageId":"1605","endLine":56,"endColumn":10,"fix":"1812"},{"ruleId":"1603","severity":2,"message":"1813","line":58,"column":9,"nodeType":"1562","messageId":"1605","endLine":58,"endColumn":16,"fix":"1814"},{"ruleId":"1603","severity":2,"message":"1815","line":60,"column":9,"nodeType":"1562","messageId":"1605","endLine":60,"endColumn":13,"fix":"1816"},{"ruleId":"1603","severity":2,"message":"1817","line":61,"column":9,"nodeType":"1562","messageId":"1605","endLine":61,"endColumn":13,"fix":"1818"},{"ruleId":"1603","severity":2,"message":"1819","line":62,"column":9,"nodeType":"1562","messageId":"1605","endLine":62,"endColumn":13,"fix":"1820"},{"ruleId":"1603","severity":2,"message":"1821","line":63,"column":9,"nodeType":"1562","messageId":"1605","endLine":63,"endColumn":13,"fix":"1822"},{"ruleId":"1603","severity":2,"message":"1823","line":67,"column":11,"nodeType":"1562","messageId":"1605","endLine":67,"endColumn":14,"fix":"1824"},{"ruleId":"1603","severity":2,"message":"1825","line":107,"column":13,"nodeType":"1562","messageId":"1605","endLine":107,"endColumn":16,"fix":"1826"},{"ruleId":"1603","severity":2,"message":"1827","line":112,"column":19,"nodeType":"1562","messageId":"1605","endLine":112,"endColumn":20,"fix":"1828"},{"ruleId":"1603","severity":2,"message":"1829","line":114,"column":21,"nodeType":"1562","messageId":"1605","endLine":114,"endColumn":24,"fix":"1830"},{"ruleId":"1557","severity":1,"message":"1558","line":138,"column":3,"nodeType":"1568","messageId":"1560","endLine":138,"endColumn":30},{"ruleId":"1557","severity":1,"message":"1831","line":138,"column":21,"nodeType":"1562","messageId":"1563","endLine":138,"endColumn":29},{"ruleId":"1564","severity":1,"message":"1832","line":138,"column":21,"nodeType":"1562","messageId":"1566","endLine":138,"endColumn":29},{"ruleId":"1603","severity":2,"message":"1833","line":141,"column":9,"nodeType":"1562","messageId":"1605","endLine":141,"endColumn":12,"fix":"1834"},{"ruleId":"1603","severity":2,"message":"1835","line":142,"column":9,"nodeType":"1562","messageId":"1605","endLine":142,"endColumn":16,"fix":"1836"},{"ruleId":"1614","severity":1,"message":"1615","line":142,"column":13,"nodeType":"1616","messageId":"1617","endLine":142,"endColumn":16,"suggestions":"1837"},{"ruleId":"1603","severity":2,"message":"1838","line":143,"column":9,"nodeType":"1562","messageId":"1605","endLine":143,"endColumn":10,"fix":"1839"},{"ruleId":"1603","severity":2,"message":"1621","line":158,"column":13,"nodeType":"1562","messageId":"1605","endLine":158,"endColumn":16,"fix":"1840"},{"ruleId":"1603","severity":2,"message":"1841","line":161,"column":15,"nodeType":"1562","messageId":"1605","endLine":161,"endColumn":19,"fix":"1842"},{"ruleId":"1603","severity":2,"message":"1843","line":163,"column":15,"nodeType":"1562","messageId":"1605","endLine":163,"endColumn":22,"fix":"1844"},{"ruleId":"1603","severity":2,"message":"1845","line":164,"column":15,"nodeType":"1562","messageId":"1605","endLine":164,"endColumn":20,"fix":"1846"},{"ruleId":"1603","severity":2,"message":"1847","line":165,"column":15,"nodeType":"1562","messageId":"1605","endLine":165,"endColumn":19,"fix":"1848"},{"ruleId":"1603","severity":2,"message":"1849","line":168,"column":17,"nodeType":"1562","messageId":"1605","endLine":168,"endColumn":23,"fix":"1850"},{"ruleId":"1685","severity":2,"message":"1851","line":178,"column":29,"nodeType":"1568","messageId":"1687","endLine":180,"endColumn":8},{"ruleId":"1603","severity":2,"message":"1809","line":13,"column":9,"nodeType":"1562","messageId":"1605","endLine":13,"endColumn":10},{"ruleId":"1603","severity":2,"message":"1852","line":13,"column":37,"nodeType":"1562","messageId":"1605","endLine":13,"endColumn":38,"fix":"1853"},{"ruleId":"1603","severity":2,"message":"1854","line":19,"column":7,"nodeType":"1562","messageId":"1605","endLine":19,"endColumn":10,"fix":"1855"},{"ruleId":"1557","severity":1,"message":"1558","line":23,"column":8,"nodeType":"1559","messageId":"1560","endLine":23,"endColumn":55},{"ruleId":"1603","severity":2,"message":"1854","line":27,"column":7,"nodeType":"1562","messageId":"1605","endLine":27,"endColumn":10,"fix":"1856"},{"ruleId":"1603","severity":2,"message":"1857","line":29,"column":7,"nodeType":"1562","messageId":"1605","endLine":29,"endColumn":11,"fix":"1858"},{"ruleId":"1603","severity":2,"message":"1859","line":260,"column":9,"nodeType":"1562","messageId":"1605","endLine":260,"endColumn":20,"fix":"1860"},{"ruleId":"1603","severity":2,"message":"1861","line":261,"column":9,"nodeType":"1562","messageId":"1605","endLine":261,"endColumn":19,"fix":"1862"},{"ruleId":"1603","severity":2,"message":"1859","line":277,"column":9,"nodeType":"1562","messageId":"1605","endLine":277,"endColumn":13,"fix":"1863"},{"ruleId":"1603","severity":2,"message":"1859","line":291,"column":9,"nodeType":"1562","messageId":"1605","endLine":291,"endColumn":13,"fix":"1864"},{"ruleId":"1603","severity":2,"message":"1865","line":309,"column":9,"nodeType":"1562","messageId":"1605","endLine":309,"endColumn":13,"fix":"1866"},{"ruleId":"1603","severity":2,"message":"1867","line":311,"column":11,"nodeType":"1562","messageId":"1605","endLine":311,"endColumn":14,"fix":"1868"},{"ruleId":"1603","severity":2,"message":"1869","line":312,"column":11,"nodeType":"1562","messageId":"1605","endLine":312,"endColumn":16,"fix":"1870"},{"ruleId":"1603","severity":2,"message":"1871","line":315,"column":13,"nodeType":"1562","messageId":"1605","endLine":315,"endColumn":16,"fix":"1872"},{"ruleId":"1710","severity":2,"message":"1873","line":39,"column":3,"nodeType":"1738","messageId":"1713","endLine":39,"endColumn":41,"fix":"1874"},{"ruleId":"1603","severity":2,"message":"1875","line":47,"column":21,"nodeType":"1562","messageId":"1605","endLine":47,"endColumn":27},{"ruleId":"1603","severity":2,"message":"1876","line":47,"column":29,"nodeType":"1562","messageId":"1605","endLine":47,"endColumn":35},{"ruleId":"1557","severity":1,"message":"1558","line":57,"column":21,"nodeType":"1567","messageId":"1560","endLine":57,"endColumn":53},{"ruleId":"1557","severity":1,"message":"1558","line":61,"column":24,"nodeType":"1567","messageId":"1560","endLine":61,"endColumn":48},{"ruleId":"1557","severity":1,"message":"1558","line":82,"column":26,"nodeType":"1567","messageId":"1560","endLine":82,"endColumn":86},{"ruleId":"1557","severity":1,"message":"1558","line":90,"column":3,"nodeType":"1568","messageId":"1560","endLine":90,"endColumn":60},{"ruleId":"1564","severity":1,"message":"1658","line":90,"column":43,"nodeType":"1562","messageId":"1566","endLine":90,"endColumn":59},{"ruleId":"1557","severity":1,"message":"1558","line":99,"column":3,"nodeType":"1568","messageId":"1560","endLine":99,"endColumn":11},{"ruleId":"1764","severity":2,"message":"1765","line":29,"column":2,"nodeType":"1766","messageId":"1687","endLine":29,"endColumn":3,"fix":"1877"},{"ruleId":"1609","severity":2,"message":"1610","line":51,"column":25,"nodeType":"1562","messageId":"1611","endLine":51,"endColumn":33},{"ruleId":"1710","severity":2,"message":"1878","line":78,"column":3,"nodeType":"1738","messageId":"1713","endLine":78,"endColumn":25,"fix":"1879"},{"ruleId":"1710","severity":2,"message":"1878","line":83,"column":3,"nodeType":"1738","messageId":"1713","endLine":83,"endColumn":43,"fix":"1880"},{"ruleId":"1710","severity":2,"message":"1873","line":95,"column":3,"nodeType":"1738","messageId":"1713","endLine":95,"endColumn":31,"fix":"1881"},{"ruleId":"1710","severity":2,"message":"1873","line":98,"column":3,"nodeType":"1738","messageId":"1713","endLine":98,"endColumn":32,"fix":"1882"},{"ruleId":"1710","severity":2,"message":"1873","line":108,"column":3,"nodeType":"1738","messageId":"1713","endLine":108,"endColumn":29,"fix":"1883"},{"ruleId":"1710","severity":2,"message":"1711","line":131,"column":3,"nodeType":"1738","messageId":"1713","endLine":131,"endColumn":21,"fix":"1884"},{"ruleId":"1710","severity":2,"message":"1873","line":137,"column":3,"nodeType":"1738","messageId":"1713","endLine":137,"endColumn":37,"fix":"1885"},{"ruleId":"1557","severity":1,"message":"1558","line":188,"column":10,"nodeType":"1567","messageId":"1560","endLine":188,"endColumn":15},{"ruleId":"1603","severity":2,"message":"1886","line":209,"column":9,"nodeType":"1562","messageId":"1605","endLine":209,"endColumn":17,"fix":"1887"},{"ruleId":"1603","severity":2,"message":"1838","line":228,"column":9,"nodeType":"1562","messageId":"1605","endLine":228,"endColumn":17,"fix":"1888"},{"ruleId":"1557","severity":1,"message":"1558","line":236,"column":20,"nodeType":"1567","messageId":"1560","endLine":236,"endColumn":25},{"ruleId":"1603","severity":2,"message":"1889","line":242,"column":11,"nodeType":"1562","messageId":"1605","endLine":242,"endColumn":18,"fix":"1890"},{"ruleId":"1603","severity":2,"message":"1891","line":243,"column":11,"nodeType":"1562","messageId":"1605","endLine":243,"endColumn":18,"fix":"1892"},{"ruleId":"1603","severity":2,"message":"1857","line":258,"column":9,"nodeType":"1562","messageId":"1605","endLine":258,"endColumn":13,"fix":"1893"},{"ruleId":"1603","severity":2,"message":"1894","line":275,"column":11,"nodeType":"1562","messageId":"1605","endLine":275,"endColumn":15,"fix":"1895"},{"ruleId":"1603","severity":2,"message":"1894","line":290,"column":11,"nodeType":"1562","messageId":"1605","endLine":290,"endColumn":15,"fix":"1896"},{"ruleId":"1557","severity":1,"message":"1558","line":312,"column":23,"nodeType":"1567","messageId":"1560","endLine":312,"endColumn":39},{"ruleId":"1603","severity":2,"message":"1886","line":314,"column":11,"nodeType":"1562","messageId":"1605","endLine":314,"endColumn":19,"fix":"1897"},{"ruleId":"1557","severity":1,"message":"1558","line":342,"column":21,"nodeType":"1567","messageId":"1560","endLine":342,"endColumn":37},{"ruleId":"1557","severity":1,"message":"1558","line":350,"column":23,"nodeType":"1567","messageId":"1560","endLine":350,"endColumn":36},{"ruleId":"1557","severity":1,"message":"1898","line":350,"column":24,"nodeType":"1562","messageId":"1613","endLine":350,"endColumn":32},{"ruleId":"1614","severity":1,"message":"1615","line":350,"column":29,"nodeType":"1616","messageId":"1617","endLine":350,"endColumn":32,"suggestions":"1899"},{"ruleId":"1603","severity":2,"message":"1886","line":351,"column":9,"nodeType":"1562","messageId":"1605","endLine":351,"endColumn":17,"fix":"1900"},{"ruleId":"1603","severity":2,"message":"1901","line":353,"column":9,"nodeType":"1562","messageId":"1605","endLine":353,"endColumn":24,"fix":"1902"},{"ruleId":"1557","severity":1,"message":"1558","line":367,"column":23,"nodeType":"1567","messageId":"1560","endLine":367,"endColumn":36},{"ruleId":"1557","severity":1,"message":"1898","line":367,"column":24,"nodeType":"1562","messageId":"1613","endLine":367,"endColumn":32},{"ruleId":"1614","severity":1,"message":"1615","line":367,"column":29,"nodeType":"1616","messageId":"1617","endLine":367,"endColumn":32,"suggestions":"1903"},{"ruleId":"1603","severity":2,"message":"1886","line":368,"column":9,"nodeType":"1562","messageId":"1605","endLine":368,"endColumn":17,"fix":"1904"},{"ruleId":"1603","severity":2,"message":"1905","line":371,"column":11,"nodeType":"1562","messageId":"1605","endLine":371,"endColumn":24,"fix":"1906"},{"ruleId":"1603","severity":2,"message":"1907","line":373,"column":11,"nodeType":"1562","messageId":"1605","endLine":373,"endColumn":14,"fix":"1908"},{"ruleId":"1557","severity":1,"message":"1558","line":393,"column":25,"nodeType":"1567","messageId":"1560","endLine":393,"endColumn":30},{"ruleId":"1603","severity":2,"message":"1886","line":394,"column":9,"nodeType":"1562","messageId":"1605","endLine":394,"endColumn":17,"fix":"1909"},{"ruleId":"1603","severity":2,"message":"1907","line":395,"column":9,"nodeType":"1562","messageId":"1605","endLine":395,"endColumn":12,"fix":"1910"},{"ruleId":"1557","severity":1,"message":"1558","line":408,"column":20,"nodeType":"1567","messageId":"1560","endLine":408,"endColumn":45},{"ruleId":"1564","severity":1,"message":"1911","line":408,"column":21,"nodeType":"1562","messageId":"1566","endLine":408,"endColumn":29},{"ruleId":"1614","severity":1,"message":"1615","line":408,"column":26,"nodeType":"1616","messageId":"1617","endLine":408,"endColumn":29,"suggestions":"1912"},{"ruleId":"1603","severity":2,"message":"1886","line":409,"column":9,"nodeType":"1562","messageId":"1605","endLine":409,"endColumn":17,"fix":"1913"},{"ruleId":"1557","severity":1,"message":"1558","line":427,"column":24,"nodeType":"1567","messageId":"1560","endLine":427,"endColumn":37},{"ruleId":"1557","severity":1,"message":"1898","line":427,"column":25,"nodeType":"1562","messageId":"1613","endLine":427,"endColumn":33},{"ruleId":"1614","severity":1,"message":"1615","line":427,"column":30,"nodeType":"1616","messageId":"1617","endLine":427,"endColumn":33,"suggestions":"1914"},{"ruleId":"1603","severity":2,"message":"1901","line":428,"column":9,"nodeType":"1562","messageId":"1605","endLine":428,"endColumn":24,"fix":"1915"},{"ruleId":"1603","severity":2,"message":"1886","line":430,"column":11,"nodeType":"1562","messageId":"1605","endLine":430,"endColumn":19,"fix":"1916"},{"ruleId":"1603","severity":2,"message":"1917","line":432,"column":11,"nodeType":"1562","messageId":"1605","endLine":432,"endColumn":16,"fix":"1918"},{"ruleId":"1557","severity":1,"message":"1558","line":443,"column":25,"nodeType":"1567","messageId":"1560","endLine":443,"endColumn":30},{"ruleId":"1557","severity":1,"message":"1558","line":476,"column":19,"nodeType":"1567","messageId":"1560","endLine":476,"endColumn":46},{"ruleId":"1557","severity":1,"message":"1898","line":476,"column":34,"nodeType":"1562","messageId":"1613","endLine":476,"endColumn":42},{"ruleId":"1614","severity":1,"message":"1615","line":476,"column":39,"nodeType":"1616","messageId":"1617","endLine":476,"endColumn":42,"suggestions":"1919"},{"ruleId":"1603","severity":2,"message":"1920","line":477,"column":9,"nodeType":"1562","messageId":"1605","endLine":477,"endColumn":15,"fix":"1921"},{"ruleId":"1557","severity":1,"message":"1558","line":502,"column":27,"nodeType":"1567","messageId":"1560","endLine":502,"endColumn":77},{"ruleId":"1603","severity":2,"message":"1922","line":506,"column":9,"nodeType":"1562","messageId":"1605","endLine":506,"endColumn":14,"fix":"1923"},{"ruleId":"1603","severity":2,"message":"1924","line":508,"column":9,"nodeType":"1562","messageId":"1605","endLine":508,"endColumn":11,"fix":"1925"},{"ruleId":"1603","severity":2,"message":"1926","line":509,"column":9,"nodeType":"1562","messageId":"1605","endLine":509,"endColumn":11,"fix":"1927"},{"ruleId":"1557","severity":1,"message":"1558","line":519,"column":34,"nodeType":"1567","messageId":"1560","endLine":519,"endColumn":84},{"ruleId":"1603","severity":2,"message":"1922","line":523,"column":9,"nodeType":"1562","messageId":"1605","endLine":523,"endColumn":14,"fix":"1928"},{"ruleId":"1557","severity":1,"message":"1558","line":538,"column":27,"nodeType":"1567","messageId":"1560","endLine":538,"endColumn":66},{"ruleId":"1603","severity":2,"message":"1886","line":541,"column":9,"nodeType":"1562","messageId":"1605","endLine":541,"endColumn":17,"fix":"1929"},{"ruleId":"1603","severity":2,"message":"1907","line":542,"column":9,"nodeType":"1562","messageId":"1605","endLine":542,"endColumn":12,"fix":"1930"},{"ruleId":"1603","severity":2,"message":"1931","line":544,"column":9,"nodeType":"1562","messageId":"1605","endLine":544,"endColumn":13,"fix":"1932"},{"ruleId":"1603","severity":2,"message":"1933","line":545,"column":9,"nodeType":"1562","messageId":"1605","endLine":545,"endColumn":17,"fix":"1934"},{"ruleId":"1603","severity":2,"message":"1935","line":546,"column":9,"nodeType":"1562","messageId":"1605","endLine":546,"endColumn":17,"fix":"1936"},{"ruleId":"1603","severity":2,"message":"1937","line":549,"column":9,"nodeType":"1562","messageId":"1605","endLine":549,"endColumn":11,"fix":"1938"},{"ruleId":"1603","severity":2,"message":"1939","line":550,"column":9,"nodeType":"1562","messageId":"1605","endLine":550,"endColumn":11,"fix":"1940"},{"ruleId":"1557","severity":1,"message":"1558","line":560,"column":26,"nodeType":"1567","messageId":"1560","endLine":560,"endColumn":65},{"ruleId":"1603","severity":2,"message":"1941","line":563,"column":9,"nodeType":"1562","messageId":"1605","endLine":563,"endColumn":18,"fix":"1942"},{"ruleId":"1603","severity":2,"message":"1943","line":565,"column":9,"nodeType":"1562","messageId":"1605","endLine":565,"endColumn":11,"fix":"1944"},{"ruleId":"1603","severity":2,"message":"1945","line":566,"column":9,"nodeType":"1562","messageId":"1605","endLine":566,"endColumn":11,"fix":"1946"},{"ruleId":"1557","severity":1,"message":"1558","line":619,"column":26,"nodeType":"1567","messageId":"1560","endLine":619,"endColumn":60},{"ruleId":"1603","severity":2,"message":"1886","line":628,"column":9,"nodeType":"1562","messageId":"1605","endLine":628,"endColumn":17,"fix":"1947"},{"ruleId":"1603","severity":2,"message":"1907","line":629,"column":9,"nodeType":"1562","messageId":"1605","endLine":629,"endColumn":12,"fix":"1948"},{"ruleId":"1603","severity":2,"message":"1933","line":630,"column":9,"nodeType":"1562","messageId":"1605","endLine":630,"endColumn":17,"fix":"1949"},{"ruleId":"1603","severity":2,"message":"1935","line":631,"column":9,"nodeType":"1562","messageId":"1605","endLine":631,"endColumn":17,"fix":"1950"},{"ruleId":"1603","severity":2,"message":"1951","line":635,"column":11,"nodeType":"1562","messageId":"1605","endLine":635,"endColumn":17,"fix":"1952"},{"ruleId":"1603","severity":2,"message":"1951","line":642,"column":11,"nodeType":"1562","messageId":"1605","endLine":642,"endColumn":17,"fix":"1953"},{"ruleId":"1603","severity":2,"message":"1951","line":649,"column":11,"nodeType":"1562","messageId":"1605","endLine":649,"endColumn":17,"fix":"1954"},{"ruleId":"1603","severity":2,"message":"1951","line":656,"column":11,"nodeType":"1562","messageId":"1605","endLine":656,"endColumn":17,"fix":"1955"},{"ruleId":"1603","severity":2,"message":"1956","line":663,"column":11,"nodeType":"1562","messageId":"1605","endLine":663,"endColumn":23,"fix":"1957"},{"ruleId":"1603","severity":2,"message":"1958","line":664,"column":11,"nodeType":"1562","messageId":"1605","endLine":664,"endColumn":23,"fix":"1959"},{"ruleId":"1557","severity":1,"message":"1558","line":675,"column":35,"nodeType":"1567","messageId":"1560","endLine":675,"endColumn":89},{"ruleId":"1603","severity":2,"message":"1886","line":676,"column":9,"nodeType":"1562","messageId":"1605","endLine":676,"endColumn":17,"fix":"1960"},{"ruleId":"1603","severity":2,"message":"1907","line":677,"column":9,"nodeType":"1562","messageId":"1605","endLine":677,"endColumn":12,"fix":"1961"},{"ruleId":"1603","severity":2,"message":"1793","line":686,"column":11,"nodeType":"1562","messageId":"1605","endLine":686,"endColumn":13,"fix":"1962"},{"ruleId":"1603","severity":2,"message":"1797","line":687,"column":11,"nodeType":"1562","messageId":"1605","endLine":687,"endColumn":13,"fix":"1963"},{"ruleId":"1603","severity":2,"message":"1964","line":690,"column":11,"nodeType":"1562","messageId":"1605","endLine":690,"endColumn":17,"fix":"1965"},{"ruleId":"1603","severity":2,"message":"1966","line":691,"column":11,"nodeType":"1562","messageId":"1605","endLine":691,"endColumn":17,"fix":"1967"},{"ruleId":"1557","severity":1,"message":"1558","line":724,"column":12,"nodeType":"1567","messageId":"1560","endLine":724,"endColumn":56},{"ruleId":"1603","severity":2,"message":"1931","line":727,"column":9,"nodeType":"1562","messageId":"1605","endLine":727,"endColumn":13,"fix":"1968"},{"ruleId":"1609","severity":2,"message":"1610","line":34,"column":23,"nodeType":"1562","messageId":"1611","endLine":34,"endColumn":31},{"ruleId":"1609","severity":2,"message":"1610","line":35,"column":25,"nodeType":"1562","messageId":"1611","endLine":35,"endColumn":33},{"ruleId":"1710","severity":2,"message":"1878","line":101,"column":3,"nodeType":"1738","messageId":"1713","endLine":101,"endColumn":25,"fix":"1969"},{"ruleId":"1603","severity":2,"message":"1970","line":114,"column":11,"nodeType":"1562","messageId":"1605","endLine":114,"endColumn":19,"fix":"1971"},{"ruleId":"1603","severity":2,"message":"1972","line":114,"column":21,"nodeType":"1562","messageId":"1605","endLine":114,"endColumn":31,"fix":"1973"},{"ruleId":"1603","severity":2,"message":"1922","line":114,"column":33,"nodeType":"1562","messageId":"1605","endLine":114,"endColumn":38,"fix":"1974"},{"ruleId":"1603","severity":2,"message":"1975","line":114,"column":40,"nodeType":"1562","messageId":"1605","endLine":114,"endColumn":49,"fix":"1976"},{"ruleId":"1603","severity":2,"message":"1977","line":114,"column":51,"nodeType":"1562","messageId":"1605","endLine":114,"endColumn":56,"fix":"1978"},{"ruleId":"1603","severity":2,"message":"1979","line":114,"column":58,"nodeType":"1562","messageId":"1605","endLine":114,"endColumn":64,"fix":"1980"},{"ruleId":"1603","severity":2,"message":"1981","line":114,"column":66,"nodeType":"1562","messageId":"1605","endLine":114,"endColumn":70,"fix":"1982"},{"ruleId":"1603","severity":2,"message":"1983","line":114,"column":72,"nodeType":"1562","messageId":"1605","endLine":114,"endColumn":79,"fix":"1984"},{"ruleId":"1557","severity":1,"message":"1558","line":160,"column":3,"nodeType":"1568","messageId":"1560","endLine":160,"endColumn":22},{"ruleId":"1603","severity":2,"message":"1981","line":161,"column":11,"nodeType":"1562","messageId":"1605","endLine":161,"endColumn":15,"fix":"1985"},{"ruleId":"1603","severity":2,"message":"1986","line":166,"column":11,"nodeType":"1562","messageId":"1605","endLine":166,"endColumn":23,"fix":"1987"},{"ruleId":"1603","severity":2,"message":"1988","line":167,"column":11,"nodeType":"1562","messageId":"1605","endLine":167,"endColumn":22,"fix":"1989"},{"ruleId":"1557","severity":1,"message":"1558","line":208,"column":3,"nodeType":"1568","messageId":"1560","endLine":208,"endColumn":94},{"ruleId":"1564","severity":1,"message":"1658","line":208,"column":60,"nodeType":"1562","messageId":"1566","endLine":208,"endColumn":93},{"ruleId":"1557","severity":1,"message":"1558","line":239,"column":3,"nodeType":"1568","messageId":"1560","endLine":239,"endColumn":25},{"ruleId":"1603","severity":2,"message":"1990","line":248,"column":9,"nodeType":"1562","messageId":"1605","endLine":248,"endColumn":19,"fix":"1991"},{"ruleId":"1557","severity":1,"message":"1558","line":253,"column":20,"nodeType":"1567","messageId":"1560","endLine":253,"endColumn":25},{"ruleId":"1557","severity":1,"message":"1558","line":274,"column":3,"nodeType":"1568","messageId":"1560","endLine":274,"endColumn":56},{"ruleId":"1603","severity":2,"message":"1992","line":292,"column":9,"nodeType":"1562","messageId":"1605","endLine":292,"endColumn":17,"fix":"1993"},{"ruleId":"1557","severity":1,"message":"1558","line":302,"column":19,"nodeType":"1567","messageId":"1560","endLine":302,"endColumn":29},{"ruleId":"1557","severity":1,"message":"1728","line":302,"column":20,"nodeType":"1562","messageId":"1563","endLine":302,"endColumn":25},{"ruleId":"1557","severity":1,"message":"1558","line":314,"column":23,"nodeType":"1567","messageId":"1560","endLine":314,"endColumn":33},{"ruleId":"1557","severity":1,"message":"1728","line":314,"column":24,"nodeType":"1562","messageId":"1563","endLine":314,"endColumn":29},{"ruleId":"1603","severity":2,"message":"1994","line":332,"column":11,"nodeType":"1562","messageId":"1605","endLine":332,"endColumn":27,"fix":"1995"},{"ruleId":"1557","severity":1,"message":"1558","line":351,"column":19,"nodeType":"1567","messageId":"1560","endLine":351,"endColumn":29},{"ruleId":"1557","severity":1,"message":"1728","line":351,"column":20,"nodeType":"1562","messageId":"1563","endLine":351,"endColumn":25},{"ruleId":"1557","severity":1,"message":"1558","line":365,"column":17,"nodeType":"1567","messageId":"1560","endLine":365,"endColumn":27},{"ruleId":"1557","severity":1,"message":"1728","line":365,"column":18,"nodeType":"1562","messageId":"1563","endLine":365,"endColumn":23},{"ruleId":"1557","severity":1,"message":"1558","line":380,"column":25,"nodeType":"1567","messageId":"1560","endLine":380,"endColumn":35},{"ruleId":"1557","severity":1,"message":"1728","line":380,"column":26,"nodeType":"1562","messageId":"1563","endLine":380,"endColumn":31},{"ruleId":"1557","severity":1,"message":"1558","line":391,"column":21,"nodeType":"1567","messageId":"1560","endLine":391,"endColumn":31},{"ruleId":"1557","severity":1,"message":"1728","line":391,"column":22,"nodeType":"1562","messageId":"1563","endLine":391,"endColumn":27},{"ruleId":"1557","severity":1,"message":"1558","line":401,"column":13,"nodeType":"1567","messageId":"1560","endLine":401,"endColumn":29},{"ruleId":"1557","severity":1,"message":"1736","line":401,"column":14,"nodeType":"1562","messageId":"1563","endLine":401,"endColumn":19},{"ruleId":"1557","severity":1,"message":"1737","line":401,"column":21,"nodeType":"1562","messageId":"1563","endLine":401,"endColumn":25},{"ruleId":"1603","severity":2,"message":"1859","line":402,"column":9,"nodeType":"1562","messageId":"1605","endLine":402,"endColumn":13,"fix":"1996"},{"ruleId":"1557","severity":1,"message":"1558","line":410,"column":3,"nodeType":"1568","messageId":"1560","endLine":410,"endColumn":11},{"ruleId":"1614","severity":1,"message":"1615","line":14,"column":9,"nodeType":"1616","messageId":"1617","endLine":14,"endColumn":12,"suggestions":"1997"},{"ruleId":"1557","severity":1,"message":"1558","line":34,"column":8,"nodeType":"1559","messageId":"1560","endLine":34,"endColumn":33},{"ruleId":"1609","severity":2,"message":"1610","line":18,"column":19,"nodeType":"1562","messageId":"1611","endLine":18,"endColumn":27},{"ruleId":"1614","severity":1,"message":"1615","line":22,"column":11,"nodeType":"1616","messageId":"1617","endLine":22,"endColumn":14,"suggestions":"1998"},{"ruleId":"1557","severity":1,"message":"1558","line":104,"column":3,"nodeType":"1568","messageId":"1560","endLine":104,"endColumn":22},{"ruleId":"1557","severity":1,"message":"1558","line":108,"column":3,"nodeType":"1568","messageId":"1560","endLine":108,"endColumn":42},{"ruleId":"1557","severity":1,"message":"1558","line":122,"column":21,"nodeType":"1567","messageId":"1560","endLine":122,"endColumn":35},{"ruleId":"1557","severity":1,"message":"1999","line":122,"column":28,"nodeType":"1562","messageId":"1563","endLine":122,"endColumn":31},{"ruleId":"1557","severity":1,"message":"1558","line":157,"column":13,"nodeType":"1567","messageId":"1560","endLine":157,"endColumn":21},{"ruleId":"1557","severity":1,"message":"2000","line":157,"column":14,"nodeType":"1562","messageId":"1563","endLine":157,"endColumn":17},{"ruleId":"1603","severity":2,"message":"2001","line":159,"column":9,"nodeType":"1562","messageId":"1605","endLine":159,"endColumn":23,"fix":"2002"},{"ruleId":"1557","severity":1,"message":"1558","line":182,"column":20,"nodeType":"1567","messageId":"1560","endLine":182,"endColumn":44},{"ruleId":"1557","severity":1,"message":"1558","line":202,"column":16,"nodeType":"1567","messageId":"1560","endLine":202,"endColumn":21},{"ruleId":"1557","severity":1,"message":"1558","line":227,"column":25,"nodeType":"1567","messageId":"1560","endLine":227,"endColumn":54},{"ruleId":"1557","severity":1,"message":"1558","line":247,"column":18,"nodeType":"1567","messageId":"1560","endLine":247,"endColumn":23},{"ruleId":"1557","severity":1,"message":"1558","line":263,"column":3,"nodeType":"1568","messageId":"1560","endLine":263,"endColumn":11},{"ruleId":"1564","severity":1,"message":"2003","line":17,"column":10,"nodeType":"1562","messageId":"1566","endLine":17,"endColumn":27},{"ruleId":"1564","severity":1,"message":"2004","line":17,"column":29,"nodeType":"1562","messageId":"1566","endLine":17,"endColumn":41},{"ruleId":"1564","severity":1,"message":"2005","line":20,"column":8,"nodeType":"1562","messageId":"1566","endLine":20,"endColumn":24},{"ruleId":"1564","severity":1,"message":"2006","line":24,"column":8,"nodeType":"1562","messageId":"1566","endLine":24,"endColumn":14},{"ruleId":"1557","severity":1,"message":"1558","line":42,"column":16,"nodeType":"1559","messageId":"1560","endLine":42,"endColumn":45},{"ruleId":"1564","severity":1,"message":"2007","line":68,"column":24,"nodeType":"1562","messageId":"1566","endLine":68,"endColumn":25},{"ruleId":"1564","severity":1,"message":"2007","line":329,"column":45,"nodeType":"1562","messageId":"1566","endLine":329,"endColumn":46},{"ruleId":"1609","severity":2,"message":"1610","line":7,"column":15,"nodeType":"1562","messageId":"1611","endLine":7,"endColumn":23},{"ruleId":"1614","severity":1,"message":"1615","line":10,"column":11,"nodeType":"1616","messageId":"1617","endLine":10,"endColumn":14,"suggestions":"2008"},{"ruleId":"1557","severity":1,"message":"1558","line":23,"column":27,"nodeType":"1567","messageId":"1560","endLine":23,"endColumn":44},{"ruleId":"1557","severity":1,"message":"1558","line":6,"column":8,"nodeType":"1559","messageId":"1560","endLine":6,"endColumn":74},{"ruleId":"1594","severity":2,"message":"1595","line":47,"column":3,"nodeType":"1596","messageId":"1597","endLine":47,"endColumn":35,"fix":"2009"},{"ruleId":"1564","severity":1,"message":"2010","line":5,"column":18,"nodeType":"1562","messageId":"1566","endLine":5,"endColumn":21},{"ruleId":"1557","severity":1,"message":"1558","line":24,"column":16,"nodeType":"1559","messageId":"1560","endLine":24,"endColumn":49},{"ruleId":"1557","severity":1,"message":"1650","line":24,"column":43,"nodeType":"1562","messageId":"1563","endLine":24,"endColumn":48},{"ruleId":"1564","severity":1,"message":"2011","line":25,"column":9,"nodeType":"1562","messageId":"1566","endLine":25,"endColumn":16},{"ruleId":"1564","severity":1,"message":"2012","line":27,"column":18,"nodeType":"1562","messageId":"1566","endLine":27,"endColumn":27},{"ruleId":"1564","severity":1,"message":"2007","line":33,"column":24,"nodeType":"1562","messageId":"1566","endLine":33,"endColumn":29},{"ruleId":"1609","severity":2,"message":"2013","line":33,"column":27,"nodeType":"2014","messageId":"1611","endLine":33,"endColumn":29},{"ruleId":"1564","severity":1,"message":"2015","line":33,"column":31,"nodeType":"1562","messageId":"1566","endLine":33,"endColumn":72},{"ruleId":"1582","severity":2,"message":"2016","line":40,"column":16,"nodeType":"1562","endLine":40,"endColumn":24},{"ruleId":"1764","severity":2,"message":"1765","line":9,"column":2,"nodeType":"1766","messageId":"1687","endLine":9,"endColumn":3,"fix":"2017"},{"ruleId":"1764","severity":2,"message":"1765","line":21,"column":2,"nodeType":"1766","messageId":"1687","endLine":21,"endColumn":3,"fix":"2018"},{"ruleId":"1764","severity":2,"message":"1765","line":40,"column":2,"nodeType":"1766","messageId":"1687","endLine":40,"endColumn":3,"fix":"2019"},{"ruleId":"1764","severity":2,"message":"1765","line":53,"column":2,"nodeType":"1766","messageId":"1687","endLine":53,"endColumn":3,"fix":"2020"},{"ruleId":"1557","severity":1,"message":"2021","line":36,"column":15,"nodeType":"1562","messageId":"1563","endLine":36,"endColumn":22},{"ruleId":"1557","severity":1,"message":"1558","line":138,"column":15,"nodeType":"1567","messageId":"1560","endLine":138,"endColumn":31},{"ruleId":"1557","severity":1,"message":"1735","line":138,"column":16,"nodeType":"1562","messageId":"1563","endLine":138,"endColumn":20},{"ruleId":"1557","severity":1,"message":"2022","line":138,"column":22,"nodeType":"1562","messageId":"1563","endLine":138,"endColumn":27},{"ruleId":"1557","severity":1,"message":"1558","line":179,"column":20,"nodeType":"1567","messageId":"1560","endLine":179,"endColumn":25},{"ruleId":"1557","severity":1,"message":"1558","line":256,"column":23,"nodeType":"1567","messageId":"1560","endLine":256,"endColumn":31},{"ruleId":"1557","severity":1,"message":"2023","line":256,"column":24,"nodeType":"1562","messageId":"1563","endLine":256,"endColumn":27},{"ruleId":"1557","severity":1,"message":"1558","line":273,"column":23,"nodeType":"1567","messageId":"1560","endLine":273,"endColumn":31},{"ruleId":"1557","severity":1,"message":"2023","line":273,"column":24,"nodeType":"1562","messageId":"1563","endLine":273,"endColumn":27},{"ruleId":"1557","severity":1,"message":"1558","line":300,"column":20,"nodeType":"1567","messageId":"1560","endLine":300,"endColumn":28},{"ruleId":"1557","severity":1,"message":"2023","line":300,"column":21,"nodeType":"1562","messageId":"1563","endLine":300,"endColumn":24},{"ruleId":"1564","severity":1,"message":"1724","line":300,"column":21,"nodeType":"1562","messageId":"1566","endLine":300,"endColumn":24},{"ruleId":"1557","severity":1,"message":"1558","line":319,"column":24,"nodeType":"1567","messageId":"1560","endLine":319,"endColumn":32},{"ruleId":"1557","severity":1,"message":"2023","line":319,"column":25,"nodeType":"1562","messageId":"1563","endLine":319,"endColumn":28},{"ruleId":"1557","severity":1,"message":"1558","line":330,"column":25,"nodeType":"1567","messageId":"1560","endLine":330,"endColumn":30},{"ruleId":"1557","severity":1,"message":"1558","line":362,"column":19,"nodeType":"1567","messageId":"1560","endLine":362,"endColumn":33},{"ruleId":"1557","severity":1,"message":"2024","line":362,"column":20,"nodeType":"1562","messageId":"1563","endLine":362,"endColumn":24},{"ruleId":"1557","severity":1,"message":"2023","line":362,"column":26,"nodeType":"1562","messageId":"1563","endLine":362,"endColumn":29},{"ruleId":"1557","severity":1,"message":"1558","line":382,"column":16,"nodeType":"1567","messageId":"1560","endLine":382,"endColumn":24},{"ruleId":"1557","severity":1,"message":"2025","line":382,"column":17,"nodeType":"1562","messageId":"1563","endLine":382,"endColumn":20},{"ruleId":"1557","severity":1,"message":"1558","line":437,"column":25,"nodeType":"1567","messageId":"1560","endLine":437,"endColumn":44},{"ruleId":"1557","severity":1,"message":"2026","line":437,"column":26,"nodeType":"1562","messageId":"1563","endLine":437,"endColumn":31},{"ruleId":"1557","severity":1,"message":"2027","line":437,"column":33,"nodeType":"1562","messageId":"1563","endLine":437,"endColumn":40},{"ruleId":"1557","severity":1,"message":"1558","line":487,"column":17,"nodeType":"1567","messageId":"1560","endLine":487,"endColumn":29},{"ruleId":"1557","severity":1,"message":"2028","line":487,"column":18,"nodeType":"1562","messageId":"1563","endLine":487,"endColumn":25},{"ruleId":"1557","severity":1,"message":"1558","line":504,"column":24,"nodeType":"1567","messageId":"1560","endLine":504,"endColumn":36},{"ruleId":"1557","severity":1,"message":"2028","line":504,"column":25,"nodeType":"1562","messageId":"1563","endLine":504,"endColumn":32},{"ruleId":"1557","severity":1,"message":"1558","line":523,"column":17,"nodeType":"1567","messageId":"1560","endLine":523,"endColumn":30},{"ruleId":"1557","severity":1,"message":"2029","line":523,"column":18,"nodeType":"1562","messageId":"1563","endLine":523,"endColumn":26},{"ruleId":"1557","severity":1,"message":"1558","line":545,"column":16,"nodeType":"1567","messageId":"1560","endLine":545,"endColumn":29},{"ruleId":"1557","severity":1,"message":"2030","line":545,"column":17,"nodeType":"1562","messageId":"1563","endLine":545,"endColumn":25},{"ruleId":"1557","severity":1,"message":"1558","line":558,"column":11,"nodeType":"1567","messageId":"1560","endLine":558,"endColumn":16},{"ruleId":"1557","severity":1,"message":"1558","line":568,"column":16,"nodeType":"1567","messageId":"1560","endLine":568,"endColumn":21},{"ruleId":"1557","severity":1,"message":"1558","line":592,"column":3,"nodeType":"1568","messageId":"1560","endLine":592,"endColumn":46},{"ruleId":"1557","severity":1,"message":"2031","line":592,"column":19,"nodeType":"1562","messageId":"1563","endLine":592,"endColumn":23},{"ruleId":"1557","severity":1,"message":"2032","line":592,"column":25,"nodeType":"1562","messageId":"1563","endLine":592,"endColumn":32},{"ruleId":"1557","severity":1,"message":"2033","line":592,"column":34,"nodeType":"1562","messageId":"1563","endLine":592,"endColumn":45},{"ruleId":"1557","severity":1,"message":"1558","line":631,"column":16,"nodeType":"1567","messageId":"1560","endLine":631,"endColumn":63},{"ruleId":"1557","severity":1,"message":"2034","line":631,"column":17,"nodeType":"1562","messageId":"1563","endLine":631,"endColumn":24},{"ruleId":"1557","severity":1,"message":"2035","line":631,"column":26,"nodeType":"1562","messageId":"1563","endLine":631,"endColumn":31},{"ruleId":"1557","severity":1,"message":"2036","line":631,"column":33,"nodeType":"1562","messageId":"1563","endLine":631,"endColumn":37},{"ruleId":"1557","severity":1,"message":"2037","line":631,"column":39,"nodeType":"1562","messageId":"1563","endLine":631,"endColumn":43},{"ruleId":"1557","severity":1,"message":"2038","line":631,"column":45,"nodeType":"1562","messageId":"1563","endLine":631,"endColumn":59},{"ruleId":"1557","severity":1,"message":"1558","line":686,"column":22,"nodeType":"1567","messageId":"1560","endLine":686,"endColumn":32},{"ruleId":"1557","severity":1,"message":"1728","line":686,"column":23,"nodeType":"1562","messageId":"1563","endLine":686,"endColumn":28},{"ruleId":"1557","severity":1,"message":"1558","line":697,"column":17,"nodeType":"1567","messageId":"1560","endLine":697,"endColumn":27},{"ruleId":"1557","severity":1,"message":"1728","line":697,"column":18,"nodeType":"1562","messageId":"1563","endLine":697,"endColumn":23},{"ruleId":"1557","severity":1,"message":"1558","line":725,"column":21,"nodeType":"1567","messageId":"1560","endLine":725,"endColumn":31},{"ruleId":"1557","severity":1,"message":"1728","line":725,"column":22,"nodeType":"1562","messageId":"1563","endLine":725,"endColumn":27},{"ruleId":"1557","severity":1,"message":"1558","line":739,"column":20,"nodeType":"1567","messageId":"1560","endLine":739,"endColumn":30},{"ruleId":"1557","severity":1,"message":"2039","line":739,"column":21,"nodeType":"1562","messageId":"1563","endLine":739,"endColumn":26},{"ruleId":"1557","severity":1,"message":"1558","line":744,"column":12,"nodeType":"1567","messageId":"1560","endLine":744,"endColumn":21},{"ruleId":"1557","severity":1,"message":"1735","line":744,"column":13,"nodeType":"1562","messageId":"1563","endLine":744,"endColumn":17},{"ruleId":"1557","severity":1,"message":"1558","line":754,"column":3,"nodeType":"1568","messageId":"1560","endLine":754,"endColumn":17},{"ruleId":"1557","severity":1,"message":"1558","line":761,"column":17,"nodeType":"1567","messageId":"1560","endLine":761,"endColumn":22},{"ruleId":"1557","severity":1,"message":"1558","line":765,"column":16,"nodeType":"1567","messageId":"1560","endLine":765,"endColumn":21},{"ruleId":"1557","severity":1,"message":"1558","line":771,"column":18,"nodeType":"1567","messageId":"1560","endLine":771,"endColumn":23},{"ruleId":"1557","severity":1,"message":"1558","line":777,"column":18,"nodeType":"1567","messageId":"1560","endLine":777,"endColumn":25},{"ruleId":"1557","severity":1,"message":"2040","line":777,"column":19,"nodeType":"1562","messageId":"1563","endLine":777,"endColumn":21},{"ruleId":"1557","severity":1,"message":"1558","line":783,"column":17,"nodeType":"1567","messageId":"1560","endLine":783,"endColumn":24},{"ruleId":"1557","severity":1,"message":"1706","line":783,"column":18,"nodeType":"1562","messageId":"1563","endLine":783,"endColumn":20},{"ruleId":"1557","severity":1,"message":"1558","line":786,"column":13,"nodeType":"1567","messageId":"1560","endLine":786,"endColumn":22},{"ruleId":"1557","severity":1,"message":"2037","line":786,"column":14,"nodeType":"1562","messageId":"1563","endLine":786,"endColumn":18},{"ruleId":"1557","severity":1,"message":"1558","line":790,"column":23,"nodeType":"1567","messageId":"1560","endLine":790,"endColumn":28},{"ruleId":"1557","severity":1,"message":"1558","line":795,"column":20,"nodeType":"1567","messageId":"1560","endLine":795,"endColumn":43},{"ruleId":"1557","severity":1,"message":"2037","line":795,"column":21,"nodeType":"1562","messageId":"1563","endLine":795,"endColumn":25},{"ruleId":"1557","severity":1,"message":"2041","line":795,"column":27,"nodeType":"1562","messageId":"1563","endLine":795,"endColumn":39},{"ruleId":"1557","severity":1,"message":"1558","line":832,"column":17,"nodeType":"1567","messageId":"1560","endLine":832,"endColumn":39},{"ruleId":"1557","severity":1,"message":"1737","line":832,"column":18,"nodeType":"1562","messageId":"1563","endLine":832,"endColumn":22},{"ruleId":"1557","severity":1,"message":"1735","line":832,"column":24,"nodeType":"1562","messageId":"1563","endLine":832,"endColumn":28},{"ruleId":"1557","severity":1,"message":"1736","line":832,"column":30,"nodeType":"1562","messageId":"1563","endLine":832,"endColumn":35},{"ruleId":"1557","severity":1,"message":"1558","line":855,"column":20,"nodeType":"1567","messageId":"1560","endLine":855,"endColumn":25},{"ruleId":"1557","severity":1,"message":"1558","line":866,"column":19,"nodeType":"1567","messageId":"1560","endLine":866,"endColumn":49},{"ruleId":"1557","severity":1,"message":"2042","line":866,"column":20,"nodeType":"1562","messageId":"1563","endLine":866,"endColumn":27},{"ruleId":"1557","severity":1,"message":"1736","line":866,"column":29,"nodeType":"1562","messageId":"1563","endLine":866,"endColumn":34},{"ruleId":"1557","severity":1,"message":"2043","line":866,"column":36,"nodeType":"1562","messageId":"1563","endLine":866,"endColumn":45},{"ruleId":"1557","severity":1,"message":"1558","line":886,"column":24,"nodeType":"1567","messageId":"1560","endLine":886,"endColumn":51},{"ruleId":"1557","severity":1,"message":"2044","line":886,"column":25,"nodeType":"1562","messageId":"1563","endLine":886,"endColumn":29},{"ruleId":"1557","severity":1,"message":"2045","line":886,"column":31,"nodeType":"1562","messageId":"1563","endLine":886,"endColumn":36},{"ruleId":"1557","severity":1,"message":"2046","line":886,"column":38,"nodeType":"1562","messageId":"1563","endLine":886,"endColumn":47},{"ruleId":"1557","severity":1,"message":"1558","line":942,"column":21,"nodeType":"1567","messageId":"1560","endLine":942,"endColumn":33},{"ruleId":"1557","severity":1,"message":"2047","line":942,"column":22,"nodeType":"1562","messageId":"1563","endLine":942,"endColumn":29},{"ruleId":"1557","severity":1,"message":"1558","line":946,"column":18,"nodeType":"1567","messageId":"1560","endLine":946,"endColumn":28},{"ruleId":"1557","severity":1,"message":"1728","line":946,"column":19,"nodeType":"1562","messageId":"1563","endLine":946,"endColumn":24},{"ruleId":"1557","severity":1,"message":"1558","line":954,"column":12,"nodeType":"1567","messageId":"1560","endLine":954,"endColumn":17},{"ruleId":"1557","severity":1,"message":"1558","line":975,"column":17,"nodeType":"1567","messageId":"1560","endLine":975,"endColumn":22},{"ruleId":"1557","severity":1,"message":"1558","line":995,"column":20,"nodeType":"1567","messageId":"1560","endLine":995,"endColumn":36},{"ruleId":"1557","severity":1,"message":"2048","line":995,"column":21,"nodeType":"1562","messageId":"1563","endLine":995,"endColumn":32},{"ruleId":"1557","severity":1,"message":"1558","line":1,"column":8,"nodeType":"1559","messageId":"1560","endLine":1,"endColumn":43},{"ruleId":"1557","severity":1,"message":"2049","line":1,"column":35,"nodeType":"1562","messageId":"1563","endLine":1,"endColumn":42},{"ruleId":"1557","severity":1,"message":"1558","line":136,"column":18,"nodeType":"1567","messageId":"1560","endLine":136,"endColumn":23},{"ruleId":"1557","severity":1,"message":"1558","line":143,"column":20,"nodeType":"1567","messageId":"1560","endLine":143,"endColumn":25},{"ruleId":"1557","severity":1,"message":"1558","line":152,"column":17,"nodeType":"1567","messageId":"1560","endLine":152,"endColumn":22},{"ruleId":"1557","severity":1,"message":"1558","line":161,"column":13,"nodeType":"1567","messageId":"1560","endLine":161,"endColumn":26},{"ruleId":"1557","severity":1,"message":"2050","line":161,"column":14,"nodeType":"1562","messageId":"1563","endLine":161,"endColumn":22},{"ruleId":"2051","severity":2,"message":"2052","line":167,"column":5,"nodeType":"2053","messageId":"2054","endLine":172,"endColumn":6},{"ruleId":"1557","severity":1,"message":"1558","line":176,"column":20,"nodeType":"1567","messageId":"1560","endLine":176,"endColumn":25},{"ruleId":"1557","severity":1,"message":"1558","line":186,"column":23,"nodeType":"1567","messageId":"1560","endLine":186,"endColumn":51},{"ruleId":"1557","severity":1,"message":"1558","line":265,"column":27,"nodeType":"1567","messageId":"1560","endLine":265,"endColumn":32},{"ruleId":"1557","severity":1,"message":"1558","line":279,"column":34,"nodeType":"1567","messageId":"1560","endLine":279,"endColumn":54},{"ruleId":"1557","severity":1,"message":"1558","line":360,"column":30,"nodeType":"1567","messageId":"1560","endLine":360,"endColumn":50},{"ruleId":"1557","severity":1,"message":"1558","line":433,"column":3,"nodeType":"1568","messageId":"1560","endLine":433,"endColumn":33},{"ruleId":"1557","severity":1,"message":"1558","line":452,"column":26,"nodeType":"1567","messageId":"1560","endLine":452,"endColumn":46},{"ruleId":"1557","severity":1,"message":"1558","line":494,"column":3,"nodeType":"1568","messageId":"1560","endLine":494,"endColumn":31},{"ruleId":"1557","severity":1,"message":"1558","line":515,"column":3,"nodeType":"1568","messageId":"1560","endLine":515,"endColumn":28},{"ruleId":"1557","severity":1,"message":"1558","line":535,"column":31,"nodeType":"1567","messageId":"1560","endLine":535,"endColumn":51},{"ruleId":"1557","severity":1,"message":"1558","line":578,"column":30,"nodeType":"1567","messageId":"1560","endLine":578,"endColumn":50},{"ruleId":"1594","severity":2,"message":"1595","line":597,"column":5,"nodeType":"1596","messageId":"1597","endLine":597,"endColumn":44,"fix":"2055"},{"ruleId":"1557","severity":1,"message":"1558","line":708,"column":32,"nodeType":"1567","messageId":"1560","endLine":708,"endColumn":52},{"ruleId":"1557","severity":1,"message":"1558","line":763,"column":29,"nodeType":"1567","messageId":"1560","endLine":763,"endColumn":49},{"ruleId":"1557","severity":1,"message":"1558","line":794,"column":27,"nodeType":"1567","messageId":"1560","endLine":794,"endColumn":47},{"ruleId":"1557","severity":1,"message":"1558","line":839,"column":30,"nodeType":"1567","messageId":"1560","endLine":839,"endColumn":50},{"ruleId":"1594","severity":2,"message":"1595","line":858,"column":5,"nodeType":"1596","messageId":"1597","endLine":858,"endColumn":44,"fix":"2056"},{"ruleId":"1557","severity":1,"message":"1558","line":877,"column":29,"nodeType":"1567","messageId":"1560","endLine":877,"endColumn":49},{"ruleId":"1557","severity":1,"message":"1558","line":918,"column":31,"nodeType":"1567","messageId":"1560","endLine":918,"endColumn":51},{"ruleId":"1557","severity":1,"message":"1558","line":952,"column":31,"nodeType":"1567","messageId":"1560","endLine":952,"endColumn":51},{"ruleId":"1557","severity":1,"message":"1558","line":1009,"column":32,"nodeType":"1567","messageId":"1560","endLine":1009,"endColumn":52},{"ruleId":"1557","severity":1,"message":"1558","line":1029,"column":39,"nodeType":"1567","messageId":"1560","endLine":1029,"endColumn":59},{"ruleId":"1603","severity":2,"message":"2057","line":1038,"column":9,"nodeType":"1562","messageId":"1605","endLine":1038,"endColumn":16,"fix":"2058"},{"ruleId":"1603","severity":2,"message":"1827","line":86,"column":7,"nodeType":"1562","messageId":"1605","endLine":86,"endColumn":8,"fix":"2059"},{"ruleId":"1594","severity":2,"message":"1595","line":87,"column":3,"nodeType":"1596","messageId":"1597","endLine":87,"endColumn":26,"fix":"2060"},{"ruleId":"1603","severity":2,"message":"1745","line":90,"column":9,"nodeType":"1562","messageId":"1605","endLine":90,"endColumn":10,"fix":"2061"},{"ruleId":"1603","severity":2,"message":"2062","line":97,"column":9,"nodeType":"1562","messageId":"1605","endLine":97,"endColumn":17,"fix":"2063"},{"ruleId":"1603","severity":2,"message":"1745","line":105,"column":7,"nodeType":"1562","messageId":"1605","endLine":105,"endColumn":8,"fix":"2064"},{"ruleId":"1609","severity":2,"message":"2065","line":120,"column":21,"nodeType":"1562","messageId":"1611","endLine":120,"endColumn":27},{"ruleId":"1609","severity":2,"message":"2065","line":120,"column":30,"nodeType":"1562","messageId":"1611","endLine":120,"endColumn":36},{"ruleId":"1594","severity":2,"message":"1595","line":123,"column":3,"nodeType":"1596","messageId":"1597","endLine":123,"endColumn":32,"fix":"2066"},{"ruleId":"1594","severity":2,"message":"1595","line":125,"column":8,"nodeType":"1596","messageId":"1597","endLine":125,"endColumn":16,"fix":"2067"},{"ruleId":"2068","severity":2,"message":"2069","line":126,"column":13,"nodeType":"2070","messageId":"2071","endLine":126,"endColumn":27},{"ruleId":"1594","severity":2,"message":"1595","line":144,"column":3,"nodeType":"1596","messageId":"1597","endLine":144,"endColumn":19,"fix":"2072"},{"ruleId":"1603","severity":2,"message":"2073","line":145,"column":7,"nodeType":"1562","messageId":"1605","endLine":145,"endColumn":27,"fix":"2074"},{"ruleId":"1594","severity":2,"message":"1595","line":148,"column":3,"nodeType":"1596","messageId":"1597","endLine":148,"endColumn":54,"fix":"2075"},{"ruleId":"1594","severity":2,"message":"1595","line":149,"column":3,"nodeType":"1596","messageId":"1597","endLine":149,"endColumn":30,"fix":"2076"},{"ruleId":"1594","severity":2,"message":"1595","line":152,"column":3,"nodeType":"1596","messageId":"1597","endLine":152,"endColumn":36,"fix":"2077"},{"ruleId":"1594","severity":2,"message":"1595","line":155,"column":3,"nodeType":"1596","messageId":"1597","endLine":155,"endColumn":29,"fix":"2078"},{"ruleId":"1594","severity":2,"message":"1595","line":156,"column":3,"nodeType":"1596","messageId":"1597","endLine":156,"endColumn":33,"fix":"2079"},{"ruleId":"1594","severity":2,"message":"1595","line":157,"column":3,"nodeType":"1596","messageId":"1597","endLine":157,"endColumn":38,"fix":"2080"},{"ruleId":"1594","severity":2,"message":"1595","line":158,"column":3,"nodeType":"1596","messageId":"1597","endLine":158,"endColumn":38,"fix":"2081"},{"ruleId":"1594","severity":2,"message":"1595","line":175,"column":3,"nodeType":"1596","messageId":"1597","endLine":175,"endColumn":27,"fix":"2082"},{"ruleId":"1603","severity":2,"message":"2083","line":186,"column":7,"nodeType":"1562","messageId":"1605","endLine":186,"endColumn":9,"fix":"2084"},{"ruleId":"1603","severity":2,"message":"2085","line":187,"column":7,"nodeType":"1562","messageId":"1605","endLine":187,"endColumn":10,"fix":"2086"},{"ruleId":"1603","severity":2,"message":"2087","line":188,"column":7,"nodeType":"1562","messageId":"1605","endLine":188,"endColumn":10,"fix":"2088"},{"ruleId":"1594","severity":2,"message":"1595","line":197,"column":8,"nodeType":"1596","messageId":"1597","endLine":197,"endColumn":17,"fix":"2089"},{"ruleId":"1603","severity":2,"message":"2083","line":231,"column":9,"nodeType":"1562","messageId":"1605","endLine":231,"endColumn":11,"fix":"2090"},{"ruleId":"1603","severity":2,"message":"2085","line":232,"column":9,"nodeType":"1562","messageId":"1605","endLine":232,"endColumn":12,"fix":"2091"},{"ruleId":"1603","severity":2,"message":"2087","line":233,"column":9,"nodeType":"1562","messageId":"1605","endLine":233,"endColumn":12,"fix":"2092"},{"ruleId":"1594","severity":2,"message":"1595","line":289,"column":5,"nodeType":"1596","messageId":"1597","endLine":289,"endColumn":39,"fix":"2093"},{"ruleId":"1764","severity":2,"message":"1765","line":18,"column":2,"nodeType":"1766","messageId":"1687","endLine":18,"endColumn":3,"fix":"2094"},{"ruleId":"1710","severity":2,"message":"1711","line":30,"column":3,"nodeType":"1738","messageId":"1713","endLine":30,"endColumn":26,"fix":"2095"},{"ruleId":"1710","severity":2,"message":"1711","line":31,"column":3,"nodeType":"1738","messageId":"1713","endLine":31,"endColumn":26,"fix":"2096"},{"ruleId":"1710","severity":2,"message":"1711","line":32,"column":3,"nodeType":"1738","messageId":"1713","endLine":32,"endColumn":25,"fix":"2097"},{"ruleId":"1603","severity":2,"message":"2098","line":64,"column":9,"nodeType":"1562","messageId":"1605","endLine":64,"endColumn":17,"fix":"2099"},{"ruleId":"1557","severity":1,"message":"1558","line":88,"column":3,"nodeType":"1568","messageId":"1560","endLine":88,"endColumn":22},{"ruleId":"1557","severity":1,"message":"1558","line":93,"column":3,"nodeType":"1568","messageId":"1560","endLine":93,"endColumn":10},{"ruleId":"1603","severity":2,"message":"1661","line":17,"column":5,"nodeType":"1562","messageId":"1605","endLine":17,"endColumn":6,"fix":"2100"},{"ruleId":"1557","severity":1,"message":"1558","line":109,"column":22,"nodeType":"1567","messageId":"1560","endLine":109,"endColumn":37},{"ruleId":"1557","severity":1,"message":"2101","line":109,"column":23,"nodeType":"1562","messageId":"1613","endLine":109,"endColumn":33},{"ruleId":"1614","severity":1,"message":"1615","line":109,"column":30,"nodeType":"1616","messageId":"1617","endLine":109,"endColumn":33,"suggestions":"2102"},{"ruleId":"1557","severity":1,"message":"1558","line":121,"column":17,"nodeType":"1567","messageId":"1560","endLine":121,"endColumn":32},{"ruleId":"1557","severity":1,"message":"2101","line":121,"column":18,"nodeType":"1562","messageId":"1613","endLine":121,"endColumn":28},{"ruleId":"1614","severity":1,"message":"1615","line":121,"column":25,"nodeType":"1616","messageId":"1617","endLine":121,"endColumn":28,"suggestions":"2103"},{"ruleId":"1603","severity":2,"message":"2104","line":125,"column":9,"nodeType":"1562","messageId":"1605","endLine":125,"endColumn":17,"fix":"2105"},{"ruleId":"1603","severity":2,"message":"2106","line":148,"column":11,"nodeType":"1562","messageId":"1605","endLine":148,"endColumn":19,"fix":"2107"},{"ruleId":"1557","severity":1,"message":"1558","line":164,"column":21,"nodeType":"1567","messageId":"1560","endLine":164,"endColumn":31},{"ruleId":"1557","severity":1,"message":"1728","line":164,"column":22,"nodeType":"1562","messageId":"1563","endLine":164,"endColumn":27},{"ruleId":"1603","severity":2,"message":"2104","line":165,"column":9,"nodeType":"1562","messageId":"1605","endLine":165,"endColumn":17,"fix":"2108"},{"ruleId":"1603","severity":2,"message":"2109","line":171,"column":9,"nodeType":"1562","messageId":"1605","endLine":171,"endColumn":13,"fix":"2110"},{"ruleId":"1557","severity":1,"message":"1558","line":183,"column":20,"nodeType":"1567","messageId":"1560","endLine":183,"endColumn":34},{"ruleId":"1557","severity":1,"message":"2101","line":183,"column":21,"nodeType":"1562","messageId":"1613","endLine":183,"endColumn":30},{"ruleId":"1614","severity":1,"message":"1615","line":183,"column":27,"nodeType":"1616","messageId":"1617","endLine":183,"endColumn":30,"suggestions":"2111"},{"ruleId":"1603","severity":2,"message":"1889","line":189,"column":9,"nodeType":"1562","messageId":"1605","endLine":189,"endColumn":16,"fix":"2112"},{"ruleId":"1603","severity":2,"message":"2113","line":190,"column":9,"nodeType":"1562","messageId":"1605","endLine":190,"endColumn":22,"fix":"2114"},{"ruleId":"2115","severity":2,"message":"2116","line":195,"column":10,"nodeType":"2117","messageId":"1687","endLine":196,"endColumn":6},{"ruleId":"1594","severity":2,"message":"1595","line":198,"column":5,"nodeType":"1596","messageId":"1597","endLine":198,"endColumn":36,"fix":"2118"},{"ruleId":"1557","severity":1,"message":"1558","line":220,"column":3,"nodeType":"1568","messageId":"1560","endLine":220,"endColumn":54},{"ruleId":"1557","severity":1,"message":"2119","line":220,"column":15,"nodeType":"1562","messageId":"1563","endLine":220,"endColumn":21},{"ruleId":"1557","severity":1,"message":"2120","line":220,"column":23,"nodeType":"1562","messageId":"1563","endLine":220,"endColumn":29},{"ruleId":"1557","severity":1,"message":"2121","line":220,"column":31,"nodeType":"1562","messageId":"1563","endLine":220,"endColumn":37},{"ruleId":"1557","severity":1,"message":"2122","line":220,"column":39,"nodeType":"1562","messageId":"1563","endLine":220,"endColumn":45},{"ruleId":"1557","severity":1,"message":"2123","line":220,"column":47,"nodeType":"1562","messageId":"1563","endLine":220,"endColumn":53},{"ruleId":"1594","severity":2,"message":"1595","line":221,"column":5,"nodeType":"1596","messageId":"1597","endLine":221,"endColumn":81,"fix":"2124"},{"ruleId":"1594","severity":2,"message":"1595","line":222,"column":5,"nodeType":"1596","messageId":"1597","endLine":222,"endColumn":48,"fix":"2125"},{"ruleId":"1564","severity":1,"message":"2126","line":225,"column":9,"nodeType":"1562","messageId":"1566","endLine":225,"endColumn":14},{"ruleId":"1603","severity":2,"message":"2127","line":225,"column":9,"nodeType":"1562","messageId":"1605","endLine":225,"endColumn":14,"fix":"2128"},{"ruleId":"1594","severity":2,"message":"1595","line":227,"column":10,"nodeType":"1596","messageId":"1597","endLine":227,"endColumn":19,"fix":"2129"},{"ruleId":"1594","severity":2,"message":"1595","line":228,"column":7,"nodeType":"1596","messageId":"1597","endLine":228,"endColumn":41},{"ruleId":"1557","severity":1,"message":"1558","line":243,"column":20,"nodeType":"1567","messageId":"1560","endLine":243,"endColumn":26},{"ruleId":"1557","severity":1,"message":"1719","line":243,"column":21,"nodeType":"1562","messageId":"1563","endLine":243,"endColumn":22},{"ruleId":"1594","severity":2,"message":"1595","line":244,"column":10,"nodeType":"1596","messageId":"1597","endLine":244,"endColumn":17,"fix":"2130"},{"ruleId":"1557","severity":1,"message":"1558","line":252,"column":20,"nodeType":"1567","messageId":"1560","endLine":252,"endColumn":26},{"ruleId":"1557","severity":1,"message":"1719","line":252,"column":21,"nodeType":"1562","messageId":"1563","endLine":252,"endColumn":22},{"ruleId":"1603","severity":2,"message":"1889","line":254,"column":9,"nodeType":"1562","messageId":"1605","endLine":254,"endColumn":16,"fix":"2131"},{"ruleId":"1603","severity":2,"message":"2132","line":255,"column":9,"nodeType":"1562","messageId":"1605","endLine":255,"endColumn":20,"fix":"2133"},{"ruleId":"1594","severity":2,"message":"1595","line":258,"column":12,"nodeType":"1596","messageId":"1597","endLine":258,"endColumn":19},{"ruleId":"2115","severity":2,"message":"2116","line":262,"column":10,"nodeType":"2117","messageId":"1687","endLine":263,"endColumn":6},{"ruleId":"1594","severity":2,"message":"1595","line":268,"column":5,"nodeType":"1596","messageId":"1597","endLine":268,"endColumn":19},{"ruleId":"1594","severity":2,"message":"1595","line":281,"column":5,"nodeType":"1596","messageId":"1597","endLine":281,"endColumn":81,"fix":"2134"},{"ruleId":"1594","severity":2,"message":"1595","line":296,"column":5,"nodeType":"1596","messageId":"1597","endLine":296,"endColumn":21,"fix":"2135"},{"ruleId":"1594","severity":2,"message":"1595","line":297,"column":5,"nodeType":"1596","messageId":"1597","endLine":297,"endColumn":21,"fix":"2136"},{"ruleId":"1675","severity":2,"message":"1676","line":297,"column":9,"nodeType":"1562","messageId":"1677","endLine":297,"endColumn":13},{"ruleId":"1557","severity":1,"message":"1558","line":330,"column":16,"nodeType":"1567","messageId":"1560","endLine":330,"endColumn":104},{"ruleId":"1603","severity":2,"message":"2137","line":332,"column":9,"nodeType":"1562","messageId":"1605","endLine":332,"endColumn":17,"fix":"2138"},{"ruleId":"1603","severity":2,"message":"1753","line":342,"column":9,"nodeType":"1562","messageId":"1605","endLine":342,"endColumn":13,"fix":"2139"},{"ruleId":"1603","severity":2,"message":"2140","line":351,"column":9,"nodeType":"1562","messageId":"1605","endLine":351,"endColumn":16,"fix":"2141"},{"ruleId":"1603","severity":2,"message":"1970","line":362,"column":9,"nodeType":"1562","messageId":"1605","endLine":362,"endColumn":17,"fix":"2142"},{"ruleId":"1603","severity":2,"message":"1891","line":363,"column":9,"nodeType":"1562","messageId":"1605","endLine":363,"endColumn":16,"fix":"2143"},{"ruleId":"1603","severity":2,"message":"2144","line":403,"column":9,"nodeType":"1562","messageId":"1605","endLine":403,"endColumn":13,"fix":"2145"},{"ruleId":"1557","severity":1,"message":"1558","line":428,"column":25,"nodeType":"1567","messageId":"1560","endLine":428,"endColumn":30},{"ruleId":"1557","severity":1,"message":"1558","line":436,"column":20,"nodeType":"1567","messageId":"1560","endLine":436,"endColumn":25},{"ruleId":"1557","severity":1,"message":"1558","line":448,"column":27,"nodeType":"1567","messageId":"1560","endLine":448,"endColumn":32},{"ruleId":"1603","severity":2,"message":"1889","line":450,"column":11,"nodeType":"1562","messageId":"1605","endLine":450,"endColumn":18,"fix":"2146"},{"ruleId":"1603","severity":2,"message":"1891","line":451,"column":11,"nodeType":"1562","messageId":"1605","endLine":451,"endColumn":18,"fix":"2147"},{"ruleId":"1557","severity":1,"message":"1558","line":459,"column":27,"nodeType":"1567","messageId":"1560","endLine":459,"endColumn":32},{"ruleId":"1557","severity":1,"message":"1558","line":470,"column":20,"nodeType":"1567","messageId":"1560","endLine":470,"endColumn":32},{"ruleId":"1557","severity":1,"message":"2042","line":470,"column":21,"nodeType":"1562","messageId":"1563","endLine":470,"endColumn":28},{"ruleId":"1603","severity":2,"message":"2109","line":475,"column":13,"nodeType":"1562","messageId":"1605","endLine":475,"endColumn":17,"fix":"2148"},{"ruleId":"1557","severity":1,"message":"1558","line":482,"column":29,"nodeType":"1567","messageId":"1560","endLine":482,"endColumn":51},{"ruleId":"1603","severity":2,"message":"2149","line":485,"column":9,"nodeType":"1562","messageId":"1605","endLine":485,"endColumn":19,"fix":"2150"},{"ruleId":"1603","severity":2,"message":"2151","line":487,"column":11,"nodeType":"1562","messageId":"1605","endLine":487,"endColumn":13,"fix":"2152"},{"ruleId":"1594","severity":2,"message":"1595","line":491,"column":5,"nodeType":"1596","messageId":"1597","endLine":491,"endColumn":25,"fix":"2153"},{"ruleId":"1603","severity":2,"message":"2154","line":514,"column":9,"nodeType":"1562","messageId":"1605","endLine":514,"endColumn":24,"fix":"2155"},{"ruleId":"1603","severity":2,"message":"2104","line":515,"column":9,"nodeType":"1562","messageId":"1605","endLine":515,"endColumn":17,"fix":"2156"},{"ruleId":"1603","severity":2,"message":"2109","line":516,"column":9,"nodeType":"1562","messageId":"1605","endLine":516,"endColumn":13,"fix":"2157"},{"ruleId":"1557","severity":1,"message":"1558","line":5,"column":24,"nodeType":"1567","messageId":"1560","endLine":5,"endColumn":63},{"ruleId":"1557","severity":1,"message":"1558","line":35,"column":19,"nodeType":"1567","messageId":"1560","endLine":35,"endColumn":58},{"ruleId":"1557","severity":1,"message":"1558","line":62,"column":29,"nodeType":"1567","messageId":"1560","endLine":62,"endColumn":89},{"ruleId":"2158","severity":2,"message":"2159","line":1,"column":1,"nodeType":"2160","messageId":"2161","endLine":1,"endColumn":37},{"ruleId":"1594","severity":2,"message":"1595","line":12,"column":1,"nodeType":"1596","messageId":"1597","endLine":12,"endColumn":36,"fix":"2162"},{"ruleId":"1594","severity":2,"message":"1595","line":13,"column":1,"nodeType":"1596","messageId":"1597","endLine":13,"endColumn":24,"fix":"2163"},{"ruleId":"1609","severity":2,"message":"1610","line":19,"column":20,"nodeType":"1562","messageId":"1611","endLine":19,"endColumn":28},{"ruleId":"1557","severity":1,"message":"1558","line":46,"column":3,"nodeType":"1568","messageId":"1560","endLine":46,"endColumn":22},{"ruleId":"1557","severity":1,"message":"1558","line":50,"column":18,"nodeType":"1567","messageId":"1560","endLine":50,"endColumn":34},{"ruleId":"1603","severity":2,"message":"2164","line":53,"column":9,"nodeType":"1562","messageId":"1605","endLine":53,"endColumn":20,"fix":"2165"},{"ruleId":"1675","severity":2,"message":"1676","line":60,"column":9,"nodeType":"1562","messageId":"1677","endLine":60,"endColumn":13},{"ruleId":"1603","severity":2,"message":"2166","line":60,"column":9,"nodeType":"1562","messageId":"1605","endLine":60,"endColumn":13,"fix":"2167"},{"ruleId":"1557","severity":1,"message":"1558","line":74,"column":3,"nodeType":"1568","messageId":"1560","endLine":74,"endColumn":60},{"ruleId":"1564","severity":1,"message":"1658","line":74,"column":43,"nodeType":"1562","messageId":"1566","endLine":74,"endColumn":59},{"ruleId":"1557","severity":1,"message":"1558","line":82,"column":3,"nodeType":"1568","messageId":"1560","endLine":82,"endColumn":25},{"ruleId":"1557","severity":1,"message":"1558","line":90,"column":3,"nodeType":"1568","messageId":"1560","endLine":90,"endColumn":11},{"ruleId":"1609","severity":2,"message":"1610","line":15,"column":24,"nodeType":"1562","messageId":"1611","endLine":15,"endColumn":32},{"ruleId":"1609","severity":2,"message":"1610","line":23,"column":18,"nodeType":"1562","messageId":"1611","endLine":23,"endColumn":26},{"ruleId":"1609","severity":2,"message":"1610","line":41,"column":17,"nodeType":"1562","messageId":"1611","endLine":41,"endColumn":25},{"ruleId":"1710","severity":2,"message":"1878","line":43,"column":3,"nodeType":"1738","messageId":"1713","endLine":43,"endColumn":22,"fix":"2168"},{"ruleId":"1557","severity":1,"message":"1558","line":71,"column":22,"nodeType":"1567","messageId":"1560","endLine":71,"endColumn":27},{"ruleId":"1557","severity":1,"message":"1558","line":77,"column":23,"nodeType":"1567","messageId":"1560","endLine":77,"endColumn":28},{"ruleId":"1614","severity":1,"message":"1615","line":79,"column":34,"nodeType":"1616","messageId":"1617","endLine":79,"endColumn":37,"suggestions":"2169"},{"ruleId":"1557","severity":1,"message":"1558","line":91,"column":30,"nodeType":"1567","messageId":"1560","endLine":91,"endColumn":35},{"ruleId":"1614","severity":1,"message":"1615","line":96,"column":34,"nodeType":"1616","messageId":"1617","endLine":96,"endColumn":37,"suggestions":"2170"},{"ruleId":"1557","severity":1,"message":"1558","line":99,"column":3,"nodeType":"1568","messageId":"1560","endLine":99,"endColumn":60},{"ruleId":"1557","severity":1,"message":"1558","line":122,"column":27,"nodeType":"1567","messageId":"1560","endLine":122,"endColumn":101},{"ruleId":"1557","severity":1,"message":"1558","line":162,"column":21,"nodeType":"1567","messageId":"1560","endLine":162,"endColumn":44},{"ruleId":"1557","severity":1,"message":"1558","line":166,"column":18,"nodeType":"1567","messageId":"1560","endLine":166,"endColumn":40},{"ruleId":"1557","severity":1,"message":"1558","line":171,"column":25,"nodeType":"1567","messageId":"1560","endLine":171,"endColumn":30},{"ruleId":"1557","severity":1,"message":"1558","line":175,"column":25,"nodeType":"1567","messageId":"1560","endLine":175,"endColumn":30},{"ruleId":"1557","severity":1,"message":"1558","line":188,"column":29,"nodeType":"1567","messageId":"1560","endLine":188,"endColumn":68},{"ruleId":"1564","severity":1,"message":"2171","line":188,"column":30,"nodeType":"1562","messageId":"1566","endLine":188,"endColumn":46},{"ruleId":"1564","severity":1,"message":"2172","line":188,"column":48,"nodeType":"1562","messageId":"1566","endLine":188,"endColumn":64},{"ruleId":"1557","severity":1,"message":"1558","line":195,"column":27,"nodeType":"1567","messageId":"1560","endLine":195,"endColumn":32},{"ruleId":"1557","severity":1,"message":"1558","line":203,"column":3,"nodeType":"1568","messageId":"1560","endLine":203,"endColumn":57},{"ruleId":"1564","severity":1,"message":"2171","line":203,"column":22,"nodeType":"1562","messageId":"1566","endLine":203,"endColumn":38},{"ruleId":"1564","severity":1,"message":"2172","line":203,"column":40,"nodeType":"1562","messageId":"1566","endLine":203,"endColumn":56},{"ruleId":"1557","severity":1,"message":"1558","line":220,"column":33,"nodeType":"1567","messageId":"1560","endLine":220,"endColumn":38},{"ruleId":"1557","severity":1,"message":"1558","line":231,"column":3,"nodeType":"1568","messageId":"1560","endLine":231,"endColumn":11},{"ruleId":"1614","severity":1,"message":"1615","line":13,"column":9,"nodeType":"1616","messageId":"1617","endLine":13,"endColumn":12,"suggestions":"2173"},{"ruleId":"1614","severity":1,"message":"1615","line":14,"column":9,"nodeType":"1616","messageId":"1617","endLine":14,"endColumn":12,"suggestions":"2174"},{"ruleId":"1564","severity":1,"message":"2175","line":57,"column":16,"nodeType":"1562","messageId":"1566","endLine":57,"endColumn":32},{"ruleId":"1557","severity":1,"message":"1558","line":74,"column":8,"nodeType":"1559","messageId":"1560","endLine":74,"endColumn":29},{"ruleId":"1557","severity":1,"message":"1719","line":74,"column":27,"nodeType":"1562","messageId":"1563","endLine":74,"endColumn":28},{"ruleId":"1564","severity":1,"message":"2007","line":86,"column":26,"nodeType":"1562","messageId":"1566","endLine":86,"endColumn":27},{"ruleId":"1557","severity":1,"message":"1558","line":105,"column":8,"nodeType":"1559","messageId":"1560","endLine":105,"endColumn":33},{"ruleId":"1557","severity":1,"message":"1719","line":105,"column":31,"nodeType":"1562","messageId":"1563","endLine":105,"endColumn":32},{"ruleId":"1564","severity":1,"message":"2007","line":105,"column":31,"nodeType":"1562","messageId":"1566","endLine":105,"endColumn":32},{"ruleId":"1564","severity":1,"message":"1648","line":1,"column":17,"nodeType":"1562","messageId":"1566","endLine":1,"endColumn":25},{"ruleId":"1614","severity":1,"message":"1615","line":46,"column":16,"nodeType":"1616","messageId":"1617","endLine":46,"endColumn":19,"suggestions":"2176"},{"ruleId":"1564","severity":1,"message":"2177","line":90,"column":6,"nodeType":"1562","messageId":"1566","endLine":90,"endColumn":18},{"ruleId":"1557","severity":1,"message":"1558","line":92,"column":16,"nodeType":"1559","messageId":"1560","endLine":92,"endColumn":56},{"ruleId":"1564","severity":1,"message":"2178","line":93,"column":30,"nodeType":"1562","messageId":"1566","endLine":93,"endColumn":36},{"ruleId":"1564","severity":1,"message":"2179","line":97,"column":9,"nodeType":"1562","messageId":"1566","endLine":97,"endColumn":19},{"ruleId":"1564","severity":1,"message":"2007","line":97,"column":23,"nodeType":"1562","messageId":"1566","endLine":97,"endColumn":24},{"ruleId":"1685","severity":2,"message":"2180","line":97,"column":29,"nodeType":"1567","messageId":"1687","endLine":98,"endColumn":4},{"ruleId":"1564","severity":1,"message":"2181","line":100,"column":9,"nodeType":"1562","messageId":"1566","endLine":100,"endColumn":17},{"ruleId":"1603","severity":2,"message":"2182","line":21,"column":7,"nodeType":"1562","messageId":"1605","endLine":21,"endColumn":14,"fix":"2183"},{"ruleId":"1764","severity":2,"message":"1765","line":58,"column":2,"nodeType":"1766","messageId":"1687","endLine":58,"endColumn":3,"fix":"2184"},{"ruleId":"1603","severity":2,"message":"1787","line":150,"column":11,"nodeType":"1562","messageId":"1605","endLine":150,"endColumn":17,"fix":"2185"},{"ruleId":"1603","severity":2,"message":"1787","line":155,"column":13,"nodeType":"1562","messageId":"1605","endLine":155,"endColumn":19,"fix":"2186"},{"ruleId":"1609","severity":2,"message":"1610","line":169,"column":70,"nodeType":"1562","messageId":"1611","endLine":169,"endColumn":78},{"ruleId":"1603","severity":2,"message":"2187","line":185,"column":11,"nodeType":"1562","messageId":"1605","endLine":185,"endColumn":21,"fix":"2188"},{"ruleId":"1603","severity":2,"message":"2189","line":195,"column":13,"nodeType":"1562","messageId":"1605","endLine":195,"endColumn":24,"fix":"2190"},{"ruleId":"1603","severity":2,"message":"2191","line":195,"column":26,"nodeType":"1562","messageId":"1605","endLine":195,"endColumn":40,"fix":"2192"},{"ruleId":"1603","severity":2,"message":"2187","line":212,"column":11,"nodeType":"1562","messageId":"1605","endLine":212,"endColumn":21,"fix":"2193"},{"ruleId":"1557","severity":1,"message":"1558","line":227,"column":16,"nodeType":"1567","messageId":"1560","endLine":227,"endColumn":21},{"ruleId":"1675","severity":2,"message":"1676","line":230,"column":9,"nodeType":"1562","messageId":"1677","endLine":230,"endColumn":13},{"ruleId":"1603","severity":2,"message":"2166","line":230,"column":9,"nodeType":"1562","messageId":"1605","endLine":230,"endColumn":13,"fix":"2194"},{"ruleId":"1557","severity":1,"message":"1558","line":243,"column":21,"nodeType":"1567","messageId":"1560","endLine":243,"endColumn":26},{"ruleId":"1557","severity":1,"message":"1558","line":250,"column":26,"nodeType":"1567","messageId":"1560","endLine":250,"endColumn":31},{"ruleId":"1603","severity":2,"message":"2195","line":261,"column":9,"nodeType":"1562","messageId":"1605","endLine":261,"endColumn":16,"fix":"2196"},{"ruleId":"2051","severity":2,"message":"2052","line":271,"column":5,"nodeType":"2053","messageId":"2054","endLine":276,"endColumn":6},{"ruleId":"1557","severity":1,"message":"1558","line":288,"column":25,"nodeType":"1567","messageId":"1560","endLine":288,"endColumn":40},{"ruleId":"1557","severity":1,"message":"2101","line":288,"column":26,"nodeType":"1562","messageId":"1613","endLine":288,"endColumn":36},{"ruleId":"1614","severity":1,"message":"1615","line":288,"column":33,"nodeType":"1616","messageId":"1617","endLine":288,"endColumn":36,"suggestions":"2197"},{"ruleId":"1675","severity":2,"message":"1676","line":290,"column":9,"nodeType":"1562","messageId":"1677","endLine":290,"endColumn":13},{"ruleId":"1603","severity":2,"message":"2166","line":290,"column":9,"nodeType":"1562","messageId":"1605","endLine":290,"endColumn":13,"fix":"2198"},{"ruleId":"1557","severity":1,"message":"1558","line":343,"column":3,"nodeType":"1568","messageId":"1560","endLine":343,"endColumn":26},{"ruleId":"1557","severity":1,"message":"1558","line":347,"column":3,"nodeType":"1568","messageId":"1560","endLine":347,"endColumn":19},{"ruleId":"1557","severity":1,"message":"1558","line":350,"column":3,"nodeType":"1568","messageId":"1560","endLine":350,"endColumn":25},{"ruleId":"1557","severity":1,"message":"2199","line":350,"column":21,"nodeType":"1562","messageId":"1563","endLine":350,"endColumn":24},{"ruleId":"1564","severity":1,"message":"2200","line":350,"column":21,"nodeType":"1562","messageId":"1566","endLine":350,"endColumn":24},{"ruleId":"1764","severity":2,"message":"1765","line":10,"column":2,"nodeType":"1766","messageId":"1687","endLine":10,"endColumn":3,"fix":"2201"},{"ruleId":"1764","severity":2,"message":"1765","line":24,"column":2,"nodeType":"1766","messageId":"1687","endLine":24,"endColumn":3,"fix":"2202"},{"ruleId":"1557","severity":1,"message":"1558","line":56,"column":8,"nodeType":"1559","messageId":"1560","endLine":56,"endColumn":59},{"ruleId":"1594","severity":2,"message":"1595","line":34,"column":3,"nodeType":"1596","messageId":"1597","endLine":34,"endColumn":22,"fix":"2203"},{"ruleId":"1594","severity":2,"message":"1595","line":42,"column":3,"nodeType":"1596","messageId":"1597","endLine":42,"endColumn":35,"fix":"2204"},{"ruleId":"1603","severity":2,"message":"2205","line":58,"column":7,"nodeType":"1562","messageId":"1605","endLine":58,"endColumn":16,"fix":"2206"},{"ruleId":"1594","severity":2,"message":"1595","line":13,"column":1,"nodeType":"1596","messageId":"1597","endLine":13,"endColumn":27,"fix":"2207"},{"ruleId":"1594","severity":2,"message":"1595","line":14,"column":1,"nodeType":"1596","messageId":"1597","endLine":14,"endColumn":24,"fix":"2208"},{"ruleId":"1557","severity":1,"message":"1558","line":57,"column":10,"nodeType":"1567","messageId":"1560","endLine":57,"endColumn":49},{"ruleId":"1557","severity":1,"message":"1558","line":85,"column":13,"nodeType":"1567","messageId":"1560","endLine":85,"endColumn":18},{"ruleId":"1557","severity":1,"message":"1558","line":90,"column":14,"nodeType":"1567","messageId":"1560","endLine":90,"endColumn":53},{"ruleId":"1557","severity":1,"message":"1558","line":108,"column":3,"nodeType":"1568","messageId":"1560","endLine":108,"endColumn":17},{"ruleId":"1557","severity":1,"message":"1558","line":112,"column":3,"nodeType":"1568","messageId":"1560","endLine":112,"endColumn":12},{"ruleId":"1557","severity":1,"message":"1558","line":116,"column":3,"nodeType":"1568","messageId":"1560","endLine":116,"endColumn":20},{"ruleId":"1557","severity":1,"message":"1558","line":120,"column":18,"nodeType":"1567","messageId":"1560","endLine":120,"endColumn":43},{"ruleId":"1557","severity":1,"message":"1558","line":126,"column":13,"nodeType":"1567","messageId":"1560","endLine":126,"endColumn":32},{"ruleId":"1557","severity":1,"message":"1558","line":134,"column":17,"nodeType":"1567","messageId":"1560","endLine":134,"endColumn":28},{"ruleId":"1557","severity":1,"message":"1558","line":174,"column":25,"nodeType":"1567","messageId":"1560","endLine":174,"endColumn":121},{"ruleId":"1564","severity":1,"message":"2209","line":187,"column":13,"nodeType":"1562","messageId":"1566","endLine":187,"endColumn":19},{"ruleId":"1564","severity":1,"message":"2210","line":188,"column":13,"nodeType":"1562","messageId":"1566","endLine":188,"endColumn":19},{"ruleId":"1564","severity":1,"message":"2211","line":235,"column":13,"nodeType":"1562","messageId":"1566","endLine":235,"endColumn":15},{"ruleId":"1557","severity":1,"message":"1558","line":240,"column":19,"nodeType":"1567","messageId":"1560","endLine":240,"endColumn":45},{"ruleId":"1557","severity":1,"message":"1558","line":244,"column":3,"nodeType":"1568","messageId":"1560","endLine":244,"endColumn":11},{"ruleId":"1557","severity":1,"message":"1558","line":248,"column":21,"nodeType":"1567","messageId":"1560","endLine":248,"endColumn":35},{"ruleId":"1557","severity":1,"message":"1999","line":248,"column":28,"nodeType":"1562","messageId":"1563","endLine":248,"endColumn":31},{"ruleId":"1603","severity":2,"message":"2212","line":13,"column":7,"nodeType":"1562","messageId":"1605","endLine":13,"endColumn":16,"fix":"2213"},{"ruleId":"1603","severity":2,"message":"2214","line":30,"column":7,"nodeType":"1562","messageId":"1605","endLine":30,"endColumn":8,"fix":"2215"},{"ruleId":"1603","severity":2,"message":"2216","line":145,"column":21,"nodeType":"1562","messageId":"1605","endLine":145,"endColumn":29},{"ruleId":"1557","severity":1,"message":"1558","line":1,"column":8,"nodeType":"1559","messageId":"1560","endLine":1,"endColumn":79},{"ruleId":"1609","severity":2,"message":"2065","line":1,"column":37,"nodeType":"1562","messageId":"1611","endLine":1,"endColumn":43},{"ruleId":"1609","severity":2,"message":"2065","line":1,"column":51,"nodeType":"1562","messageId":"1611","endLine":1,"endColumn":57},{"ruleId":"1710","severity":2,"message":"1878","line":1,"column":59,"nodeType":"2217","messageId":"1713","endLine":1,"endColumn":78,"fix":"2218"},{"ruleId":"1603","severity":2,"message":"1809","line":14,"column":9,"nodeType":"1562","messageId":"1605","endLine":14,"endColumn":10},{"ruleId":"1603","severity":2,"message":"1852","line":14,"column":37,"nodeType":"1562","messageId":"1605","endLine":14,"endColumn":38,"fix":"2219"},{"ruleId":"2158","severity":2,"message":"2159","line":1,"column":1,"nodeType":"2160","messageId":"2161","endLine":1,"endColumn":37},{"ruleId":"2158","severity":2,"message":"2159","line":1,"column":1,"nodeType":"2160","messageId":"2161","endLine":1,"endColumn":37},{"ruleId":"1710","severity":2,"message":"1873","line":42,"column":3,"nodeType":"1738","messageId":"1713","endLine":42,"endColumn":32,"fix":"2220"},{"ruleId":"1710","severity":2,"message":"1873","line":43,"column":3,"nodeType":"1738","messageId":"1713","endLine":43,"endColumn":37,"fix":"2221"},{"ruleId":"1557","severity":1,"message":"1558","line":45,"column":3,"nodeType":"1568","messageId":"1560","endLine":45,"endColumn":86},{"ruleId":"1557","severity":1,"message":"1558","line":85,"column":3,"nodeType":"1568","messageId":"1560","endLine":85,"endColumn":68},{"ruleId":"1564","severity":1,"message":"2222","line":86,"column":11,"nodeType":"1562","messageId":"1566","endLine":86,"endColumn":14},{"ruleId":"1564","severity":1,"message":"2223","line":88,"column":11,"nodeType":"1562","messageId":"1566","endLine":88,"endColumn":23},{"ruleId":"1557","severity":1,"message":"1558","line":105,"column":3,"nodeType":"1568","messageId":"1560","endLine":105,"endColumn":43},{"ruleId":"1564","severity":1,"message":"1655","line":105,"column":22,"nodeType":"1562","messageId":"1566","endLine":105,"endColumn":42},{"ruleId":"1557","severity":1,"message":"1558","line":109,"column":3,"nodeType":"1568","messageId":"1560","endLine":109,"endColumn":22},{"ruleId":"1557","severity":1,"message":"1558","line":114,"column":18,"nodeType":"1567","messageId":"1560","endLine":114,"endColumn":48},{"ruleId":"1557","severity":1,"message":"1558","line":121,"column":13,"nodeType":"1567","messageId":"1560","endLine":121,"endColumn":45},{"ruleId":"1557","severity":1,"message":"1558","line":134,"column":16,"nodeType":"1567","messageId":"1560","endLine":134,"endColumn":59},{"ruleId":"1564","severity":1,"message":"2224","line":134,"column":43,"nodeType":"1562","messageId":"1566","endLine":134,"endColumn":55},{"ruleId":"1557","severity":1,"message":"1558","line":147,"column":15,"nodeType":"1567","messageId":"1560","endLine":147,"endColumn":47},{"ruleId":"1603","severity":2,"message":"2225","line":161,"column":9,"nodeType":"1562","messageId":"1605","endLine":161,"endColumn":12,"fix":"2226"},{"ruleId":"1594","severity":2,"message":"1595","line":162,"column":5,"nodeType":"1596","messageId":"1597","endLine":162,"endColumn":51,"fix":"2227"},{"ruleId":"1614","severity":1,"message":"1615","line":171,"column":19,"nodeType":"1616","messageId":"1617","endLine":171,"endColumn":22,"suggestions":"2228"},{"ruleId":"1603","severity":2,"message":"1977","line":172,"column":11,"nodeType":"1562","messageId":"1605","endLine":172,"endColumn":16,"fix":"2229"},{"ruleId":"1603","severity":2,"message":"1979","line":172,"column":18,"nodeType":"1562","messageId":"1605","endLine":172,"endColumn":24,"fix":"2230"},{"ruleId":"1603","severity":2,"message":"1859","line":174,"column":9,"nodeType":"1562","messageId":"1605","endLine":174,"endColumn":13,"fix":"2231"},{"ruleId":"1603","severity":2,"message":"2232","line":180,"column":9,"nodeType":"1562","messageId":"1605","endLine":180,"endColumn":12,"fix":"2233"},{"ruleId":"1603","severity":2,"message":"2234","line":191,"column":9,"nodeType":"1562","messageId":"1605","endLine":191,"endColumn":19,"fix":"2235"},{"ruleId":"1675","severity":2,"message":"1676","line":197,"column":9,"nodeType":"1562","messageId":"1677","endLine":197,"endColumn":13},{"ruleId":"1603","severity":2,"message":"2166","line":197,"column":9,"nodeType":"1562","messageId":"1605","endLine":197,"endColumn":13,"fix":"2236"},{"ruleId":"1614","severity":1,"message":"1615","line":201,"column":24,"nodeType":"1616","messageId":"1617","endLine":201,"endColumn":27,"suggestions":"2237"},{"ruleId":"1557","severity":1,"message":"1558","line":222,"column":17,"nodeType":"1567","messageId":"1560","endLine":222,"endColumn":46},{"ruleId":"1614","severity":1,"message":"1615","line":231,"column":19,"nodeType":"1616","messageId":"1617","endLine":231,"endColumn":22,"suggestions":"2238"},{"ruleId":"1603","severity":2,"message":"1977","line":232,"column":11,"nodeType":"1562","messageId":"1605","endLine":232,"endColumn":16,"fix":"2239"},{"ruleId":"1603","severity":2,"message":"1979","line":232,"column":18,"nodeType":"1562","messageId":"1605","endLine":232,"endColumn":24,"fix":"2240"},{"ruleId":"1603","severity":2,"message":"1920","line":233,"column":9,"nodeType":"1562","messageId":"1605","endLine":233,"endColumn":15,"fix":"2241"},{"ruleId":"1603","severity":2,"message":"1859","line":235,"column":9,"nodeType":"1562","messageId":"1605","endLine":235,"endColumn":13,"fix":"2242"},{"ruleId":"1603","severity":2,"message":"2232","line":241,"column":9,"nodeType":"1562","messageId":"1605","endLine":241,"endColumn":12,"fix":"2243"},{"ruleId":"1603","severity":2,"message":"2234","line":247,"column":9,"nodeType":"1562","messageId":"1605","endLine":247,"endColumn":19,"fix":"2244"},{"ruleId":"1675","severity":2,"message":"1676","line":253,"column":9,"nodeType":"1562","messageId":"1677","endLine":253,"endColumn":13},{"ruleId":"1603","severity":2,"message":"2166","line":253,"column":9,"nodeType":"1562","messageId":"1605","endLine":253,"endColumn":13,"fix":"2245"},{"ruleId":"1603","severity":2,"message":"2246","line":255,"column":11,"nodeType":"1562","messageId":"1605","endLine":255,"endColumn":22,"fix":"2247"},{"ruleId":"1557","severity":1,"message":"1558","line":261,"column":12,"nodeType":"1567","messageId":"1560","endLine":261,"endColumn":17},{"ruleId":"1603","severity":2,"message":"2248","line":262,"column":11,"nodeType":"1562","messageId":"1605","endLine":262,"endColumn":17,"fix":"2249"},{"ruleId":"1564","severity":1,"message":"2250","line":9,"column":10,"nodeType":"1562","messageId":"1566","endLine":9,"endColumn":27},{"ruleId":"1609","severity":2,"message":"1610","line":16,"column":19,"nodeType":"1562","messageId":"1611","endLine":16,"endColumn":27},{"ruleId":"1764","severity":2,"message":"1765","line":22,"column":2,"nodeType":"1766","messageId":"1687","endLine":22,"endColumn":3,"fix":"2251"},{"ruleId":"1557","severity":1,"message":"1558","line":53,"column":25,"nodeType":"1567","messageId":"1560","endLine":53,"endColumn":39},{"ruleId":"1557","severity":1,"message":"1999","line":53,"column":32,"nodeType":"1562","messageId":"1563","endLine":53,"endColumn":35},{"ruleId":"1564","severity":1,"message":"2252","line":53,"column":32,"nodeType":"1562","messageId":"1566","endLine":53,"endColumn":35},{"ruleId":"1557","severity":1,"message":"1558","line":59,"column":3,"nodeType":"1568","messageId":"1560","endLine":59,"endColumn":22},{"ruleId":"1557","severity":1,"message":"1558","line":65,"column":3,"nodeType":"1568","messageId":"1560","endLine":65,"endColumn":60},{"ruleId":"1557","severity":1,"message":"1558","line":81,"column":3,"nodeType":"1568","messageId":"1560","endLine":81,"endColumn":43},{"ruleId":"1557","severity":1,"message":"1729","line":81,"column":22,"nodeType":"1562","messageId":"1563","endLine":81,"endColumn":31},{"ruleId":"1564","severity":1,"message":"1655","line":81,"column":22,"nodeType":"1562","messageId":"1566","endLine":81,"endColumn":31},{"ruleId":"1557","severity":1,"message":"1730","line":81,"column":33,"nodeType":"1562","messageId":"1563","endLine":81,"endColumn":42},{"ruleId":"1564","severity":1,"message":"1658","line":81,"column":33,"nodeType":"1562","messageId":"1566","endLine":81,"endColumn":42},{"ruleId":"1557","severity":1,"message":"1558","line":85,"column":3,"nodeType":"1568","messageId":"1560","endLine":85,"endColumn":18},{"ruleId":"2253","severity":2,"message":"2254","line":114,"column":15,"nodeType":"2255","endLine":128,"endColumn":21},{"ruleId":"1557","severity":1,"message":"1558","line":3,"column":36,"nodeType":"1567","messageId":"1560","endLine":3,"endColumn":41},{"ruleId":"1557","severity":1,"message":"1558","line":9,"column":37,"nodeType":"1567","messageId":"1560","endLine":9,"endColumn":42},{"ruleId":"1710","severity":2,"message":"1873","line":36,"column":3,"nodeType":"1738","messageId":"1713","endLine":36,"endColumn":28,"fix":"2256"},{"ruleId":"1557","severity":1,"message":"1558","line":59,"column":13,"nodeType":"1567","messageId":"1560","endLine":59,"endColumn":24},{"ruleId":"1557","severity":1,"message":"1558","line":64,"column":12,"nodeType":"1567","messageId":"1560","endLine":64,"endColumn":52},{"ruleId":"1557","severity":1,"message":"1558","line":80,"column":19,"nodeType":"1567","messageId":"1560","endLine":80,"endColumn":55},{"ruleId":"1603","severity":2,"message":"2257","line":98,"column":9,"nodeType":"1562","messageId":"1605","endLine":98,"endColumn":36,"fix":"2258"},{"ruleId":"1603","severity":2,"message":"2232","line":100,"column":9,"nodeType":"1562","messageId":"1605","endLine":100,"endColumn":12,"fix":"2259"},{"ruleId":"1603","severity":2,"message":"2234","line":131,"column":9,"nodeType":"1562","messageId":"1605","endLine":131,"endColumn":19,"fix":"2260"},{"ruleId":"1557","severity":1,"message":"1558","line":158,"column":25,"nodeType":"1567","messageId":"1560","endLine":158,"endColumn":105},{"ruleId":"1614","severity":1,"message":"1615","line":7,"column":22,"nodeType":"1616","messageId":"1617","endLine":7,"endColumn":25,"suggestions":"2261"},{"ruleId":"1557","severity":1,"message":"1558","line":23,"column":3,"nodeType":"1568","messageId":"1560","endLine":23,"endColumn":15},{"ruleId":"1557","severity":1,"message":"1558","line":27,"column":3,"nodeType":"1568","messageId":"1560","endLine":27,"endColumn":15},{"ruleId":"1557","severity":1,"message":"1558","line":31,"column":23,"nodeType":"1567","messageId":"1560","endLine":31,"endColumn":65},{"ruleId":"1557","severity":1,"message":"1558","line":68,"column":18,"nodeType":"1567","messageId":"1560","endLine":68,"endColumn":50},{"ruleId":"1557","severity":1,"message":"1558","line":78,"column":16,"nodeType":"1567","messageId":"1560","endLine":78,"endColumn":46},{"ruleId":"1564","severity":1,"message":"2262","line":1,"column":47,"nodeType":"1562","messageId":"1566","endLine":1,"endColumn":59},{"ruleId":"1564","severity":1,"message":"2263","line":2,"column":24,"nodeType":"1562","messageId":"1566","endLine":2,"endColumn":33},{"ruleId":"1564","severity":1,"message":"2264","line":4,"column":10,"nodeType":"1562","messageId":"1566","endLine":4,"endColumn":21},{"ruleId":"1594","severity":2,"message":"1595","line":6,"column":1,"nodeType":"1596","messageId":"1597","endLine":6,"endColumn":38,"fix":"2265"},{"ruleId":"1685","severity":2,"message":"2266","line":12,"column":25,"nodeType":"1568","messageId":"1687","endLine":13,"endColumn":4},{"ruleId":"1557","severity":1,"message":"1558","line":15,"column":3,"nodeType":"1568","messageId":"1560","endLine":15,"endColumn":23},{"ruleId":"1557","severity":1,"message":"1558","line":22,"column":14,"nodeType":"1567","messageId":"1560","endLine":22,"endColumn":44},{"ruleId":"1594","severity":2,"message":"1595","line":25,"column":5,"nodeType":"1596","messageId":"1597","endLine":25,"endColumn":26,"fix":"2267"},{"ruleId":"1594","severity":2,"message":"1595","line":26,"column":5,"nodeType":"1596","messageId":"1597","endLine":33,"endColumn":47,"fix":"2268"},{"ruleId":"1557","severity":1,"message":"1558","line":42,"column":17,"nodeType":"1567","messageId":"1560","endLine":42,"endColumn":43},{"ruleId":"1557","severity":1,"message":"1558","line":64,"column":21,"nodeType":"1567","messageId":"1560","endLine":64,"endColumn":39},{"ruleId":"1557","severity":1,"message":"1558","line":69,"column":10,"nodeType":"1567","messageId":"1560","endLine":69,"endColumn":29},{"ruleId":"1557","severity":1,"message":"1558","line":82,"column":22,"nodeType":"1567","messageId":"1560","endLine":82,"endColumn":27},{"ruleId":"1557","severity":1,"message":"1558","line":101,"column":21,"nodeType":"1567","messageId":"1560","endLine":101,"endColumn":26},{"ruleId":"1594","severity":2,"message":"1595","line":127,"column":3,"nodeType":"1596","messageId":"1597","endLine":127,"endColumn":15,"fix":"2269"},{"ruleId":"1594","severity":2,"message":"1595","line":130,"column":5,"nodeType":"1596","messageId":"1597","endLine":130,"endColumn":32,"fix":"2270"},{"ruleId":"1594","severity":2,"message":"1595","line":156,"column":3,"nodeType":"1596","messageId":"1597","endLine":156,"endColumn":17,"fix":"2271"},{"ruleId":"1594","severity":2,"message":"1595","line":159,"column":10,"nodeType":"1596","messageId":"1597","endLine":159,"endColumn":19,"fix":"2272"},{"ruleId":"1557","severity":1,"message":"1558","line":87,"column":8,"nodeType":"1559","messageId":"1560","endLine":87,"endColumn":45},{"ruleId":"1557","severity":1,"message":"1558","line":101,"column":8,"nodeType":"1559","messageId":"1560","endLine":101,"endColumn":37},{"ruleId":"1557","severity":1,"message":"1898","line":101,"column":28,"nodeType":"1562","messageId":"1613","endLine":101,"endColumn":36},{"ruleId":"1614","severity":1,"message":"1615","line":101,"column":33,"nodeType":"1616","messageId":"1617","endLine":101,"endColumn":36,"suggestions":"2273"},{"ruleId":"1557","severity":1,"message":"1558","line":108,"column":8,"nodeType":"1559","messageId":"1560","endLine":108,"endColumn":57},{"ruleId":"1557","severity":1,"message":"1558","line":19,"column":8,"nodeType":"1559","messageId":"1560","endLine":19,"endColumn":117},{"ruleId":"1594","severity":2,"message":"1595","line":20,"column":3,"nodeType":"1596","messageId":"1597","endLine":20,"endColumn":21,"fix":"2274"},{"ruleId":"1594","severity":2,"message":"1595","line":21,"column":3,"nodeType":"1596","messageId":"1597","endLine":21,"endColumn":24,"fix":"2275"},{"ruleId":"1594","severity":2,"message":"1595","line":22,"column":3,"nodeType":"1596","messageId":"1597","endLine":22,"endColumn":24,"fix":"2276"},{"ruleId":"1594","severity":2,"message":"1595","line":23,"column":3,"nodeType":"1596","messageId":"1597","endLine":23,"endColumn":34,"fix":"2277"},{"ruleId":"1603","severity":2,"message":"1920","line":203,"column":9,"nodeType":"1562","messageId":"1605","endLine":203,"endColumn":15,"fix":"2278"},{"ruleId":"1564","severity":1,"message":"2279","line":276,"column":84,"nodeType":"1562","messageId":"1566","endLine":276,"endColumn":108},{"ruleId":"1614","severity":1,"message":"1615","line":276,"column":119,"nodeType":"1616","messageId":"1617","endLine":276,"endColumn":122,"suggestions":"2280"},{"ruleId":"1557","severity":1,"message":"1558","line":321,"column":26,"nodeType":"1567","messageId":"1560","endLine":321,"endColumn":98},{"ruleId":"1710","severity":2,"message":"1873","line":349,"column":114,"nodeType":"2217","messageId":"1713","endLine":349,"endColumn":142,"fix":"2281"},{"ruleId":"1710","severity":2,"message":"1873","line":360,"column":118,"nodeType":"2217","messageId":"1713","endLine":360,"endColumn":146,"fix":"2282"},{"ruleId":"1710","severity":2,"message":"1873","line":394,"column":121,"nodeType":"2217","messageId":"1713","endLine":394,"endColumn":149,"fix":"2283"},{"ruleId":"1594","severity":2,"message":"1595","line":411,"column":11,"nodeType":"1596","messageId":"1597","endLine":411,"endColumn":65,"fix":"2284"},{"ruleId":"1710","severity":2,"message":"1873","line":432,"column":119,"nodeType":"2217","messageId":"1713","endLine":432,"endColumn":147,"fix":"2285"},{"ruleId":"1594","severity":2,"message":"1595","line":446,"column":11,"nodeType":"1596","messageId":"1597","endLine":446,"endColumn":65,"fix":"2286"},{"ruleId":"1603","severity":2,"message":"2287","line":584,"column":15,"nodeType":"1562","messageId":"1605","endLine":584,"endColumn":18},{"ruleId":"1603","severity":2,"message":"2288","line":618,"column":7,"nodeType":"1562","messageId":"1605","endLine":618,"endColumn":24,"fix":"2289"},{"ruleId":"2068","severity":2,"message":"2069","line":54,"column":13,"nodeType":"2070","messageId":"2071","endLine":54,"endColumn":27},{"ruleId":"1603","severity":2,"message":"1865","line":101,"column":7,"nodeType":"1562","messageId":"1605","endLine":101,"endColumn":11,"fix":"2290"},{"ruleId":"1603","severity":2,"message":"1867","line":103,"column":9,"nodeType":"1562","messageId":"1605","endLine":103,"endColumn":12,"fix":"2291"},{"ruleId":"1603","severity":2,"message":"1869","line":104,"column":9,"nodeType":"1562","messageId":"1605","endLine":104,"endColumn":14,"fix":"2292"},{"ruleId":"1603","severity":2,"message":"1871","line":106,"column":9,"nodeType":"1562","messageId":"1605","endLine":106,"endColumn":12,"fix":"2293"},{"ruleId":"1557","severity":1,"message":"1558","line":133,"column":8,"nodeType":"1559","messageId":"1560","endLine":133,"endColumn":96},{"ruleId":"1710","severity":2,"message":"1873","line":133,"column":67,"nodeType":"2217","messageId":"1713","endLine":133,"endColumn":95,"fix":"2294"},{"ruleId":"1603","severity":2,"message":"2295","line":134,"column":7,"nodeType":"1562","messageId":"1605","endLine":134,"endColumn":16,"fix":"2296"},{"ruleId":"1557","severity":1,"message":"1558","line":157,"column":8,"nodeType":"1559","messageId":"1560","endLine":157,"endColumn":89},{"ruleId":"1710","severity":2,"message":"1873","line":157,"column":60,"nodeType":"2217","messageId":"1713","endLine":157,"endColumn":88,"fix":"2297"},{"ruleId":"1557","severity":1,"message":"1558","line":161,"column":8,"nodeType":"1559","messageId":"1560","endLine":161,"endColumn":84},{"ruleId":"1710","severity":2,"message":"1873","line":161,"column":55,"nodeType":"2217","messageId":"1713","endLine":161,"endColumn":83,"fix":"2298"},{"ruleId":"1557","severity":1,"message":"1558","line":165,"column":8,"nodeType":"1559","messageId":"1560","endLine":165,"endColumn":82},{"ruleId":"1710","severity":2,"message":"1873","line":165,"column":53,"nodeType":"2217","messageId":"1713","endLine":165,"endColumn":81,"fix":"2299"},{"ruleId":"1557","severity":1,"message":"1558","line":169,"column":8,"nodeType":"1559","messageId":"1560","endLine":169,"endColumn":83},{"ruleId":"1710","severity":2,"message":"1873","line":169,"column":54,"nodeType":"2217","messageId":"1713","endLine":169,"endColumn":82,"fix":"2300"},{"ruleId":"1557","severity":1,"message":"1558","line":174,"column":8,"nodeType":"1559","messageId":"1560","endLine":174,"endColumn":82},{"ruleId":"1710","severity":2,"message":"1873","line":174,"column":53,"nodeType":"2217","messageId":"1713","endLine":174,"endColumn":81,"fix":"2301"},{"ruleId":"1557","severity":1,"message":"1558","line":178,"column":8,"nodeType":"1559","messageId":"1560","endLine":178,"endColumn":40},{"ruleId":"1557","severity":1,"message":"1558","line":182,"column":8,"nodeType":"1559","messageId":"1560","endLine":182,"endColumn":28},{"ruleId":"1609","severity":2,"message":"1610","line":38,"column":19,"nodeType":"1562","messageId":"1611","endLine":38,"endColumn":27},{"ruleId":"1710","severity":2,"message":"1711","line":63,"column":3,"nodeType":"1738","messageId":"1713","endLine":63,"endColumn":30,"fix":"2302"},{"ruleId":"1557","severity":1,"message":"1558","line":87,"column":18,"nodeType":"1567","messageId":"1560","endLine":87,"endColumn":48},{"ruleId":"1557","severity":1,"message":"1558","line":91,"column":3,"nodeType":"1568","messageId":"1560","endLine":91,"endColumn":60},{"ruleId":"1557","severity":1,"message":"1558","line":96,"column":3,"nodeType":"1568","messageId":"1560","endLine":96,"endColumn":57},{"ruleId":"1564","severity":1,"message":"1658","line":96,"column":40,"nodeType":"1562","messageId":"1566","endLine":96,"endColumn":56},{"ruleId":"1557","severity":1,"message":"1558","line":116,"column":3,"nodeType":"1568","messageId":"1560","endLine":116,"endColumn":22},{"ruleId":"1557","severity":1,"message":"1558","line":125,"column":13,"nodeType":"1567","messageId":"1560","endLine":125,"endColumn":64},{"ruleId":"1557","severity":1,"message":"1558","line":134,"column":18,"nodeType":"1567","messageId":"1560","endLine":134,"endColumn":75},{"ruleId":"1603","severity":2,"message":"2303","line":243,"column":9,"nodeType":"1562","messageId":"1605","endLine":243,"endColumn":11,"fix":"2304"},{"ruleId":"1603","severity":2,"message":"2305","line":244,"column":9,"nodeType":"1562","messageId":"1605","endLine":244,"endColumn":11,"fix":"2306"},{"ruleId":"2068","severity":2,"message":"2069","line":257,"column":16,"nodeType":"2070","messageId":"2071","endLine":257,"endColumn":30},{"ruleId":"1603","severity":2,"message":"2307","line":368,"column":9,"nodeType":"1562","messageId":"1605","endLine":368,"endColumn":19,"fix":"2308"},{"ruleId":"1603","severity":2,"message":"2309","line":390,"column":9,"nodeType":"1562","messageId":"1605","endLine":390,"endColumn":22,"fix":"2310"},{"ruleId":"1603","severity":2,"message":"2311","line":391,"column":9,"nodeType":"1562","messageId":"1605","endLine":391,"endColumn":23,"fix":"2312"},{"ruleId":"1557","severity":1,"message":"1558","line":471,"column":3,"nodeType":"1568","messageId":"1560","endLine":471,"endColumn":11},{"ruleId":"1603","severity":2,"message":"2313","line":472,"column":11,"nodeType":"1562","messageId":"1605","endLine":472,"endColumn":21,"fix":"2314"},{"ruleId":"1603","severity":2,"message":"1977","line":473,"column":11,"nodeType":"1562","messageId":"1605","endLine":473,"endColumn":16,"fix":"2315"},{"ruleId":"1603","severity":2,"message":"1979","line":473,"column":18,"nodeType":"1562","messageId":"1605","endLine":473,"endColumn":24,"fix":"2316"},{"ruleId":"1603","severity":2,"message":"2248","line":473,"column":26,"nodeType":"1562","messageId":"1605","endLine":473,"endColumn":32,"fix":"2317"},{"ruleId":"1710","severity":2,"message":"1878","line":11,"column":3,"nodeType":"1738","messageId":"1713","endLine":11,"endColumn":33,"fix":"2318"},{"ruleId":"1603","severity":2,"message":"2319","line":36,"column":11,"nodeType":"1562","messageId":"1605","endLine":36,"endColumn":18,"fix":"2320"},{"ruleId":"2321","severity":2,"message":"2322","line":52,"column":24,"nodeType":"1562","messageId":"2323","endLine":52,"endColumn":29},{"ruleId":"1564","severity":1,"message":"2324","line":52,"column":40,"nodeType":"1562","messageId":"1566","endLine":52,"endColumn":46},{"ruleId":"1603","severity":2,"message":"2325","line":56,"column":11,"nodeType":"1562","messageId":"1605","endLine":56,"endColumn":15,"fix":"2326"},{"ruleId":"1557","severity":1,"message":"1558","line":100,"column":3,"nodeType":"1568","messageId":"1560","endLine":100,"endColumn":22},{"ruleId":"1557","severity":1,"message":"1558","line":108,"column":17,"nodeType":"1567","messageId":"1560","endLine":108,"endColumn":46},{"ruleId":"1603","severity":2,"message":"2327","line":166,"column":9,"nodeType":"1562","messageId":"1605","endLine":166,"endColumn":32,"fix":"2328"},{"ruleId":"1557","severity":1,"message":"1558","line":186,"column":17,"nodeType":"1567","messageId":"1560","endLine":186,"endColumn":36},{"ruleId":"1603","severity":2,"message":"2329","line":18,"column":9,"nodeType":"1562","messageId":"1605","endLine":18,"endColumn":11,"fix":"2330"},{"ruleId":"1603","severity":2,"message":"2331","line":19,"column":9,"nodeType":"1562","messageId":"1605","endLine":19,"endColumn":11,"fix":"2332"},{"ruleId":"1557","severity":1,"message":"1558","line":49,"column":3,"nodeType":"1568","messageId":"1560","endLine":49,"endColumn":45},{"ruleId":"1557","severity":1,"message":"1558","line":8,"column":8,"nodeType":"1559","messageId":"1560","endLine":8,"endColumn":43},{"ruleId":"1557","severity":1,"message":"1558","line":43,"column":8,"nodeType":"1559","messageId":"1560","endLine":43,"endColumn":47},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","Argument 'config' should be typed.","Identifier","missingArgType","@typescript-eslint/no-unused-vars","'combineReducers' is defined but never used.","unusedVar","ArrowFunctionExpression","FunctionExpression","'prev_palette' is assigned a value but never used.","Argument 'isTrace' should be typed.","Argument 'action' should be typed.","Argument 'authToken' should be typed.","Argument 'message' should be typed.","Argument 'title' should be typed.","Argument 'confirmBtnText' should be typed.","Argument 'cancelBtnText' should be typed.","Argument 'isModal' should be typed.","Argument 'didCloseCallback' should be typed.","Object pattern argument should be typed.","ObjectPattern","missingArgTypeUnnamed","react/prop-types","'match' is missing in props validation","Property","'match.params' is missing in props validation","'match.params.id' is missing in props validation","'location' is missing in props validation","'location.search' is missing in props validation","'match.params.name' is missing in props validation","'location.pathname' is missing in props validation","'match.url' is missing in props validation","'match.path' is missing in props validation","'PenManager' is defined but never used.","no-var","Unexpected var, use let or const instead.","VariableDeclaration","unexpectedVar",{"range":"2333","text":"2334"},{"range":"2335","text":"2334"},{"range":"2336","text":"2334"},{"range":"2337","text":"2334"},"'event' is defined but never used.","prefer-const","'note_info' is never reassigned. Use 'const' instead.","useConst",{"range":"2338","text":"2339"},"'_pens' is never reassigned. Use 'const' instead.",{"range":"2340","text":"2339"},"@typescript-eslint/ban-types","Don't use `Function` as a type. The `Function` type accepts any function-like value.\nIt provides no type safety when calling the function, which can be a common source of bugs.\nIt also accepts things like class declarations, which will throw at runtime as they will not be called with `new`.\nIf you are expecting the function to accept certain arguments, you should explicitly define the function shape.","bannedTypeMessage","Argument 'filter' should be typed with a non-any type.","anyTypedArg","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["2341","2342"],"'completed' is never reassigned. Use 'const' instead.",{"range":"2343","text":"2339"},"'arr' is never reassigned. Use 'const' instead.",{"range":"2344","text":"2339"},{"range":"2345","text":"2339"},"'realtime' is never reassigned. Use 'const' instead.",{"range":"2346","text":"2339"},"'penStrokesMap' is never reassigned. Use 'const' instead.",{"range":"2347","text":"2339"},{"range":"2348","text":"2339"},"'key' is defined but never used.",{"range":"2349","text":"2339"},{"range":"2350","text":"2339"},"'pageId' is never reassigned. Use 'const' instead.",{"range":"2351","text":"2339"},{"range":"2352","text":"2339"},{"range":"2353","text":"2339"},{"range":"2354","text":"2339"},{"range":"2355","text":"2339"},{"range":"2356","text":"2339"},"'stroke' is never reassigned. Use 'const' instead.",{"range":"2357","text":"2339"},"'strokeKey' is never reassigned. Use 'const' instead.",{"range":"2358","text":"2339"},{"range":"2359","text":"2339"},{"range":"2360","text":"2339"},{"range":"2361","text":"2339"},{"range":"2362","text":"2339"},"'Component' is defined but never used.","'useState' is defined but never used.","'TooltipProps' is defined but never used.","Argument 'props' should be typed.","'onPenLinkChanged' is missing in props validation","'new_pen' is never reassigned. Use 'const' instead.",{"range":"2363","text":"2339"},"Argument 'nextProps' should be typed with a non-any type.","'nextProps' is defined but never used.",["2364","2365"],"Argument 'nextState' should be typed with a non-any type.","'nextState' is defined but never used.",["2366","2367"],"'connect' is defined but never used.","'$' is never reassigned. Use 'const' instead.",{"range":"2368","text":"2339"},{"range":"2369","text":"2334"},"'$elem' is assigned a value but never used.","'$elem' is never reassigned. Use 'const' instead.",{"range":"2370","text":"2339"},{"range":"2371","text":"2339"},["2372","2373"],"'filter' is never reassigned. Use 'const' instead.",{"range":"2374","text":"2339"},"Argument 'data' should be typed with a non-any type.",["2375","2376"],"'resolve' is defined but never used.","'FOLDER_ID' is assigned a value but never used.","@typescript-eslint/no-this-alias","Unexpected aliasing of 'this' to local variable.","thisAssignment","no-self-assign","'folderId' is assigned to itself.","selfAssignment","no-redeclare","'i' is already defined.","redeclared","'resp' is defined but never used.","@typescript-eslint/no-empty-function","Unexpected empty function.","unexpected","Argument 'fileId' should be typed.","Argument 'contentBlob' should be typed.","Argument 'callback' should be typed.","Argument 'folderId' should be typed.",{"range":"2377","text":"2339"},"Argument 'icon_name' should be typed.",{"range":"2378","text":"2334"},{"range":"2379","text":"2334"},{"range":"2380","text":"2334"},{"range":"2381","text":"2334"},"Argument 'c' should be typed.",{"range":"2382","text":"2334"},{"range":"2383","text":"2334"},{"range":"2384","text":"2334"},["2385","2386"],{"range":"2387","text":"2334"},{"range":"2388","text":"2334"},{"range":"2389","text":"2334"},"Argument 'sw' should be typed.","'PenBasedRenderer' is defined but never used.",{"range":"2390","text":"2339"},{"range":"2391","text":"2334"},"@typescript-eslint/no-inferrable-types","Type number trivially inferred from a number literal, remove type annotation.","VariableDeclarator","noInferrableType",{"range":"2392","text":"2393"},{"range":"2394","text":"2393"},"'pen' is never reassigned. Use 'const' instead.",{"range":"2395","text":"2339"},{"range":"2396","text":"2334"},"Argument 'e' should be typed.","Argument '$elem' should be typed.",{"range":"2397","text":"2334"},"Argument 'type' should be typed.","Argument 'renderContainer' should be typed.","'opt' is defined but never used.","'ret' is never reassigned. Use 'const' instead.",{"range":"2398","text":"2339"},"Argument 'pen' should be typed.","Argument 'event' should be typed.","Argument 'nextProps' should be typed.","Argument 'nextState' should be typed.","'stopTrigger' is missing in props validation","'rewindTrigger' is missing in props validation","'autoStop' is missing in props validation","'caption' is missing in props validation","Argument 'size' should be typed.","Argument 'scale' should be typed.","Argument 'rect' should be typed.","ClassProperty",{"range":"2399","text":"2393"},"Don't use `object` as a type. The `object` type is currently hard to use ([see this issue](https://github.com/microsoft/TypeScript/issues/21732)).\nConsider using `Record<string, unknown>` instead, as it allows you to more easily inspect and use the keys.","TSObjectKeyword",{"range":"2400","text":"2334"},{"range":"2401","text":"2334"},"'mac' is defined but never used.","'p' is never reassigned. Use 'const' instead.",{"range":"2402","text":"2339"},"'mac' is never reassigned. Use 'const' instead.",{"range":"2403","text":"2339"},"'time' is never reassigned. Use 'const' instead.",{"range":"2404","text":"2339"},{"range":"2405","text":"2339"},{"range":"2406","text":"2339"},"'info' is never reassigned. Use 'const' instead.",{"range":"2407","text":"2339"},{"range":"2408","text":"2339"},{"range":"2409","text":"2339"},{"range":"2410","text":"2339"},"'timeStamp' is assigned a value but never used.",{"range":"2411","text":"2339"},{"range":"2412","text":"2339"},{"range":"2413","text":"2339"},{"range":"2414","text":"2339"},{"range":"2415","text":"2339"},"@typescript-eslint/no-extra-semi","Unnecessary semicolon.","EmptyStatement",{"range":"2416","text":"2417"},{"range":"2418","text":"2339"},{"range":"2419","text":"2339"},{"range":"2420","text":"2339"},{"range":"2421","text":"2339"},"'passcode' is never reassigned. Use 'const' instead.",{"range":"2422","text":"2339"},{"range":"2423","text":"2339"},{"range":"2424","text":"2339"},{"range":"2425","text":"2339"},{"range":"2426","text":"2339"},{"range":"2427","text":"2339"},"'$bookXml' is never reassigned. Use 'const' instead.",{"range":"2428","text":"2339"},"'title' is never reassigned. Use 'const' instead.",{"range":"2429","text":"2339"},"'author' is never reassigned. Use 'const' instead.",{"range":"2430","text":"2339"},"'name' is never reassigned. Use 'const' instead.",{"range":"2431","text":"2339"},"'result' is never reassigned. Use 'const' instead.",{"range":"2432","text":"2339"},"'xmlData' is never reassigned. Use 'const' instead.",{"range":"2433","text":"2339"},"'ccc' is never reassigned. Use 'const' instead.",{"range":"2434","text":"2339"},"'x1' is never reassigned. Use 'const' instead.",{"range":"2435","text":"2339"},"'x2' is never reassigned. Use 'const' instead.",{"range":"2436","text":"2339"},"'y1' is never reassigned. Use 'const' instead.",{"range":"2437","text":"2339"},"'y2' is never reassigned. Use 'const' instead.",{"range":"2438","text":"2339"},"'crop_margin' is never reassigned. Use 'const' instead.",{"range":"2439","text":"2339"},"'margins' is never reassigned. Use 'const' instead.",{"range":"2440","text":"2339"},"'l' is never reassigned. Use 'const' instead.",{"range":"2441","text":"2339"},"'t' is never reassigned. Use 'const' instead.",{"range":"2442","text":"2339"},"'r' is never reassigned. Use 'const' instead.",{"range":"2443","text":"2339"},"'b' is never reassigned. Use 'const' instead.",{"range":"2444","text":"2339"},"'page_no' is never reassigned. Use 'const' instead.",{"range":"2445","text":"2339"},"'Xmin' is never reassigned. Use 'const' instead.",{"range":"2446","text":"2339"},"'Ymin' is never reassigned. Use 'const' instead.",{"range":"2447","text":"2339"},"'Xmax' is never reassigned. Use 'const' instead.",{"range":"2448","text":"2339"},"'Ymax' is never reassigned. Use 'const' instead.",{"range":"2449","text":"2339"},"'obj' is never reassigned. Use 'const' instead.",{"range":"2450","text":"2339"},"'zip' is never reassigned. Use 'const' instead.",{"range":"2451","text":"2339"},"'n' is never reassigned. Use 'const' instead.",{"range":"2452","text":"2339"},"'xml' is never reassigned. Use 'const' instead.",{"range":"2453","text":"2339"},"Argument 'pageInfo' should be typed.","'pageInfo' is defined but never used.","'url' is never reassigned. Use 'const' instead.",{"range":"2454","text":"2339"},"'el' is never reassigned. Use 'const' instead.",{"range":"2455","text":"2339"},["2456","2457"],"'s' is never reassigned. Use 'const' instead.",{"range":"2458","text":"2339"},{"range":"2459","text":"2339"},"'item' is never reassigned. Use 'const' instead.",{"range":"2460","text":"2339"},"'section' is never reassigned. Use 'const' instead.",{"range":"2461","text":"2339"},"'owner' is never reassigned. Use 'const' instead.",{"range":"2462","text":"2339"},"'book' is never reassigned. Use 'const' instead.",{"range":"2463","text":"2339"},"'zipurl' is never reassigned. Use 'const' instead.",{"range":"2464","text":"2339"},"Unexpected empty method 'complete'.","'v' is never reassigned. Use 'const' instead.",{"range":"2465","text":"2339"},"'dpr' is never reassigned. Use 'const' instead.",{"range":"2466","text":"2339"},{"range":"2467","text":"2339"},"'rect' is never reassigned. Use 'const' instead.",{"range":"2468","text":"2339"},"'size' is never reassigned. Use 'const' instead.",{"range":"2469","text":"2339"},"'paper_info' is never reassigned. Use 'const' instead.",{"range":"2470","text":"2339"},{"range":"2471","text":"2339"},{"range":"2472","text":"2339"},"'keys' is never reassigned. Use 'const' instead.",{"range":"2473","text":"2339"},"'key' is never reassigned. Use 'const' instead.",{"range":"2474","text":"2339"},"'value' is never reassigned. Use 'const' instead.",{"range":"2475","text":"2339"},"'idx' is never reassigned. Use 'const' instead.",{"range":"2476","text":"2339"},"Type boolean trivially inferred from a boolean literal, remove type annotation.",{"range":"2477","text":"2393"},"'pdfUrl' is never reassigned. Use 'const' instead.","'pageNo' is never reassigned. Use 'const' instead.",{"range":"2478","text":"2479"},"Type string trivially inferred from a string literal, remove type annotation.",{"range":"2480","text":"2393"},{"range":"2481","text":"2393"},{"range":"2482","text":"2393"},{"range":"2483","text":"2393"},{"range":"2484","text":"2393"},{"range":"2485","text":"2393"},{"range":"2486","text":"2393"},"'canvasFb' is never reassigned. Use 'const' instead.",{"range":"2487","text":"2339"},{"range":"2488","text":"2339"},"'objects' is never reassigned. Use 'const' instead.",{"range":"2489","text":"2339"},"'strokes' is never reassigned. Use 'const' instead.",{"range":"2490","text":"2339"},{"range":"2491","text":"2339"},"'line' is never reassigned. Use 'const' instead.",{"range":"2492","text":"2339"},{"range":"2493","text":"2339"},{"range":"2494","text":"2339"},"Argument 'opt' should be typed with a non-any type.",["2495","2496"],{"range":"2497","text":"2339"},"'evt' is never reassigned. Use 'const' instead.",{"range":"2498","text":"2339"},["2499","2500"],{"range":"2501","text":"2339"},"'e' is never reassigned. Use 'const' instead.",{"range":"2502","text":"2339"},"'vpt' is never reassigned. Use 'const' instead.",{"range":"2503","text":"2339"},{"range":"2504","text":"2339"},{"range":"2505","text":"2339"},"'opt' is assigned a value but never used.",["2506","2507"],{"range":"2508","text":"2339"},["2509","2510"],{"range":"2511","text":"2339"},{"range":"2512","text":"2339"},"'delta' is never reassigned. Use 'const' instead.",{"range":"2513","text":"2339"},["2514","2515"],"'canvas' is never reassigned. Use 'const' instead.",{"range":"2516","text":"2339"},"'scale' is never reassigned. Use 'const' instead.",{"range":"2517","text":"2339"},"'cx' is never reassigned. Use 'const' instead.",{"range":"2518","text":"2339"},"'cy' is never reassigned. Use 'const' instead.",{"range":"2519","text":"2339"},{"range":"2520","text":"2339"},{"range":"2521","text":"2339"},{"range":"2522","text":"2339"},"'zoom' is never reassigned. Use 'const' instead.",{"range":"2523","text":"2339"},"'offset_x' is never reassigned. Use 'const' instead.",{"range":"2524","text":"2339"},"'offset_y' is never reassigned. Use 'const' instead.",{"range":"2525","text":"2339"},"'sx' is never reassigned. Use 'const' instead.",{"range":"2526","text":"2339"},"'sy' is never reassigned. Use 'const' instead.",{"range":"2527","text":"2339"},"'scale_det' is never reassigned. Use 'const' instead.",{"range":"2528","text":"2339"},"'nx' is never reassigned. Use 'const' instead.",{"range":"2529","text":"2339"},"'ny' is never reassigned. Use 'const' instead.",{"range":"2530","text":"2339"},{"range":"2531","text":"2339"},{"range":"2532","text":"2339"},{"range":"2533","text":"2339"},{"range":"2534","text":"2339"},"'target' is never reassigned. Use 'const' instead.",{"range":"2535","text":"2339"},{"range":"2536","text":"2339"},{"range":"2537","text":"2339"},{"range":"2538","text":"2339"},"'new_offset_x' is never reassigned. Use 'const' instead.",{"range":"2539","text":"2339"},"'new_offset_y' is never reassigned. Use 'const' instead.",{"range":"2540","text":"2339"},{"range":"2541","text":"2339"},{"range":"2542","text":"2339"},{"range":"2543","text":"2339"},{"range":"2544","text":"2339"},"'step_x' is never reassigned. Use 'const' instead.",{"range":"2545","text":"2339"},"'step_y' is never reassigned. Use 'const' instead.",{"range":"2546","text":"2339"},{"range":"2547","text":"2339"},{"range":"2548","text":"2393"},"'pageInfo' is never reassigned. Use 'const' instead.",{"range":"2549","text":"2339"},"'inkStorage' is never reassigned. Use 'const' instead.",{"range":"2549","text":"2339"},{"range":"2549","text":"2339"},"'playState' is never reassigned. Use 'const' instead.",{"range":"2549","text":"2339"},"'width' is never reassigned. Use 'const' instead.",{"range":"2549","text":"2339"},"'height' is never reassigned. Use 'const' instead.",{"range":"2549","text":"2339"},"'pens' is never reassigned. Use 'const' instead.",{"range":"2549","text":"2339"},"'viewFit' is never reassigned. Use 'const' instead.",{"range":"2549","text":"2339"},{"range":"2550","text":"2339"},"'parentHeight' is never reassigned. Use 'const' instead.",{"range":"2551","text":"2339"},"'parentWidth' is never reassigned. Use 'const' instead.",{"range":"2552","text":"2339"},"'penManager' is never reassigned. Use 'const' instead.",{"range":"2553","text":"2339"},"'renderer' is never reassigned. Use 'const' instead.",{"range":"2554","text":"2339"},"'pageStrokesCount' is never reassigned. Use 'const' instead.",{"range":"2555","text":"2339"},{"range":"2556","text":"2339"},["2557","2558"],["2559","2560"],"Argument 'pdf' should be typed.","Argument 'url' should be typed.","'loadingPromise' is never reassigned. Use 'const' instead.",{"range":"2561","text":"2339"},"'IPrintingProgress' is defined but never used.","'IPrintOption' is defined but never used.","'FormControlLabel' is defined but never used.","'Switch' is defined but never used.","'e' is defined but never used.",["2562","2563"],{"range":"2564","text":"2334"},"'Box' is defined but never used.","'classes' is assigned a value but never used.","'setPageNo' is assigned a value but never used.","Don't use `{}` as a type. `{}` actually means \"any non-nullish value\".\n- If you want a type meaning \"any object\", you probably want `Record<string, unknown>` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.\n- If you want a type meaning \"empty object\", you probably want `Record<string, never>` instead.","TSTypeLiteral","'reason' is defined but never used.","'children' is missing in props validation",{"range":"2565","text":"2566"},{"range":"2567","text":"2568"},{"range":"2569","text":"2570"},{"range":"2571","text":"2572"},"Argument 'options' should be typed.","Argument 'bgurl' should be typed.","Argument 'opt' should be typed.","Argument 'zoom' should be typed.","Argument 'dot' should be typed.","Argument 'point' should be typed.","Argument 'animate' should be typed.","Argument 'ncodeXY' should be typed.","Argument 'canvasXY' should be typed.","Argument 'screenXY' should be typed.","Argument 'mode' should be typed.","Argument 'szPaper' should be typed.","Argument 'currViewFit' should be typed.","Argument 'section' should be typed.","Argument 'owner' should be typed.","Argument 'book' should be typed.","Argument 'page' should be typed.","Argument 'forceToRefresh' should be typed.","Argument 'speed' should be typed.","Argument 'ms' should be typed.","Argument 'strokeStream' should be typed.","Argument 'strokes' should be typed.","Argument 'startTime' should be typed.","Argument 'dots' should be typed.","Argument 'color' should be typed.","Argument 'thickness' should be typed.","Argument 'handler' should be typed.","Argument 'playingTime' should be typed.","Argument 'context' should be typed.","Argument 'btDevice' should be typed.","no-useless-catch","Unnecessary try/catch wrapper.","TryStatement","unnecessaryCatch",{"range":"2573","text":"2334"},{"range":"2574","text":"2334"},"'Errcode' is never reassigned. Use 'const' instead.",{"range":"2575","text":"2339"},{"range":"2576","text":"2339"},{"range":"2577","text":"2334"},{"range":"2578","text":"2339"},"'endPoint' is never reassigned. Use 'const' instead.",{"range":"2579","text":"2339"},{"range":"2580","text":"2339"},"Don't use `Object` as a type. The `Object` type actually means \"any non-nullish value\", so it is marginally better than `unknown`.\n- If you want a type meaning \"any object\", you probably want `Record<string, unknown>` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.",{"range":"2581","text":"2334"},{"range":"2582","text":"2334"},"no-prototype-builtins","Do not access Object.prototype method 'hasOwnProperty' from target object.","CallExpression","prototypeBuildIn",{"range":"2583","text":"2334"},"'scaled_pen_thickness' is never reassigned. Use 'const' instead.",{"range":"2584","text":"2339"},{"range":"2585","text":"2334"},{"range":"2586","text":"2334"},{"range":"2587","text":"2334"},{"range":"2588","text":"2334"},{"range":"2589","text":"2334"},{"range":"2590","text":"2334"},{"range":"2591","text":"2334"},{"range":"2592","text":"2334"},"'ep' is never reassigned. Use 'const' instead.",{"range":"2593","text":"2339"},"'cp1' is never reassigned. Use 'const' instead.",{"range":"2594","text":"2339"},"'cp2' is never reassigned. Use 'const' instead.",{"range":"2595","text":"2339"},{"range":"2596","text":"2334"},{"range":"2597","text":"2339"},{"range":"2598","text":"2339"},{"range":"2599","text":"2339"},{"range":"2600","text":"2334"},{"range":"2601","text":"2602"},{"range":"2603","text":"2393"},{"range":"2604","text":"2393"},{"range":"2605","text":"2393"},"'sourceId' is never reassigned. Use 'const' instead.",{"range":"2606","text":"2339"},{"range":"2607","text":"2339"},"Argument 'event' should be typed with a non-any type.",["2608","2609"],["2610","2611"],"'pathData' is never reassigned. Use 'const' instead.",{"range":"2612","text":"2339"},"'new_path' is never reassigned. Use 'const' instead.",{"range":"2613","text":"2339"},{"range":"2614","text":"2339"},"'path' is never reassigned. Use 'const' instead.",{"range":"2615","text":"2339"},["2616","2617"],{"range":"2618","text":"2339"},"'penTrackerObj' is never reassigned. Use 'const' instead.",{"range":"2619","text":"2339"},"no-empty","Empty block statement.","BlockStatement",{"range":"2620","text":"2334"},"Argument 'ink_x0' should be typed.","Argument 'ink_y0' should be typed.","Argument 'ink_x1' should be typed.","Argument 'ink_y1' should be typed.","Argument 'stroke' should be typed.",{"range":"2621","text":"2334"},{"range":"2622","text":"2334"},"'paths' is assigned a value but never used.","'paths' is never reassigned. Use 'const' instead.",{"range":"2623","text":"2339"},{"range":"2624","text":"2334"},{"range":"2625","text":"2334"},{"range":"2626","text":"2339"},"'hoverPoints' is never reassigned. Use 'const' instead.",{"range":"2627","text":"2339"},{"range":"2628","text":"2334"},{"range":"2629","text":"2334"},{"range":"2630","text":"2334"},"'currPage' is never reassigned. Use 'const' instead.",{"range":"2631","text":"2339"},{"range":"2632","text":"2339"},"'szPaper' is never reassigned. Use 'const' instead.",{"range":"2633","text":"2339"},{"range":"2634","text":"2339"},{"range":"2635","text":"2339"},"'dot0' is never reassigned. Use 'const' instead.",{"range":"2636","text":"2339"},{"range":"2637","text":"2339"},{"range":"2638","text":"2339"},{"range":"2639","text":"2339"},"'pointArray' is never reassigned. Use 'const' instead.",{"range":"2640","text":"2339"},"'pt' is never reassigned. Use 'const' instead.",{"range":"2641","text":"2339"},{"range":"2642","text":"2334"},"'strokeThickness' is never reassigned. Use 'const' instead.",{"range":"2643","text":"2339"},{"range":"2644","text":"2339"},{"range":"2645","text":"2339"},"@typescript-eslint/triple-slash-reference","Do not use a triple slash reference for pdfjs-dist, use `import` style instead.","Line","tripleSlashReference",{"range":"2646","text":"2334"},{"range":"2647","text":"2334"},"'loadingTask' is never reassigned. Use 'const' instead.",{"range":"2648","text":"2339"},"'self' is never reassigned. Use 'const' instead.",{"range":"2649","text":"2339"},{"range":"2650","text":"2393"},["2651","2652"],["2653","2654"],"'prevProps' is defined but never used.","'prevState' is defined but never used.",["2655","2656"],["2657","2658"],"'performClick_old' is defined but never used.",["2659","2660"],"'maxWidthType' is defined but never used.","'pageNo' is assigned a value but never used.","'handleSave' is assigned a value but never used.","Unexpected empty arrow function.","'onChange' is assigned a value but never used.","'options' is never reassigned. Use 'const' instead.",{"range":"2661","text":"2339"},{"range":"2662","text":"2663"},{"range":"2664","text":"2339"},{"range":"2665","text":"2339"},"'isBTdevice' is never reassigned. Use 'const' instead.",{"range":"2666","text":"2339"},"'writeSocket' is never reassigned. Use 'const' instead.",{"range":"2667","text":"2339"},"'notifyIndicate' is never reassigned. Use 'const' instead.",{"range":"2667","text":"2339"},{"range":"2668","text":"2339"},{"range":"2669","text":"2339"},"'handler' is never reassigned. Use 'const' instead.",{"range":"2670","text":"2339"},["2671","2672"],{"range":"2673","text":"2339"},"Argument 'buf' should be typed.","'buf' is defined but never used.",{"range":"2674","text":"2675"},{"range":"2676","text":"2572"},{"range":"2677","text":"2334"},{"range":"2678","text":"2334"},"'timeStamp' is never reassigned. Use 'const' instead.",{"range":"2679","text":"2339"},{"range":"2680","text":"2334"},{"range":"2681","text":"2334"},"'pt0_nu' is assigned a value but never used.","'pt1_nu' is assigned a value but never used.","'st' is assigned a value but never used.","'minFactor' is never reassigned. Use 'const' instead.",{"range":"2682","text":"2339"},"'m' is never reassigned. Use 'const' instead.",{"range":"2683","text":"2339"},"'rotation' is never reassigned. Use 'const' instead.","AssignmentPattern",{"range":"2684","text":"2393"},{"range":"2685","text":"2339"},{"range":"2686","text":"2393"},{"range":"2687","text":"2393"},"'ret' is assigned a value but never used.","'imageChanged' is assigned a value but never used.","'zoom' is defined but never used.","'img' is never reassigned. Use 'const' instead.",{"range":"2688","text":"2339"},{"range":"2689","text":"2334"},["2690","2691"],{"range":"2692","text":"2339"},{"range":"2692","text":"2339"},{"range":"2693","text":"2339"},"'ctx' is never reassigned. Use 'const' instead.",{"range":"2694","text":"2339"},"'renderTask' is never reassigned. Use 'const' instead.",{"range":"2695","text":"2339"},{"range":"2696","text":"2339"},["2697","2698"],["2699","2700"],{"range":"2701","text":"2339"},{"range":"2701","text":"2339"},{"range":"2702","text":"2339"},{"range":"2703","text":"2339"},{"range":"2704","text":"2339"},{"range":"2705","text":"2339"},{"range":"2706","text":"2339"},"'renderCount' is never reassigned. Use 'const' instead.",{"range":"2707","text":"2339"},"'status' is never reassigned. Use 'const' instead.",{"range":"2708","text":"2339"},"'PDF_VIEWPORT_DESC' is defined but never used.",{"range":"2709","text":"2663"},"'pdf' is defined but never used.","react/jsx-key","Missing \"key\" prop for element in iterator","JSXElement",{"range":"2710","text":"2393"},"'viewport' is never reassigned. Use 'const' instead.",{"range":"2711","text":"2339"},{"range":"2712","text":"2339"},{"range":"2713","text":"2339"},["2714","2715"],"'IPdfPageDesc' is defined but never used.","'IPageSOBP' is defined but never used.","'IPdfDocDesc' is defined but never used.",{"range":"2716","text":"2334"},"Unexpected empty constructor.",{"range":"2717","text":"2334"},{"range":"2718","text":"2334"},{"range":"2719","text":"2334"},{"range":"2720","text":"2334"},{"range":"2721","text":"2334"},{"range":"2722","text":"2334"},["2723","2724"],{"range":"2725","text":"2334"},{"range":"2726","text":"2334"},{"range":"2727","text":"2334"},{"range":"2728","text":"2334"},{"range":"2729","text":"2339"},"'srcMapped' is defined but never used.",["2730","2731"],{"range":"2732","text":"2393"},{"range":"2733","text":"2393"},{"range":"2734","text":"2393"},{"range":"2735","text":"2334"},{"range":"2736","text":"2393"},{"range":"2737","text":"2334"},"'dpi' is never reassigned. Use 'const' instead.","'center' is never reassigned. Use 'const' instead.",{"range":"2738","text":"2339"},{"range":"2739","text":"2339"},{"range":"2740","text":"2339"},{"range":"2741","text":"2339"},{"range":"2742","text":"2339"},{"range":"2743","text":"2393"},"'numerator' is never reassigned. Use 'const' instead.",{"range":"2744","text":"2339"},{"range":"2745","text":"2393"},{"range":"2746","text":"2393"},{"range":"2747","text":"2393"},{"range":"2748","text":"2393"},{"range":"2749","text":"2393"},{"range":"2750","text":"2393"},"'id' is never reassigned. Use 'const' instead.",{"range":"2751","text":"2339"},"'pd' is never reassigned. Use 'const' instead.",{"range":"2752","text":"2339"},"'mainCanvas' is never reassigned. Use 'const' instead.",{"range":"2753","text":"2339"},"'mediaCssWidth' is never reassigned. Use 'const' instead.",{"range":"2754","text":"2339"},"'mediaCssHeight' is never reassigned. Use 'const' instead.",{"range":"2755","text":"2339"},"'sheetIndex' is never reassigned. Use 'const' instead.",{"range":"2756","text":"2339"},{"range":"2757","text":"2339"},{"range":"2757","text":"2339"},{"range":"2757","text":"2339"},{"range":"2758","text":"2393"},"'promise' is never reassigned. Use 'const' instead.",{"range":"2759","text":"2339"},"no-async-promise-executor","Promise executor functions should not be async.","async","'reject' is defined but never used.","'blob' is never reassigned. Use 'const' instead.",{"range":"2760","text":"2339"},"'dstPts' is never reassigned. Use 'const' instead.",{"range":"2761","text":"2339"},"'r1' is never reassigned. Use 'const' instead.",{"range":"2762","text":"2339"},"'r2' is never reassigned. Use 'const' instead.",{"range":"2763","text":"2339"},[1707,1710],"let",[1764,1767],[1819,1822],[1880,1883],[2547,2550],"const",[2626,2629],{"messageId":"2764","fix":"2765","desc":"2766"},{"messageId":"2767","fix":"2768","desc":"2769"},[2427,2430],[2470,2473],[2743,2746],[3143,3146],[3260,3263],[3377,3380],[4137,4140],[4335,4338],[4656,4659],[4811,4814],[4993,4996],[5270,5273],[5423,5426],[5575,5578],[7038,7041],[7239,7242],[7854,7857],[8347,8350],[8694,8697],[9206,9209],[1243,1246],{"messageId":"2764","fix":"2770","desc":"2766"},{"messageId":"2767","fix":"2771","desc":"2769"},{"messageId":"2764","fix":"2772","desc":"2766"},{"messageId":"2767","fix":"2773","desc":"2769"},[489,492],[723,726],[779,782],[884,887],{"messageId":"2764","fix":"2774","desc":"2766"},{"messageId":"2767","fix":"2775","desc":"2769"},[1518,1521],{"messageId":"2764","fix":"2776","desc":"2766"},{"messageId":"2767","fix":"2777","desc":"2769"},[95,98],[668,671],[723,726],[781,784],[815,818],[1298,1301],[1512,1515],[3860,3863],{"messageId":"2764","fix":"2778","desc":"2766"},{"messageId":"2767","fix":"2779","desc":"2769"},[3905,3908],[4283,4286],[5231,5234],[316,319],[367,370],[440,448],"",[489,497],[2560,2563],[3892,3895],[4355,4358],[7447,7450],[1844,1852],[2773,2776],[2805,2808],[4456,4459],[4965,4968],[4990,4993],[5303,5306],[5361,5364],[6149,6152],[6834,6837],[7010,7013],[7063,7066],[7823,7826],[9559,9562],[9606,9609],[9684,9687],[10322,10325],[10660,10673],";\r\n\r\n    let",[10670,10673],[11224,11227],[11273,11276],[11766,11769],[12162,12165],[12293,12296],[12757,12760],[13179,13182],[13616,13619],[60,63],[552,555],[591,594],[637,640],[687,690],[843,846],[865,868],[1012,1015],[1038,1041],[1080,1083],[1122,1125],[1164,1167],[1208,1211],[1256,1259],[1299,1302],[1336,1339],[1373,1376],[1410,1413],[1449,1452],[1500,1503],[1556,1559],[1612,1615],[1668,1671],[1856,1859],[2646,2649],[2931,2934],[3011,3014],[3629,3632],[3708,3711],{"messageId":"2764","fix":"2780","desc":"2766"},{"messageId":"2767","fix":"2781","desc":"2769"},[3758,3761],[4133,4136],[4263,4266],[4295,4298],[4337,4340],[4375,4378],[4462,4465],[416,419],[575,578],[795,798],[886,889],[4222,4225],[4270,4273],[4750,4753],[5130,5133],[5634,5637],[5721,5724],[5747,5750],[5826,5829],[998,1007],[984,996],"}\r\n\r\nexport",[1916,1924],[2022,2030],[2403,2412],[2481,2490],[2730,2739],[3209,3217],[3379,3388],[5143,5146],[5780,5783],[6067,6070],[6116,6119],[6534,6537],[7034,7037],[7405,7408],[7945,7948],{"messageId":"2764","fix":"2782","desc":"2766"},{"messageId":"2767","fix":"2783","desc":"2769"},[8906,8909],[8943,8946],{"messageId":"2764","fix":"2784","desc":"2766"},{"messageId":"2767","fix":"2785","desc":"2769"},[9228,9231],[9299,9302],[9392,9395],[9873,9876],[9908,9911],{"messageId":"2764","fix":"2786","desc":"2766"},{"messageId":"2767","fix":"2787","desc":"2769"},[10231,10234],{"messageId":"2764","fix":"2788","desc":"2766"},{"messageId":"2767","fix":"2789","desc":"2769"},[10695,10698],[10818,10821],[10857,10860],{"messageId":"2764","fix":"2790","desc":"2766"},{"messageId":"2767","fix":"2791","desc":"2769"},[12034,12037],[12747,12750],[12783,12786],[12833,12836],[13182,13185],[13607,13610],[13642,13645],[13687,13690],[13728,13731],[13756,13759],[13788,13791],[13823,13826],[14077,14080],[14121,14124],[14168,14171],[15540,15543],[15575,15578],[15618,15621],[15646,15649],[15731,15734],[15916,15919],[16122,16125],[16335,16338],[16502,16505],[16543,16546],[16860,16863],[16895,16898],[17154,17157],[17179,17182],[17229,17232],[17266,17269],[18207,18210],[2135,2143],[2505,2508],[4235,4238],[4371,4374],[4416,4419],[6729,6732],[7971,7974],[8970,8973],[10884,10887],{"messageId":"2764","fix":"2792","desc":"2766"},{"messageId":"2767","fix":"2793","desc":"2769"},{"messageId":"2764","fix":"2794","desc":"2766"},{"messageId":"2767","fix":"2795","desc":"2769"},[3669,3672],{"messageId":"2764","fix":"2796","desc":"2766"},{"messageId":"2767","fix":"2797","desc":"2769"},[1313,1316],[171,210],"}\r\n\r\n\r\n\r\n/** @enum {number} */\r\nexport",[314,353],"}\r\n\r\n\r\n\r\n/** @enum {string} */\r\nexport",[730,750],"}\r\n\r\n\r\n\r\n\r\n\r\nexport",[861,863],"}",[16233,16236],[23083,23086],[27617,27620],[1828,1831],[1858,1861],[1922,1925],[2041,2044],[2270,2273],[2591,2594],[2631,2634],[2981,2984],[3001,3004],[3081,3084],[3136,3139],[3210,3213],[3267,3270],[3297,3300],[3331,3334],[3370,3373],[3947,3950],[4276,4279],[4305,4308],[4340,4343],[4536,4539],[5581,5584],[5612,5615],[5649,5652],[7289,7292],[351,367],"}\r\n\r\n\r\n\r\nexport",[1196,1204],[1246,1254],[1279,1287],[2083,2086],[660,663],{"messageId":"2764","fix":"2798","desc":"2766"},{"messageId":"2767","fix":"2799","desc":"2769"},{"messageId":"2764","fix":"2800","desc":"2766"},{"messageId":"2767","fix":"2801","desc":"2769"},[3629,3632],[4306,4309],[4711,4714],[4866,4869],{"messageId":"2764","fix":"2802","desc":"2766"},{"messageId":"2767","fix":"2803","desc":"2769"},[5334,5337],[5381,5384],[5573,5576],[6174,6177],[6256,6259],[6370,6373],[6455,6458],[7049,7052],[7304,7307],[7351,7354],[8180,8183],[8606,8609],[8628,8631],[9758,9761],[10015,10018],[10288,10291],[10621,10624],[10673,10676],[11668,11671],[12635,12638],[12684,12687],[13184,13187],[13462,13465],[13523,13526],[13606,13609],[14187,14190],[14230,14233],[14289,14292],[602,605],[639,642],[1489,1492],[1619,1622],[1135,1143],{"messageId":"2764","fix":"2804","desc":"2766"},{"messageId":"2767","fix":"2805","desc":"2769"},{"messageId":"2764","fix":"2806","desc":"2766"},{"messageId":"2767","fix":"2807","desc":"2769"},{"messageId":"2764","fix":"2808","desc":"2766"},{"messageId":"2767","fix":"2809","desc":"2769"},{"messageId":"2764","fix":"2810","desc":"2766"},{"messageId":"2767","fix":"2811","desc":"2769"},{"messageId":"2764","fix":"2812","desc":"2766"},{"messageId":"2767","fix":"2813","desc":"2769"},[610,613],[1499,1509],"}\r\n\r\ntype",[3953,3956],[4166,4169],[4943,4946],[5223,5226],[5752,5755],[6193,6196],[6773,6776],{"messageId":"2764","fix":"2814","desc":"2766"},{"messageId":"2767","fix":"2815","desc":"2769"},[7377,7380],[173,187],"}\r\n\r\n\r\nexport",[459,461],[791,794],[1170,1173],[1532,1535],[800,803],[828,831],[565,568],[1064,1067],[64,72],[481,484],[866,875],[904,913],[4194,4197],[4240,4243],{"messageId":"2764","fix":"2816","desc":"2766"},{"messageId":"2767","fix":"2817","desc":"2769"},[4478,4481],[4519,4522],[4727,4730],[5080,5083],[5198,5201],{"messageId":"2764","fix":"2818","desc":"2766"},{"messageId":"2767","fix":"2819","desc":"2769"},{"messageId":"2764","fix":"2820","desc":"2766"},{"messageId":"2767","fix":"2821","desc":"2769"},[6019,6022],[6058,6061],[6091,6094],[6332,6335],[6549,6552],[6667,6670],[6728,6731],[6928,6931],[588,598],[951,960],[2462,2465],[2557,2560],[3470,3473],{"messageId":"2764","fix":"2822","desc":"2766"},{"messageId":"2767","fix":"2823","desc":"2769"},[263,266],[704,707],[731,734],[3536,3539],[3592,3595],[4235,4238],[4314,4317],{"messageId":"2764","fix":"2824","desc":"2766"},{"messageId":"2767","fix":"2825","desc":"2769"},[754,757],[804,807],[829,832],[854,857],[5716,5719],{"messageId":"2764","fix":"2826","desc":"2766"},{"messageId":"2767","fix":"2827","desc":"2769"},[10272,10281],[10787,10796],[11896,11905],[12553,12556],[13170,13179],[13760,13763],[18613,18616],[2359,2362],[2442,2445],[2466,2469],[2501,2504],[3039,3048],[3063,3066],[3532,3541],[3696,3705],[3838,3847],[3997,4006],[4158,4167],[1574,1582],[7204,7207],[7257,7260],[10922,10925],[11754,11757],[11790,11793],[14260,14263],[14298,14301],[285,293],[1069,1072],[1699,1702],[4863,4866],[586,589],[607,610],"suggestUnknown",{"range":"2828","text":"2829"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"2828","text":"2830"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"2831","text":"2829"},{"range":"2831","text":"2830"},{"range":"2832","text":"2829"},{"range":"2832","text":"2830"},{"range":"2833","text":"2829"},{"range":"2833","text":"2830"},{"range":"2834","text":"2829"},{"range":"2834","text":"2830"},{"range":"2835","text":"2829"},{"range":"2835","text":"2830"},{"range":"2836","text":"2829"},{"range":"2836","text":"2830"},{"range":"2837","text":"2829"},{"range":"2837","text":"2830"},{"range":"2838","text":"2829"},{"range":"2838","text":"2830"},{"range":"2839","text":"2829"},{"range":"2839","text":"2830"},{"range":"2840","text":"2829"},{"range":"2840","text":"2830"},{"range":"2841","text":"2829"},{"range":"2841","text":"2830"},{"range":"2842","text":"2829"},{"range":"2842","text":"2830"},{"range":"2843","text":"2829"},{"range":"2843","text":"2830"},{"range":"2844","text":"2829"},{"range":"2844","text":"2830"},{"range":"2845","text":"2829"},{"range":"2845","text":"2830"},{"range":"2846","text":"2829"},{"range":"2846","text":"2830"},{"range":"2847","text":"2829"},{"range":"2847","text":"2830"},{"range":"2848","text":"2829"},{"range":"2848","text":"2830"},{"range":"2849","text":"2829"},{"range":"2849","text":"2830"},{"range":"2850","text":"2829"},{"range":"2850","text":"2830"},{"range":"2851","text":"2829"},{"range":"2851","text":"2830"},{"range":"2852","text":"2829"},{"range":"2852","text":"2830"},{"range":"2853","text":"2829"},{"range":"2853","text":"2830"},{"range":"2854","text":"2829"},{"range":"2854","text":"2830"},{"range":"2855","text":"2829"},{"range":"2855","text":"2830"},{"range":"2856","text":"2829"},{"range":"2856","text":"2830"},{"range":"2857","text":"2829"},{"range":"2857","text":"2830"},{"range":"2858","text":"2829"},{"range":"2858","text":"2830"},{"range":"2859","text":"2829"},{"range":"2859","text":"2830"},[1889,1892],"unknown","never",[792,795],[808,811],[1245,1248],[1975,1978],[3873,3876],[3716,3719],[8891,8894],[9213,9216],[10204,10207],[10680,10683],[12019,12022],[400,403],[728,731],[256,259],[3250,3253],[3546,3549],[5137,5140],[1979,1982],[2578,2581],[314,317],[328,331],[1144,1147],[7322,7325],[4435,4438],[5345,5348],[5976,5979],[298,301],[1552,1555],[8038,8041]]